// <auto-generated />
using System;
using MC_Universo_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MC_Universo_API.Migrations
{
    [DbContext(typeof(UniversoContext))]
    [Migration("20231021002536_ColumnaGuidAgregadaTablasPublicaciones")]
    partial class ColumnaGuidAgregadaTablasPublicaciones
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MC_Universo_API.Models.AccionesAfirmativas.CandidatoPersona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("CandidatoId")
                        .HasColumnType("integer")
                        .HasColumnName("candidato_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("PersonaId")
                        .HasColumnType("integer")
                        .HasColumnName("persona_id");

                    b.HasKey("Id")
                        .HasName("pk_candidato_persona");

                    b.HasIndex("CandidatoId")
                        .HasDatabaseName("ix_candidato_persona_candidato_id");

                    b.HasIndex("PersonaId")
                        .HasDatabaseName("ix_candidato_persona_persona_id");

                    b.ToTable("candidato_persona", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.AccionesAfirmativas.CatalogoCircunscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("Circunscripcion")
                        .HasColumnType("integer")
                        .HasColumnName("circunscripcion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_circunscripcion");

                    b.ToTable("catalogo_circunscripcion", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Circunscripcion = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(163),
                            Nombre = "Circunscripcion 1"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Circunscripcion = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(165),
                            Nombre = "Circunscripcion 2"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Circunscripcion = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(167),
                            Nombre = "Circunscripcion 3"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            Circunscripcion = 4,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(168),
                            Nombre = "Circunscripcion 4"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            Circunscripcion = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(168),
                            Nombre = "Circunscripcion 5"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.AccionesAfirmativas.CatalogoNivelCargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("NombreNivel")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre_nivel");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_nivel_cargo");

                    b.ToTable("catalogo_nivel_cargo", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.AccionesAfirmativas.CatalogoRepresentante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("NivelCargo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nivel_cargo");

                    b.Property<string>("NombreCargo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre_cargo");

                    b.Property<string>("Principio")
                        .HasColumnType("text")
                        .HasColumnName("principio");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_representante");

                    b.ToTable("catalogo_representante", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(200),
                            NivelCargo = "Federal",
                            NombreCargo = "Diputación",
                            Principio = "Representación Proporcional"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(205),
                            NivelCargo = "Federal",
                            NombreCargo = "Diputación",
                            Principio = "Mayoría Relativa"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(207),
                            NivelCargo = "Federal",
                            NombreCargo = "Senaduría",
                            Principio = "Representación Proporcional"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(208),
                            NivelCargo = "Federal",
                            NombreCargo = "Senaduría",
                            Principio = "Mayoría Relativa"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(209),
                            NivelCargo = "Federal",
                            NombreCargo = "Senaduría",
                            Principio = "Primera Minoria"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.AccionesAfirmativas.CircunscripcionEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("CircuncripcionId")
                        .HasColumnType("integer")
                        .HasColumnName("circuncripcion_id");

                    b.Property<int>("EntidadId")
                        .HasColumnType("integer")
                        .HasColumnName("entidad_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.HasKey("Id")
                        .HasName("pk_circunscripcion_estado");

                    b.HasIndex("CircuncripcionId")
                        .HasDatabaseName("ix_circunscripcion_estado_circuncripcion_id");

                    b.HasIndex("EntidadId")
                        .HasDatabaseName("ix_circunscripcion_estado_entidad_id");

                    b.ToTable("circunscripcion_estado", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.AccionesAfirmativas.DatosEsperadosPorTipoCandidatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("AnioElecciones")
                        .HasColumnType("integer")
                        .HasColumnName("anio_elecciones");

                    b.Property<int>("CandidatosTotales")
                        .HasColumnType("integer")
                        .HasColumnName("candidatos_totales");

                    b.Property<int>("CantidadAdscripcionIndigena")
                        .HasColumnType("integer")
                        .HasColumnName("cantidad_adscripcion_indigena");

                    b.Property<int>("CantidadAfromexicanos")
                        .HasColumnType("integer")
                        .HasColumnName("cantidad_afromexicanos");

                    b.Property<int>("CantidadDiscapacitados")
                        .HasColumnType("integer")
                        .HasColumnName("cantidad_discapacitados");

                    b.Property<int>("CantidadDiversidadSexual")
                        .HasColumnType("integer")
                        .HasColumnName("cantidad_diversidad_sexual");

                    b.Property<int>("CantidadHombres")
                        .HasColumnType("integer")
                        .HasColumnName("cantidad_hombres");

                    b.Property<int>("CantidadMujeres")
                        .HasColumnType("integer")
                        .HasColumnName("cantidad_mujeres");

                    b.Property<int>("CantidadPersonaJoven")
                        .HasColumnType("integer")
                        .HasColumnName("cantidad_persona_joven");

                    b.Property<int>("CantidadPersonaMayor")
                        .HasColumnType("integer")
                        .HasColumnName("cantidad_persona_mayor");

                    b.Property<int>("CantidadPersonaMigrante")
                        .HasColumnType("integer")
                        .HasColumnName("cantidad_persona_migrante");

                    b.Property<int>("CatalogoRepresentanteId")
                        .HasColumnType("integer")
                        .HasColumnName("catalogo_representante_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.HasKey("Id")
                        .HasName("pk_datos_esperados_por_tipo_candidatura");

                    b.HasIndex("CatalogoRepresentanteId")
                        .HasDatabaseName("ix_datos_esperados_por_tipo_candidatura_catalogo_representante");

                    b.ToTable("datos_esperados_por_tipo_candidatura", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            AnioElecciones = 2024,
                            CandidatosTotales = 200,
                            CantidadAdscripcionIndigena = 11,
                            CantidadAfromexicanos = 1,
                            CantidadDiscapacitados = 1,
                            CantidadDiversidadSexual = 2,
                            CantidadHombres = 0,
                            CantidadMujeres = 0,
                            CantidadPersonaJoven = 0,
                            CantidadPersonaMayor = 0,
                            CantidadPersonaMigrante = 5,
                            CatalogoRepresentanteId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(239)
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            AnioElecciones = 2024,
                            CandidatosTotales = 300,
                            CantidadAdscripcionIndigena = 18,
                            CantidadAfromexicanos = 3,
                            CantidadDiscapacitados = 6,
                            CantidadDiversidadSexual = 2,
                            CantidadHombres = 0,
                            CantidadMujeres = 0,
                            CantidadPersonaJoven = 0,
                            CantidadPersonaMayor = 0,
                            CantidadPersonaMigrante = 0,
                            CatalogoRepresentanteId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(242)
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            AnioElecciones = 2024,
                            CandidatosTotales = 64,
                            CantidadAdscripcionIndigena = 5,
                            CantidadAfromexicanos = 1,
                            CantidadDiscapacitados = 1,
                            CantidadDiversidadSexual = 1,
                            CantidadHombres = 32,
                            CantidadMujeres = 32,
                            CantidadPersonaJoven = 0,
                            CantidadPersonaMayor = 0,
                            CantidadPersonaMigrante = 0,
                            CatalogoRepresentanteId = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(244)
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            AnioElecciones = 2024,
                            CandidatosTotales = 32,
                            CantidadAdscripcionIndigena = 5,
                            CantidadAfromexicanos = 1,
                            CantidadDiscapacitados = 1,
                            CantidadDiversidadSexual = 1,
                            CantidadHombres = 16,
                            CantidadMujeres = 16,
                            CantidadPersonaJoven = 0,
                            CantidadPersonaMayor = 0,
                            CantidadPersonaMigrante = 0,
                            CatalogoRepresentanteId = 4,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(246)
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            AnioElecciones = 2024,
                            CandidatosTotales = 0,
                            CantidadAdscripcionIndigena = 0,
                            CantidadAfromexicanos = 0,
                            CantidadDiscapacitados = 0,
                            CantidadDiversidadSexual = 0,
                            CantidadHombres = 0,
                            CantidadMujeres = 0,
                            CantidadPersonaJoven = 0,
                            CantidadPersonaMayor = 0,
                            CantidadPersonaMigrante = 0,
                            CatalogoRepresentanteId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(248)
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.AccionesAfirmativas.DetalleRequisitoDiputaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int?>("CandidatosDiputadosMayoriaRelativa")
                        .HasColumnType("integer")
                        .HasColumnName("candidatos_diputados_mayoria_relativa");

                    b.Property<int?>("CandidatosDiputadosRepresentacionProporcional")
                        .HasColumnType("integer")
                        .HasColumnName("candidatos_diputados_representacion_proporcional");

                    b.Property<int?>("CandidatosSenadorMayoriaRelativa")
                        .HasColumnType("integer")
                        .HasColumnName("candidatos_senador_mayoria_relativa");

                    b.Property<int?>("CandidatosSenadorPrimeraMinoria")
                        .HasColumnType("integer")
                        .HasColumnName("candidatos_senador_primera_minoria");

                    b.Property<int?>("CandidatosSenadorRepresentacionProporcional")
                        .HasColumnType("integer")
                        .HasColumnName("candidatos_senador_representacion_proporcional");

                    b.Property<int>("EstadoCircunscripcionId")
                        .HasColumnType("integer")
                        .HasColumnName("estado_circunscripcion_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int?>("FormulasMayoriaRelativa")
                        .HasColumnType("integer")
                        .HasColumnName("formulas_mayoria_relativa");

                    b.Property<int?>("FormulasRepresentacionProporcional")
                        .HasColumnType("integer")
                        .HasColumnName("formulas_representacion_proporcional");

                    b.HasKey("Id")
                        .HasName("pk_detalle_requisito_diputaciones");

                    b.HasIndex("EstadoCircunscripcionId")
                        .HasDatabaseName("ix_detalle_requisito_diputaciones_estado_circunscripcion_id");

                    b.ToTable("detalle_requisito_diputaciones", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 3,
                            CandidatosDiputadosRepresentacionProporcional = 3,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(290),
                            FormulasMayoriaRelativa = 1,
                            FormulasRepresentacionProporcional = 2
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 9,
                            CandidatosDiputadosRepresentacionProporcional = 5,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(297),
                            FormulasMayoriaRelativa = 1,
                            FormulasRepresentacionProporcional = 1
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 2,
                            CandidatosDiputadosRepresentacionProporcional = 2,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(299),
                            FormulasMayoriaRelativa = 1,
                            FormulasRepresentacionProporcional = 1
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 2,
                            CandidatosDiputadosRepresentacionProporcional = 2,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 4,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(301),
                            FormulasMayoriaRelativa = 4,
                            FormulasRepresentacionProporcional = 3
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 8,
                            CandidatosDiputadosRepresentacionProporcional = 4,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(303),
                            FormulasMayoriaRelativa = 1,
                            FormulasRepresentacionProporcional = 2
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 2,
                            CandidatosDiputadosRepresentacionProporcional = 3,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 6,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(305),
                            FormulasMayoriaRelativa = 1,
                            FormulasRepresentacionProporcional = 5
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 13,
                            CandidatosDiputadosRepresentacionProporcional = 5,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(307),
                            FormulasMayoriaRelativa = 4,
                            FormulasRepresentacionProporcional = 3
                        },
                        new
                        {
                            Id = 8,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 9,
                            CandidatosDiputadosRepresentacionProporcional = 5,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(309),
                            FormulasMayoriaRelativa = 1,
                            FormulasRepresentacionProporcional = 1
                        },
                        new
                        {
                            Id = 9,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 22,
                            CandidatosDiputadosRepresentacionProporcional = 23,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(310),
                            FormulasMayoriaRelativa = 2,
                            FormulasRepresentacionProporcional = 4
                        },
                        new
                        {
                            Id = 10,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 4,
                            CandidatosDiputadosRepresentacionProporcional = 1,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 10,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(312),
                            FormulasMayoriaRelativa = 1,
                            FormulasRepresentacionProporcional = 1
                        },
                        new
                        {
                            Id = 11,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 15,
                            CandidatosDiputadosRepresentacionProporcional = 4,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 11,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(314),
                            FormulasMayoriaRelativa = 1,
                            FormulasRepresentacionProporcional = 2
                        },
                        new
                        {
                            Id = 12,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 8,
                            CandidatosDiputadosRepresentacionProporcional = 3,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 12,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(316),
                            FormulasMayoriaRelativa = 2,
                            FormulasRepresentacionProporcional = 4
                        },
                        new
                        {
                            Id = 13,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 7,
                            CandidatosDiputadosRepresentacionProporcional = 3,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 13,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(318),
                            FormulasMayoriaRelativa = 1,
                            FormulasRepresentacionProporcional = 5
                        },
                        new
                        {
                            Id = 14,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 20,
                            CandidatosDiputadosRepresentacionProporcional = 11,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(320),
                            FormulasMayoriaRelativa = 1,
                            FormulasRepresentacionProporcional = 1
                        },
                        new
                        {
                            Id = 15,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 40,
                            CandidatosDiputadosRepresentacionProporcional = 25,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(321),
                            FormulasMayoriaRelativa = 1,
                            FormulasRepresentacionProporcional = 5
                        },
                        new
                        {
                            Id = 16,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 11,
                            CandidatosDiputadosRepresentacionProporcional = 9,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 16,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(323),
                            FormulasMayoriaRelativa = 1,
                            FormulasRepresentacionProporcional = 5
                        },
                        new
                        {
                            Id = 17,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 5,
                            CandidatosDiputadosRepresentacionProporcional = 4,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 17,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(325),
                            FormulasMayoriaRelativa = 2,
                            FormulasRepresentacionProporcional = 4
                        },
                        new
                        {
                            Id = 18,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 3,
                            CandidatosDiputadosRepresentacionProporcional = 5,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 18,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(327),
                            FormulasMayoriaRelativa = 1,
                            FormulasRepresentacionProporcional = 1
                        },
                        new
                        {
                            Id = 19,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 14,
                            CandidatosDiputadosRepresentacionProporcional = 9,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 19,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(329),
                            FormulasMayoriaRelativa = 1,
                            FormulasRepresentacionProporcional = 2
                        },
                        new
                        {
                            Id = 20,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 10,
                            CandidatosDiputadosRepresentacionProporcional = 10,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 20,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(331),
                            FormulasMayoriaRelativa = 4,
                            FormulasRepresentacionProporcional = 3
                        },
                        new
                        {
                            Id = 21,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 16,
                            CandidatosDiputadosRepresentacionProporcional = 7,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 21,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(333),
                            FormulasMayoriaRelativa = 2,
                            FormulasRepresentacionProporcional = 4
                        },
                        new
                        {
                            Id = 22,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 6,
                            CandidatosDiputadosRepresentacionProporcional = 3,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 22,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(335),
                            FormulasMayoriaRelativa = 1,
                            FormulasRepresentacionProporcional = 3
                        },
                        new
                        {
                            Id = 23,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 4,
                            CandidatosDiputadosRepresentacionProporcional = 3,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 23,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(337),
                            FormulasMayoriaRelativa = 4,
                            FormulasRepresentacionProporcional = 2
                        },
                        new
                        {
                            Id = 24,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 7,
                            CandidatosDiputadosRepresentacionProporcional = 8,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 24,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(338),
                            FormulasMayoriaRelativa = 1,
                            FormulasRepresentacionProporcional = 1
                        },
                        new
                        {
                            Id = 25,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 7,
                            CandidatosDiputadosRepresentacionProporcional = 6,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 25,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(340),
                            FormulasMayoriaRelativa = 1,
                            FormulasRepresentacionProporcional = 1
                        },
                        new
                        {
                            Id = 26,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 7,
                            CandidatosDiputadosRepresentacionProporcional = 5,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 26,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(342),
                            FormulasMayoriaRelativa = 1,
                            FormulasRepresentacionProporcional = 3
                        },
                        new
                        {
                            Id = 27,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 6,
                            CandidatosDiputadosRepresentacionProporcional = 2,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 27,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(344),
                            FormulasMayoriaRelativa = 4,
                            FormulasRepresentacionProporcional = 2
                        },
                        new
                        {
                            Id = 28,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 8,
                            CandidatosDiputadosRepresentacionProporcional = 2,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 28,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(345),
                            FormulasMayoriaRelativa = 1,
                            FormulasRepresentacionProporcional = 4
                        },
                        new
                        {
                            Id = 29,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 3,
                            CandidatosDiputadosRepresentacionProporcional = 3,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 29,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(347),
                            FormulasMayoriaRelativa = 2,
                            FormulasRepresentacionProporcional = 3
                        },
                        new
                        {
                            Id = 30,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 19,
                            CandidatosDiputadosRepresentacionProporcional = 16,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 30,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(349),
                            FormulasMayoriaRelativa = 4,
                            FormulasRepresentacionProporcional = 3
                        },
                        new
                        {
                            Id = 31,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 6,
                            CandidatosDiputadosRepresentacionProporcional = 2,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 31,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(350),
                            FormulasMayoriaRelativa = 4,
                            FormulasRepresentacionProporcional = 2
                        },
                        new
                        {
                            Id = 32,
                            Activo = true,
                            CandidatosDiputadosMayoriaRelativa = 4,
                            CandidatosDiputadosRepresentacionProporcional = 7,
                            CandidatosSenadorMayoriaRelativa = 2,
                            CandidatosSenadorPrimeraMinoria = 1,
                            CandidatosSenadorRepresentacionProporcional = 1,
                            EstadoCircunscripcionId = 32,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(354),
                            FormulasMayoriaRelativa = 1,
                            FormulasRepresentacionProporcional = 2
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.AccionesAfirmativas.DistritosFederales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int?>("AnioEleccion")
                        .HasColumnType("integer")
                        .HasColumnName("anio_eleccion");

                    b.Property<string>("BloqueConcentracionIndigena")
                        .HasColumnType("text")
                        .HasColumnName("bloque_concentracion_indigena");

                    b.Property<string>("CabeceraDistrital")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cabecera_distrital");

                    b.Property<int>("CircunscripcionId")
                        .HasColumnType("integer")
                        .HasColumnName("circunscripcion_id");

                    b.Property<int>("Distrito")
                        .HasColumnType("integer")
                        .HasColumnName("distrito");

                    b.Property<int>("EntidadId")
                        .HasColumnType("integer")
                        .HasColumnName("entidad_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("McCompetitividad")
                        .HasColumnType("text")
                        .HasColumnName("mc_competitividad");

                    b.Property<double?>("McPorcentaje")
                        .HasColumnType("double precision")
                        .HasColumnName("mc_porcentaje");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_distritos_federales");

                    b.HasIndex("CircunscripcionId")
                        .HasDatabaseName("ix_distritos_federales_circunscripcion_id");

                    b.HasIndex("EntidadId")
                        .HasDatabaseName("ix_distritos_federales_entidad_id");

                    b.ToTable("distritos_federales", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "JESUS MARIA",
                            CircunscripcionId = 2,
                            Distrito = 1,
                            EntidadId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(400),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.5,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "AGUASCALIENTES",
                            CircunscripcionId = 2,
                            Distrito = 2,
                            EntidadId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(409),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.5999999999999996,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "AGUASCALIENTES",
                            CircunscripcionId = 2,
                            Distrito = 3,
                            EntidadId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(411),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.0999999999999996,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "MEXICALI",
                            CircunscripcionId = 1,
                            Distrito = 1,
                            EntidadId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(413),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 7.0999999999999996,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "MEXICALI",
                            CircunscripcionId = 1,
                            Distrito = 2,
                            EntidadId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(414),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 5.7999999999999998,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "ENSENADA",
                            CircunscripcionId = 1,
                            Distrito = 3,
                            EntidadId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(416),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.0,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TIJUANA",
                            CircunscripcionId = 1,
                            Distrito = 4,
                            EntidadId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(418),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.2999999999999998,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 8,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TIJUANA",
                            CircunscripcionId = 1,
                            Distrito = 5,
                            EntidadId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(419),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.2999999999999998,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 9,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TIJUANA",
                            CircunscripcionId = 1,
                            Distrito = 6,
                            EntidadId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(421),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.4000000000000004,
                            Nombre = "Distrito 6"
                        },
                        new
                        {
                            Id = 10,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "MEXICALI",
                            CircunscripcionId = 1,
                            Distrito = 7,
                            EntidadId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(423),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.7999999999999998,
                            Nombre = "Distrito 7"
                        },
                        new
                        {
                            Id = 11,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TIJUANA",
                            CircunscripcionId = 1,
                            Distrito = 8,
                            EntidadId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(424),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.0,
                            Nombre = "Distrito 8"
                        },
                        new
                        {
                            Id = 12,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TECATE",
                            CircunscripcionId = 1,
                            Distrito = 9,
                            EntidadId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(426),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 5.5999999999999996,
                            Nombre = "Distrito 9"
                        },
                        new
                        {
                            Id = 13,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "LA PAZ",
                            CircunscripcionId = 1,
                            Distrito = 1,
                            EntidadId = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(427),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.6000000000000001,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 14,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "SAN JOSE DEL CABO",
                            CircunscripcionId = 1,
                            Distrito = 2,
                            EntidadId = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(434),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.8999999999999999,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 15,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "SAN FRANCISCO DE CAMPECHE",
                            CircunscripcionId = 3,
                            Distrito = 1,
                            EntidadId = 4,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(436),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 22.899999999999999,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 16,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "CIUDAD DEL CARMEN",
                            CircunscripcionId = 3,
                            Distrito = 2,
                            EntidadId = 4,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(437),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 15.199999999999999,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 17,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "PIEDRAS NEGRAS",
                            CircunscripcionId = 2,
                            Distrito = 1,
                            EntidadId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(439),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.8,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 18,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "SAN PEDRO",
                            CircunscripcionId = 2,
                            Distrito = 2,
                            EntidadId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(441),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.5,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 19,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "MONCLOVA",
                            CircunscripcionId = 2,
                            Distrito = 3,
                            EntidadId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(443),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.8999999999999999,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 20,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "SALTILLO",
                            CircunscripcionId = 2,
                            Distrito = 4,
                            EntidadId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(451),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.2000000000000002,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 21,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TORREON",
                            CircunscripcionId = 2,
                            Distrito = 5,
                            EntidadId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(453),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 0.90000000000000002,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 22,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "SALTILLO",
                            CircunscripcionId = 2,
                            Distrito = 6,
                            EntidadId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(455),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.0,
                            Nombre = "Distrito 6"
                        },
                        new
                        {
                            Id = 23,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TORREON",
                            CircunscripcionId = 2,
                            Distrito = 7,
                            EntidadId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(456),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.8,
                            Nombre = "Distrito 7"
                        },
                        new
                        {
                            Id = 24,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "RAMOS ARIZPE",
                            CircunscripcionId = 2,
                            Distrito = 8,
                            EntidadId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(458),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.2999999999999998,
                            Nombre = "Distrito 8"
                        },
                        new
                        {
                            Id = 25,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "COLIMA",
                            CircunscripcionId = 5,
                            Distrito = 1,
                            EntidadId = 6,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(459),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 18.199999999999999,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 26,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "VALLE DE LAS GARZAS",
                            CircunscripcionId = 5,
                            Distrito = 2,
                            EntidadId = 6,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(461),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 7.2999999999999998,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 27,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "PALENQUE",
                            CircunscripcionId = 3,
                            Distrito = 1,
                            EntidadId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(462),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.2999999999999998,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 28,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "BOCHIL",
                            CircunscripcionId = 3,
                            Distrito = 2,
                            EntidadId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(464),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.5,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 29,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "OCOSINGO",
                            CircunscripcionId = 3,
                            Distrito = 3,
                            EntidadId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(465),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.7,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 30,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "PICHUCALCO",
                            CircunscripcionId = 3,
                            Distrito = 4,
                            EntidadId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(467),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.8,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 31,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "SAN CRISTOBAL DE LAS CASAS",
                            CircunscripcionId = 3,
                            Distrito = 5,
                            EntidadId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(477),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.6000000000000001,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 32,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TONALA",
                            CircunscripcionId = 3,
                            Distrito = 6,
                            EntidadId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(479),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 5.2999999999999998,
                            Nombre = "Distrito 6"
                        },
                        new
                        {
                            Id = 33,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TUXTLA GUTIERREZ",
                            CircunscripcionId = 3,
                            Distrito = 7,
                            EntidadId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(480),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.3999999999999999,
                            Nombre = "Distrito 7"
                        },
                        new
                        {
                            Id = 34,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "COMITAN DE DOMINGUEZ",
                            CircunscripcionId = 3,
                            Distrito = 8,
                            EntidadId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(483),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.2000000000000002,
                            Nombre = "Distrito 8"
                        },
                        new
                        {
                            Id = 35,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TUXTLA GUTIERREZ",
                            CircunscripcionId = 3,
                            Distrito = 9,
                            EntidadId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(484),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 11.699999999999999,
                            Nombre = "Distrito 9"
                        },
                        new
                        {
                            Id = 36,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "VILLAFLORES",
                            CircunscripcionId = 3,
                            Distrito = 10,
                            EntidadId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(486),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.7000000000000002,
                            Nombre = "Distrito 10"
                        },
                        new
                        {
                            Id = 37,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "LAS MARGARITAS",
                            CircunscripcionId = 3,
                            Distrito = 11,
                            EntidadId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(487),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.7,
                            Nombre = "Distrito 11"
                        },
                        new
                        {
                            Id = 38,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TAPACHULA",
                            CircunscripcionId = 3,
                            Distrito = 12,
                            EntidadId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(489),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.6000000000000001,
                            Nombre = "Distrito 12"
                        },
                        new
                        {
                            Id = 39,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "HUEHUETAN",
                            CircunscripcionId = 3,
                            Distrito = 13,
                            EntidadId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(490),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.0,
                            Nombre = "Distrito 13"
                        },
                        new
                        {
                            Id = 40,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "JUAREZ",
                            CircunscripcionId = 1,
                            Distrito = 1,
                            EntidadId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(492),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 8.0,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 41,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "JUAREZ",
                            CircunscripcionId = 1,
                            Distrito = 2,
                            EntidadId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(493),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 5.7999999999999998,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 42,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "JUAREZ",
                            CircunscripcionId = 1,
                            Distrito = 3,
                            EntidadId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(495),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 7.9000000000000004,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 43,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "JUAREZ",
                            CircunscripcionId = 1,
                            Distrito = 4,
                            EntidadId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(496),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 6.5999999999999996,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 44,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "DELICIAS",
                            CircunscripcionId = 1,
                            Distrito = 5,
                            EntidadId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(498),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 11.4,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 45,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "CHIHUAHUA",
                            CircunscripcionId = 1,
                            Distrito = 6,
                            EntidadId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(499),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 6.0,
                            Nombre = "Distrito 6"
                        },
                        new
                        {
                            Id = 46,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "CUAUHTEMOC",
                            CircunscripcionId = 1,
                            Distrito = 7,
                            EntidadId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(501),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 7.7000000000000002,
                            Nombre = "Distrito 7"
                        },
                        new
                        {
                            Id = 47,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "CHIHUAHUA",
                            CircunscripcionId = 1,
                            Distrito = 8,
                            EntidadId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(502),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 6.2999999999999998,
                            Nombre = "Distrito 8"
                        },
                        new
                        {
                            Id = 48,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "HIDALGO DEL PARRAL",
                            CircunscripcionId = 1,
                            Distrito = 9,
                            EntidadId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(504),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 17.100000000000001,
                            Nombre = "Distrito 9"
                        },
                        new
                        {
                            Id = 49,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "GUSTAVO A. MADERO",
                            CircunscripcionId = 4,
                            Distrito = 1,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(505),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 3.1000000000000001,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 50,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "GUSTAVO A. MADERO",
                            CircunscripcionId = 4,
                            Distrito = 2,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(508),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 3.1000000000000001,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 51,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "AZCAPOTZALCO",
                            CircunscripcionId = 4,
                            Distrito = 3,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(510),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.5,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 52,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "IZTAPALAPA",
                            CircunscripcionId = 4,
                            Distrito = 4,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(511),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.3999999999999999,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 53,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TLALPAN",
                            CircunscripcionId = 4,
                            Distrito = 5,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(513),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 7.7999999999999998,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 54,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "LA MAGDALENA CONTRERAS",
                            CircunscripcionId = 4,
                            Distrito = 6,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(514),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.2000000000000002,
                            Nombre = "Distrito 6"
                        },
                        new
                        {
                            Id = 55,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "GUSTAVO A. MADERO",
                            CircunscripcionId = 4,
                            Distrito = 7,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(516),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.2000000000000002,
                            Nombre = "Distrito 7"
                        },
                        new
                        {
                            Id = 56,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "COYOACAN",
                            CircunscripcionId = 4,
                            Distrito = 8,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(518),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.0999999999999996,
                            Nombre = "Distrito 8"
                        },
                        new
                        {
                            Id = 57,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TLAHUAC",
                            CircunscripcionId = 4,
                            Distrito = 9,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(519),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 3.1000000000000001,
                            Nombre = "Distrito 9"
                        },
                        new
                        {
                            Id = 58,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "MIGUEL HIDALGO",
                            CircunscripcionId = 4,
                            Distrito = 10,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(521),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.7000000000000002,
                            Nombre = "Distrito 10"
                        },
                        new
                        {
                            Id = 59,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "VENUSTIANO CARRANZA",
                            CircunscripcionId = 4,
                            Distrito = 11,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(522),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.7999999999999998,
                            Nombre = "Distrito 11"
                        },
                        new
                        {
                            Id = 60,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "CUAUHTEMOC",
                            CircunscripcionId = 4,
                            Distrito = 12,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(524),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.5,
                            Nombre = "Distrito 12"
                        },
                        new
                        {
                            Id = 61,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "IZTACALCO",
                            CircunscripcionId = 4,
                            Distrito = 13,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(525),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.2999999999999998,
                            Nombre = "Distrito 13"
                        },
                        new
                        {
                            Id = 62,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TLALPAN",
                            CircunscripcionId = 4,
                            Distrito = 14,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(527),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 6.7000000000000002,
                            Nombre = "Distrito 14"
                        },
                        new
                        {
                            Id = 63,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "BENITO JUAREZ",
                            CircunscripcionId = 4,
                            Distrito = 15,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(529),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.7999999999999998,
                            Nombre = "Distrito 15"
                        },
                        new
                        {
                            Id = 64,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "ALVARO OBREGON",
                            CircunscripcionId = 4,
                            Distrito = 16,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(530),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.2999999999999998,
                            Nombre = "Distrito 16"
                        },
                        new
                        {
                            Id = 65,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "ALVARO OBREGON",
                            CircunscripcionId = 4,
                            Distrito = 17,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(532),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 3.0,
                            Nombre = "Distrito 17"
                        },
                        new
                        {
                            Id = 66,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "IZTAPALAPA",
                            CircunscripcionId = 4,
                            Distrito = 18,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(534),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.2000000000000002,
                            Nombre = "Distrito 18"
                        },
                        new
                        {
                            Id = 67,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "COYOACAN",
                            CircunscripcionId = 4,
                            Distrito = 19,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(536),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 3.1000000000000001,
                            Nombre = "Distrito 19"
                        },
                        new
                        {
                            Id = 68,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "IZTAPALAPA",
                            CircunscripcionId = 4,
                            Distrito = 20,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(537),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.2999999999999998,
                            Nombre = "Distrito 20"
                        },
                        new
                        {
                            Id = 69,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "XOCHIMILCO",
                            CircunscripcionId = 4,
                            Distrito = 21,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(539),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.8999999999999999,
                            Nombre = "Distrito 21"
                        },
                        new
                        {
                            Id = 70,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "IZTAPALAPA",
                            CircunscripcionId = 4,
                            Distrito = 22,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(540),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 3.0,
                            Nombre = "Distrito 22"
                        },
                        new
                        {
                            Id = 71,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "DURANGO",
                            CircunscripcionId = 1,
                            Distrito = 1,
                            EntidadId = 10,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(542),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.6000000000000001,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 72,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "GOMEZ PALACIO",
                            CircunscripcionId = 1,
                            Distrito = 2,
                            EntidadId = 10,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(543),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.7999999999999998,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 73,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "LERDO",
                            CircunscripcionId = 1,
                            Distrito = 3,
                            EntidadId = 10,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(545),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.6000000000000001,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 74,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "DURANGO",
                            CircunscripcionId = 1,
                            Distrito = 4,
                            EntidadId = 10,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(546),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 10.800000000000001,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 75,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "SAN LUIS DE LA PAZ",
                            CircunscripcionId = 2,
                            Distrito = 1,
                            EntidadId = 11,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(554),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.7,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 76,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "SAN MIGUEL DE ALLENDE",
                            CircunscripcionId = 2,
                            Distrito = 2,
                            EntidadId = 11,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(556),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 5.0,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 77,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "LEON",
                            CircunscripcionId = 2,
                            Distrito = 3,
                            EntidadId = 11,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(557),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.3999999999999999,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 78,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "GUANAJUATO",
                            CircunscripcionId = 2,
                            Distrito = 4,
                            EntidadId = 11,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(559),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.2999999999999998,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 79,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "LEON",
                            CircunscripcionId = 2,
                            Distrito = 5,
                            EntidadId = 11,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(561),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.2999999999999998,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 80,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "LEON",
                            CircunscripcionId = 2,
                            Distrito = 6,
                            EntidadId = 11,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(562),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.2000000000000002,
                            Nombre = "Distrito 6"
                        },
                        new
                        {
                            Id = 81,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "SAN FRANCISCO DEL RINCON",
                            CircunscripcionId = 2,
                            Distrito = 7,
                            EntidadId = 11,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(564),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.2000000000000002,
                            Nombre = "Distrito 7"
                        },
                        new
                        {
                            Id = 82,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "SALAMANCA",
                            CircunscripcionId = 2,
                            Distrito = 8,
                            EntidadId = 11,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(565),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 8.0999999999999996,
                            Nombre = "Distrito 8"
                        },
                        new
                        {
                            Id = 83,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "IRAPUATO",
                            CircunscripcionId = 2,
                            Distrito = 9,
                            EntidadId = 11,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(567),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.3999999999999999,
                            Nombre = "Distrito 9"
                        },
                        new
                        {
                            Id = 84,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "URIANGATO",
                            CircunscripcionId = 2,
                            Distrito = 10,
                            EntidadId = 11,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(568),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 8.0,
                            Nombre = "Distrito 10"
                        },
                        new
                        {
                            Id = 85,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "LEON",
                            CircunscripcionId = 2,
                            Distrito = 11,
                            EntidadId = 11,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(570),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 3.2000000000000002,
                            Nombre = "Distrito 11"
                        },
                        new
                        {
                            Id = 86,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "ACAMBARO",
                            CircunscripcionId = 2,
                            Distrito = 12,
                            EntidadId = 11,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(571),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.0,
                            Nombre = "Distrito 12"
                        },
                        new
                        {
                            Id = 87,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "CELAYA",
                            CircunscripcionId = 2,
                            Distrito = 13,
                            EntidadId = 11,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(573),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.7000000000000002,
                            Nombre = "Distrito 13"
                        },
                        new
                        {
                            Id = 88,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "VALLE DE SANTIAGO",
                            CircunscripcionId = 2,
                            Distrito = 14,
                            EntidadId = 11,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(574),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 6.2000000000000002,
                            Nombre = "Distrito 14"
                        },
                        new
                        {
                            Id = 89,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "IRAPUATO",
                            CircunscripcionId = 2,
                            Distrito = 15,
                            EntidadId = 11,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(576),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.0999999999999996,
                            Nombre = "Distrito 15"
                        },
                        new
                        {
                            Id = 90,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "PUNGARABATO",
                            CircunscripcionId = 4,
                            Distrito = 1,
                            EntidadId = 12,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(577),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.2999999999999998,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 91,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "ACAPULCO DE JUAREZ",
                            CircunscripcionId = 4,
                            Distrito = 2,
                            EntidadId = 12,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(579),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.7999999999999998,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 92,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "ZIHUATANEJO DE AZUETA",
                            CircunscripcionId = 4,
                            Distrito = 3,
                            EntidadId = 12,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(580),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.8,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 93,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "ACAPULCO DE JUAREZ",
                            CircunscripcionId = 4,
                            Distrito = 4,
                            EntidadId = 12,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(582),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 5.9000000000000004,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 94,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "TLAPA DE COMONFORT",
                            CircunscripcionId = 4,
                            Distrito = 5,
                            EntidadId = 12,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(583),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 5.0,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 95,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "CHILAPA DE ALVAREZ",
                            CircunscripcionId = 4,
                            Distrito = 6,
                            EntidadId = 12,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(585),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.0,
                            Nombre = "Distrito 6"
                        },
                        new
                        {
                            Id = 96,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "CHILPANCINGO DE LOS BRAVO",
                            CircunscripcionId = 4,
                            Distrito = 7,
                            EntidadId = 12,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(588),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.5,
                            Nombre = "Distrito 7"
                        },
                        new
                        {
                            Id = 97,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "OMETEPEC",
                            CircunscripcionId = 4,
                            Distrito = 8,
                            EntidadId = 12,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(589),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.6000000000000001,
                            Nombre = "Distrito 8"
                        },
                        new
                        {
                            Id = 98,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "HUEJUTLA DE REYES",
                            CircunscripcionId = 4,
                            Distrito = 1,
                            EntidadId = 13,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(591),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.3999999999999999,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 99,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "IXMIQUILPAN",
                            CircunscripcionId = 4,
                            Distrito = 2,
                            EntidadId = 13,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(592),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.5,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 100,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "ACTOPAN",
                            CircunscripcionId = 4,
                            Distrito = 3,
                            EntidadId = 13,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(594),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.2000000000000002,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 101,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "TULANCINGO DE BRAVO",
                            CircunscripcionId = 4,
                            Distrito = 4,
                            EntidadId = 13,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(595),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 3.1000000000000001,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 102,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "TULA DE ALLENDE",
                            CircunscripcionId = 4,
                            Distrito = 5,
                            EntidadId = 13,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(597),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.7999999999999998,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 103,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "PACHUCA DE SOTO",
                            CircunscripcionId = 4,
                            Distrito = 6,
                            EntidadId = 13,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(598),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.3999999999999999,
                            Nombre = "Distrito 6"
                        },
                        new
                        {
                            Id = 104,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TEPEAPULCO",
                            CircunscripcionId = 4,
                            Distrito = 7,
                            EntidadId = 13,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(600),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.8999999999999999,
                            Nombre = "Distrito 7"
                        },
                        new
                        {
                            Id = 105,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TEQUILA",
                            CircunscripcionId = 1,
                            Distrito = 1,
                            EntidadId = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(602),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 30.0,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 106,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "LAGOS DE MORENO",
                            CircunscripcionId = 1,
                            Distrito = 2,
                            EntidadId = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(603),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 33.700000000000003,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 107,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TEPATITLAN DE MORELOS",
                            CircunscripcionId = 1,
                            Distrito = 3,
                            EntidadId = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(605),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 25.800000000000001,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 108,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "ZAPOPAN",
                            CircunscripcionId = 1,
                            Distrito = 4,
                            EntidadId = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(606),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 36.600000000000001,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 109,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "PUERTO VALLARTA",
                            CircunscripcionId = 1,
                            Distrito = 5,
                            EntidadId = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(608),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 28.600000000000001,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 110,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "ZAPOPAN",
                            CircunscripcionId = 1,
                            Distrito = 6,
                            EntidadId = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(609),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 40.899999999999999,
                            Nombre = "Distrito 6"
                        },
                        new
                        {
                            Id = 111,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "GUADALAJARA",
                            CircunscripcionId = 1,
                            Distrito = 7,
                            EntidadId = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(611),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 22.399999999999999,
                            Nombre = "Distrito 7"
                        },
                        new
                        {
                            Id = 112,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "GUADALAJARA",
                            CircunscripcionId = 1,
                            Distrito = 8,
                            EntidadId = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(612),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 39.799999999999997,
                            Nombre = "Distrito 8"
                        },
                        new
                        {
                            Id = 113,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "ZAPOPAN",
                            CircunscripcionId = 1,
                            Distrito = 9,
                            EntidadId = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(614),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 32.100000000000001,
                            Nombre = "Distrito 9"
                        },
                        new
                        {
                            Id = 114,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TONALA",
                            CircunscripcionId = 1,
                            Distrito = 10,
                            EntidadId = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(615),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 44.700000000000003,
                            Nombre = "Distrito 10"
                        },
                        new
                        {
                            Id = 115,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "GUADALAJARA",
                            CircunscripcionId = 1,
                            Distrito = 11,
                            EntidadId = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(617),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 32.700000000000003,
                            Nombre = "Distrito 11"
                        },
                        new
                        {
                            Id = 116,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TLAJOMULCO DE ZUÑIGA",
                            CircunscripcionId = 1,
                            Distrito = 12,
                            EntidadId = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(618),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 38.5,
                            Nombre = "Distrito 12"
                        },
                        new
                        {
                            Id = 117,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "SAN PEDRO TLAQUEPAQUE",
                            CircunscripcionId = 1,
                            Distrito = 13,
                            EntidadId = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(620),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 31.5,
                            Nombre = "Distrito 13"
                        },
                        new
                        {
                            Id = 118,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TLAJOMULCO DE ZUÑIGA",
                            CircunscripcionId = 1,
                            Distrito = 14,
                            EntidadId = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(621),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 37.5,
                            Nombre = "Distrito 14"
                        },
                        new
                        {
                            Id = 119,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "LA BARCA",
                            CircunscripcionId = 1,
                            Distrito = 15,
                            EntidadId = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(623),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 25.600000000000001,
                            Nombre = "Distrito 15"
                        },
                        new
                        {
                            Id = 120,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "AUTLAN DE NAVARRO",
                            CircunscripcionId = 1,
                            Distrito = 16,
                            EntidadId = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(625),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 25.699999999999999,
                            Nombre = "Distrito 16"
                        },
                        new
                        {
                            Id = 121,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "ZAPOTLAN EL GRANDE",
                            CircunscripcionId = 1,
                            Distrito = 17,
                            EntidadId = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(626),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 27.699999999999999,
                            Nombre = "Distrito 17"
                        },
                        new
                        {
                            Id = 122,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "SAN PEDRO TLAQUEPAQUE",
                            CircunscripcionId = 1,
                            Distrito = 18,
                            EntidadId = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(628),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 29.800000000000001,
                            Nombre = "Distrito 18"
                        },
                        new
                        {
                            Id = 123,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "JOCOTEPEC",
                            CircunscripcionId = 1,
                            Distrito = 19,
                            EntidadId = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(629),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 32.5,
                            Nombre = "Distrito 19"
                        },
                        new
                        {
                            Id = 124,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TONALA",
                            CircunscripcionId = 1,
                            Distrito = 20,
                            EntidadId = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(631),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 30.0,
                            Nombre = "Distrito 20"
                        },
                        new
                        {
                            Id = 125,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "JILOTEPEC",
                            CircunscripcionId = 5,
                            Distrito = 1,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(632),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.2000000000000002,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 126,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TULTEPEC",
                            CircunscripcionId = 5,
                            Distrito = 2,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(634),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.7000000000000002,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 127,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "ATLACOMULCO",
                            CircunscripcionId = 5,
                            Distrito = 3,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(635),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 7.9000000000000004,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 128,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "NICOLAS ROMERO",
                            CircunscripcionId = 5,
                            Distrito = 4,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(637),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.7000000000000002,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 129,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TEOTIHUACAN",
                            CircunscripcionId = 5,
                            Distrito = 5,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(638),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.8999999999999999,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 130,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "COACALCO DE BERRIOZABAL",
                            CircunscripcionId = 5,
                            Distrito = 6,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(646),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 6.2000000000000002,
                            Nombre = "Distrito 6"
                        },
                        new
                        {
                            Id = 131,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "CUAUTITLAN IZCALLI",
                            CircunscripcionId = 5,
                            Distrito = 7,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(648),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.8999999999999999,
                            Nombre = "Distrito 7"
                        },
                        new
                        {
                            Id = 132,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TULTITLAN",
                            CircunscripcionId = 5,
                            Distrito = 8,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(649),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.2999999999999998,
                            Nombre = "Distrito 8"
                        },
                        new
                        {
                            Id = 133,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "SAN FELIPE DEL PROGRESO",
                            CircunscripcionId = 5,
                            Distrito = 9,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(651),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 8.4000000000000004,
                            Nombre = "Distrito 9"
                        },
                        new
                        {
                            Id = 134,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "ECATEPEC DE MORELOS",
                            CircunscripcionId = 5,
                            Distrito = 10,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(652),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.6000000000000001,
                            Nombre = "Distrito 10"
                        },
                        new
                        {
                            Id = 135,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "ECATEPEC DE MORELOS",
                            CircunscripcionId = 5,
                            Distrito = 11,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(654),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.6000000000000001,
                            Nombre = "Distrito 11"
                        },
                        new
                        {
                            Id = 136,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "IXTAPALUCA",
                            CircunscripcionId = 5,
                            Distrito = 12,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(656),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.2999999999999998,
                            Nombre = "Distrito 12"
                        },
                        new
                        {
                            Id = 137,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "ECATEPEC DE MORELOS",
                            CircunscripcionId = 5,
                            Distrito = 13,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(659),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.8999999999999999,
                            Nombre = "Distrito 13"
                        },
                        new
                        {
                            Id = 138,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "ACOLMAN",
                            CircunscripcionId = 5,
                            Distrito = 14,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(660),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.3999999999999999,
                            Nombre = "Distrito 14"
                        },
                        new
                        {
                            Id = 139,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "ATIZAPAN DE ZARAGOZA",
                            CircunscripcionId = 5,
                            Distrito = 15,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(662),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 3.0,
                            Nombre = "Distrito 15"
                        },
                        new
                        {
                            Id = 140,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "ECATEPEC DE MORELOS",
                            CircunscripcionId = 5,
                            Distrito = 16,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(663),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.6000000000000001,
                            Nombre = "Distrito 16"
                        },
                        new
                        {
                            Id = 141,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "ECATEPEC DE MORELOS",
                            CircunscripcionId = 5,
                            Distrito = 17,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(665),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 11.0,
                            Nombre = "Distrito 17"
                        },
                        new
                        {
                            Id = 142,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "HUIXQUILUCAN",
                            CircunscripcionId = 5,
                            Distrito = 18,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(667),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.2000000000000002,
                            Nombre = "Distrito 18"
                        },
                        new
                        {
                            Id = 143,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TLALNEPANTLA DE BAZ",
                            CircunscripcionId = 5,
                            Distrito = 19,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(669),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.8999999999999999,
                            Nombre = "Distrito 19"
                        },
                        new
                        {
                            Id = 144,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TECAMAC",
                            CircunscripcionId = 5,
                            Distrito = 20,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(670),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.2000000000000002,
                            Nombre = "Distrito 20"
                        },
                        new
                        {
                            Id = 145,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "AMECAMECA",
                            CircunscripcionId = 5,
                            Distrito = 21,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(672),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 7.7000000000000002,
                            Nombre = "Distrito 21"
                        },
                        new
                        {
                            Id = 146,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "NAUCALPAN DE JUAREZ",
                            CircunscripcionId = 5,
                            Distrito = 22,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(674),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.7000000000000002,
                            Nombre = "Distrito 22"
                        },
                        new
                        {
                            Id = 147,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "LERMA",
                            CircunscripcionId = 5,
                            Distrito = 23,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(675),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.5,
                            Nombre = "Distrito 23"
                        },
                        new
                        {
                            Id = 148,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "NAUCALPAN DE JUAREZ",
                            CircunscripcionId = 5,
                            Distrito = 24,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(677),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 5.5999999999999996,
                            Nombre = "Distrito 24"
                        },
                        new
                        {
                            Id = 149,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "CHIMALHUACAN",
                            CircunscripcionId = 5,
                            Distrito = 25,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(678),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.7,
                            Nombre = "Distrito 25"
                        },
                        new
                        {
                            Id = 150,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "TOLUCA",
                            CircunscripcionId = 5,
                            Distrito = 26,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(680),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.6000000000000001,
                            Nombre = "Distrito 26"
                        },
                        new
                        {
                            Id = 151,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "METEPEC",
                            CircunscripcionId = 5,
                            Distrito = 27,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(681),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 6.2000000000000002,
                            Nombre = "Distrito 27"
                        },
                        new
                        {
                            Id = 152,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "ZUMPANGO",
                            CircunscripcionId = 5,
                            Distrito = 28,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(683),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.3999999999999999,
                            Nombre = "Distrito 28"
                        },
                        new
                        {
                            Id = 153,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "NEZAHUALCOYOTL",
                            CircunscripcionId = 5,
                            Distrito = 29,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(684),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 21.800000000000001,
                            Nombre = "Distrito 29"
                        },
                        new
                        {
                            Id = 154,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "CHIMALHUACAN",
                            CircunscripcionId = 5,
                            Distrito = 30,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(686),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.5,
                            Nombre = "Distrito 30"
                        },
                        new
                        {
                            Id = 155,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "NEZAHUALCOYOTL",
                            CircunscripcionId = 5,
                            Distrito = 31,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(687),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 21.899999999999999,
                            Nombre = "Distrito 31"
                        },
                        new
                        {
                            Id = 156,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "VALLE DE CHALCO SOLIDARIDAD",
                            CircunscripcionId = 5,
                            Distrito = 32,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(689),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.5,
                            Nombre = "Distrito 32"
                        },
                        new
                        {
                            Id = 157,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "CHALCO",
                            CircunscripcionId = 5,
                            Distrito = 33,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(690),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.8999999999999999,
                            Nombre = "Distrito 33"
                        },
                        new
                        {
                            Id = 158,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "TOLUCA",
                            CircunscripcionId = 5,
                            Distrito = 34,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(692),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.7999999999999998,
                            Nombre = "Distrito 34"
                        },
                        new
                        {
                            Id = 159,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TENANCINGO",
                            CircunscripcionId = 5,
                            Distrito = 35,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(693),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 7.2999999999999998,
                            Nombre = "Distrito 35"
                        },
                        new
                        {
                            Id = 160,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TEJUPILCO",
                            CircunscripcionId = 5,
                            Distrito = 36,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(695),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.1000000000000001,
                            Nombre = "Distrito 36"
                        },
                        new
                        {
                            Id = 161,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TEOLOYUCAN",
                            CircunscripcionId = 5,
                            Distrito = 37,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(696),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 6.7999999999999998,
                            Nombre = "Distrito 37"
                        },
                        new
                        {
                            Id = 162,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TEXCOCO",
                            CircunscripcionId = 5,
                            Distrito = 38,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(698),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.2999999999999998,
                            Nombre = "Distrito 38"
                        },
                        new
                        {
                            Id = 163,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "LA PAZ",
                            CircunscripcionId = 5,
                            Distrito = 39,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(699),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.5,
                            Nombre = "Distrito 39"
                        },
                        new
                        {
                            Id = 164,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "ZINACANTEPEC",
                            CircunscripcionId = 5,
                            Distrito = 40,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(701),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.7999999999999998,
                            Nombre = "Distrito 40"
                        },
                        new
                        {
                            Id = 165,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "LAZARO CARDENAS",
                            CircunscripcionId = 5,
                            Distrito = 1,
                            EntidadId = 16,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(702),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.5,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 166,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "APATZINGAN",
                            CircunscripcionId = 5,
                            Distrito = 2,
                            EntidadId = 16,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(704),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.5,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 167,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "ZITACUARO",
                            CircunscripcionId = 5,
                            Distrito = 3,
                            EntidadId = 16,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(705),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.6000000000000001,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 168,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "JIQUILPAN",
                            CircunscripcionId = 5,
                            Distrito = 4,
                            EntidadId = 16,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(707),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 6.5999999999999996,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 169,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "ZAMORA",
                            CircunscripcionId = 5,
                            Distrito = 5,
                            EntidadId = 16,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(709),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 7.9000000000000004,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 170,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "HIDALGO",
                            CircunscripcionId = 5,
                            Distrito = 6,
                            EntidadId = 16,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(710),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 6.5999999999999996,
                            Nombre = "Distrito 6"
                        },
                        new
                        {
                            Id = 171,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "ZACAPU",
                            CircunscripcionId = 5,
                            Distrito = 7,
                            EntidadId = 16,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(712),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 5.2000000000000002,
                            Nombre = "Distrito 7"
                        },
                        new
                        {
                            Id = 172,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "MORELIA",
                            CircunscripcionId = 5,
                            Distrito = 8,
                            EntidadId = 16,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(713),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.8999999999999999,
                            Nombre = "Distrito 8"
                        },
                        new
                        {
                            Id = 173,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "URUAPAN",
                            CircunscripcionId = 5,
                            Distrito = 9,
                            EntidadId = 16,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(715),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.7,
                            Nombre = "Distrito 9"
                        },
                        new
                        {
                            Id = 174,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "MORELIA",
                            CircunscripcionId = 5,
                            Distrito = 10,
                            EntidadId = 16,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(716),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.6000000000000001,
                            Nombre = "Distrito 10"
                        },
                        new
                        {
                            Id = 175,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "PATZCUARO",
                            CircunscripcionId = 5,
                            Distrito = 11,
                            EntidadId = 16,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(718),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.1000000000000001,
                            Nombre = "Distrito 11"
                        },
                        new
                        {
                            Id = 176,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "CUERNAVACA",
                            CircunscripcionId = 4,
                            Distrito = 1,
                            EntidadId = 17,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(719),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.3999999999999999,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 177,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "JIUTEPEC",
                            CircunscripcionId = 4,
                            Distrito = 2,
                            EntidadId = 17,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(721),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 7.5999999999999996,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 178,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "CUAUTLA",
                            CircunscripcionId = 4,
                            Distrito = 3,
                            EntidadId = 17,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(723),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 9.0999999999999996,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 179,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "JOJUTLA",
                            CircunscripcionId = 4,
                            Distrito = 4,
                            EntidadId = 17,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(724),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 6.7999999999999998,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 180,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "YAUTEPEC",
                            CircunscripcionId = 4,
                            Distrito = 5,
                            EntidadId = 17,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(726),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 8.8000000000000007,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 181,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "SANTIAGO IXCUINTLA",
                            CircunscripcionId = 1,
                            Distrito = 1,
                            EntidadId = 18,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(727),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 20.0,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 182,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TEPIC",
                            CircunscripcionId = 1,
                            Distrito = 2,
                            EntidadId = 18,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(729),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 16.100000000000001,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 183,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "COMPOSTELA",
                            CircunscripcionId = 1,
                            Distrito = 3,
                            EntidadId = 18,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(731),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 13.199999999999999,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 184,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "SANTA CATARINA",
                            CircunscripcionId = 2,
                            Distrito = 1,
                            EntidadId = 19,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(732),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 14.6,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 185,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "APODACA",
                            CircunscripcionId = 2,
                            Distrito = 2,
                            EntidadId = 19,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(734),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 20.199999999999999,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 186,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "GRAL. ESCOBEDO",
                            CircunscripcionId = 2,
                            Distrito = 3,
                            EntidadId = 19,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(735),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 26.5,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 187,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "SAN NICOLAS DE LOS GARZA",
                            CircunscripcionId = 2,
                            Distrito = 4,
                            EntidadId = 19,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(737),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 18.300000000000001,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 188,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "MONTERREY",
                            CircunscripcionId = 2,
                            Distrito = 5,
                            EntidadId = 19,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(738),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 20.800000000000001,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 189,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "MONTERREY",
                            CircunscripcionId = 2,
                            Distrito = 6,
                            EntidadId = 19,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(740),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 22.199999999999999,
                            Nombre = "Distrito 6"
                        },
                        new
                        {
                            Id = 190,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "GARCIA",
                            CircunscripcionId = 2,
                            Distrito = 7,
                            EntidadId = 19,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(741),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 27.199999999999999,
                            Nombre = "Distrito 7"
                        },
                        new
                        {
                            Id = 191,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "GUADALUPE",
                            CircunscripcionId = 2,
                            Distrito = 8,
                            EntidadId = 19,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(744),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 21.199999999999999,
                            Nombre = "Distrito 8"
                        },
                        new
                        {
                            Id = 192,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "LINARES",
                            CircunscripcionId = 2,
                            Distrito = 9,
                            EntidadId = 19,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(746),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 11.1,
                            Nombre = "Distrito 9"
                        },
                        new
                        {
                            Id = 193,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "MONTERREY",
                            CircunscripcionId = 2,
                            Distrito = 10,
                            EntidadId = 19,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(747),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 22.0,
                            Nombre = "Distrito 10"
                        },
                        new
                        {
                            Id = 194,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "GUADALUPE",
                            CircunscripcionId = 2,
                            Distrito = 11,
                            EntidadId = 19,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(754),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 18.399999999999999,
                            Nombre = "Distrito 11"
                        },
                        new
                        {
                            Id = 195,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "JUAREZ",
                            CircunscripcionId = 2,
                            Distrito = 12,
                            EntidadId = 19,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(755),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 24.5,
                            Nombre = "Distrito 12"
                        },
                        new
                        {
                            Id = 196,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "SALINAS VICTORIA",
                            CircunscripcionId = 2,
                            Distrito = 13,
                            EntidadId = 19,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(757),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 24.100000000000001,
                            Nombre = "Distrito 13"
                        },
                        new
                        {
                            Id = 197,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "PESQUERIA",
                            CircunscripcionId = 2,
                            Distrito = 14,
                            EntidadId = 19,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(758),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 14.199999999999999,
                            Nombre = "Distrito 14"
                        },
                        new
                        {
                            Id = 198,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "SAN JUAN BAUTISTA TUXTEPEC",
                            CircunscripcionId = 3,
                            Distrito = 1,
                            EntidadId = 20,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(760),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.5,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 199,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "TEOTITLAN DE FLORES MAGON",
                            CircunscripcionId = 3,
                            Distrito = 2,
                            EntidadId = 20,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(762),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.5,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 200,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "HEROICA CIUDAD DE HUAJUAPAN DE LEON",
                            CircunscripcionId = 3,
                            Distrito = 3,
                            EntidadId = 20,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(764),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.8999999999999999,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 201,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "TLACOLULA DE MATAMOROS",
                            CircunscripcionId = 3,
                            Distrito = 4,
                            EntidadId = 20,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(765),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.2999999999999998,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 202,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "SALINA CRUZ",
                            CircunscripcionId = 3,
                            Distrito = 5,
                            EntidadId = 20,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(767),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.2000000000000002,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 203,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "HEROICA CIUDAD DE TLAXIACO",
                            CircunscripcionId = 3,
                            Distrito = 6,
                            EntidadId = 20,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(768),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.2000000000000002,
                            Nombre = "Distrito 6"
                        },
                        new
                        {
                            Id = 204,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "CIUDAD IXTEPEC",
                            CircunscripcionId = 3,
                            Distrito = 7,
                            EntidadId = 20,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(770),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.2999999999999998,
                            Nombre = "Distrito 7"
                        },
                        new
                        {
                            Id = 205,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "OAXACA DE JUAREZ",
                            CircunscripcionId = 3,
                            Distrito = 8,
                            EntidadId = 20,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(772),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.0,
                            Nombre = "Distrito 8"
                        },
                        new
                        {
                            Id = 206,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "SAN PEDRO MIXTEPEC",
                            CircunscripcionId = 3,
                            Distrito = 9,
                            EntidadId = 20,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(773),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.8,
                            Nombre = "Distrito 9"
                        },
                        new
                        {
                            Id = 207,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "MIAHUATLAN DE PORFIRIO DIAZ",
                            CircunscripcionId = 3,
                            Distrito = 10,
                            EntidadId = 20,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(775),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.2000000000000002,
                            Nombre = "Distrito 10"
                        },
                        new
                        {
                            Id = 208,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "HUAUCHINANGO",
                            CircunscripcionId = 4,
                            Distrito = 1,
                            EntidadId = 21,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(776),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 10.699999999999999,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 209,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "ZACATLAN",
                            CircunscripcionId = 4,
                            Distrito = 2,
                            EntidadId = 21,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(778),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.5,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 210,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "TEZIUTLAN",
                            CircunscripcionId = 4,
                            Distrito = 3,
                            EntidadId = 21,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(779),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 8.9000000000000004,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 211,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "LIBRES",
                            CircunscripcionId = 4,
                            Distrito = 4,
                            EntidadId = 21,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(781),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 11.300000000000001,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 212,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "SAN MARTIN TEXMELUCAN",
                            CircunscripcionId = 4,
                            Distrito = 5,
                            EntidadId = 21,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(782),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 7.7000000000000002,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 213,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "PUEBLA",
                            CircunscripcionId = 4,
                            Distrito = 6,
                            EntidadId = 21,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(784),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.2999999999999998,
                            Nombre = "Distrito 6"
                        },
                        new
                        {
                            Id = 214,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "TEPEACA",
                            CircunscripcionId = 4,
                            Distrito = 7,
                            EntidadId = 21,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(785),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 6.7000000000000002,
                            Nombre = "Distrito 7"
                        },
                        new
                        {
                            Id = 215,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "CHALCHICOMULA DE SESMA",
                            CircunscripcionId = 4,
                            Distrito = 8,
                            EntidadId = 21,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(787),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 8.1999999999999993,
                            Nombre = "Distrito 8"
                        },
                        new
                        {
                            Id = 216,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "PUEBLA",
                            CircunscripcionId = 4,
                            Distrito = 9,
                            EntidadId = 21,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(788),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.6000000000000001,
                            Nombre = "Distrito 9"
                        },
                        new
                        {
                            Id = 217,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "SAN PEDRO CHOLULA",
                            CircunscripcionId = 4,
                            Distrito = 10,
                            EntidadId = 21,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(790),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.7999999999999998,
                            Nombre = "Distrito 10"
                        },
                        new
                        {
                            Id = 218,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "PUEBLA",
                            CircunscripcionId = 4,
                            Distrito = 11,
                            EntidadId = 21,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(791),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 3.2000000000000002,
                            Nombre = "Distrito 11"
                        },
                        new
                        {
                            Id = 219,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "PUEBLA",
                            CircunscripcionId = 4,
                            Distrito = 12,
                            EntidadId = 21,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(793),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.7999999999999998,
                            Nombre = "Distrito 12"
                        },
                        new
                        {
                            Id = 220,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "ATLIXCO",
                            CircunscripcionId = 4,
                            Distrito = 13,
                            EntidadId = 21,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(794),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.7000000000000002,
                            Nombre = "Distrito 13"
                        },
                        new
                        {
                            Id = 221,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "IZUCAR DE MATAMOROS",
                            CircunscripcionId = 4,
                            Distrito = 14,
                            EntidadId = 21,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(796),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.0999999999999996,
                            Nombre = "Distrito 14"
                        },
                        new
                        {
                            Id = 222,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "TEHUACAN",
                            CircunscripcionId = 4,
                            Distrito = 15,
                            EntidadId = 21,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(797),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 5.7000000000000002,
                            Nombre = "Distrito 15"
                        },
                        new
                        {
                            Id = 223,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "AJALPAN",
                            CircunscripcionId = 4,
                            Distrito = 16,
                            EntidadId = 21,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(799),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.0999999999999996,
                            Nombre = "Distrito 16"
                        },
                        new
                        {
                            Id = 224,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "CADEREYTA DE MONTES",
                            CircunscripcionId = 5,
                            Distrito = 1,
                            EntidadId = 22,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(800),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.7,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 225,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "SAN JUAN DEL RIO",
                            CircunscripcionId = 5,
                            Distrito = 2,
                            EntidadId = 22,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(802),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.8999999999999999,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 226,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "QUERETARO",
                            CircunscripcionId = 5,
                            Distrito = 3,
                            EntidadId = 22,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(803),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.2000000000000002,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 227,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "QUERETARO",
                            CircunscripcionId = 5,
                            Distrito = 4,
                            EntidadId = 22,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(805),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.8,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 228,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "PEDRO ESCOBEDO",
                            CircunscripcionId = 5,
                            Distrito = 5,
                            EntidadId = 22,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(807),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.5,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 229,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "QUERETARO",
                            CircunscripcionId = 5,
                            Distrito = 6,
                            EntidadId = 22,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(808),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.1000000000000001,
                            Nombre = "Distrito 6"
                        },
                        new
                        {
                            Id = 230,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "SOLIDARIDAD",
                            CircunscripcionId = 3,
                            Distrito = 1,
                            EntidadId = 23,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(810),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.4000000000000004,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 231,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "OTHON P. BLANCO",
                            CircunscripcionId = 3,
                            Distrito = 2,
                            EntidadId = 23,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(811),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.7999999999999998,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 232,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "BENITO JUAREZ",
                            CircunscripcionId = 3,
                            Distrito = 3,
                            EntidadId = 23,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(813),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 3.1000000000000001,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 233,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "BENITO JUAREZ",
                            CircunscripcionId = 3,
                            Distrito = 4,
                            EntidadId = 23,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(814),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.2999999999999998,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 234,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "MATEHUALA",
                            CircunscripcionId = 2,
                            Distrito = 1,
                            EntidadId = 24,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(816),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 8.6999999999999993,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 235,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "SOLEDAD DE GRACIANO SANCHEZ",
                            CircunscripcionId = 2,
                            Distrito = 2,
                            EntidadId = 24,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(817),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.8999999999999999,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 236,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "RIOVERDE",
                            CircunscripcionId = 2,
                            Distrito = 3,
                            EntidadId = 24,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(819),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 7.0,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 237,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "CIUDAD VALLES",
                            CircunscripcionId = 2,
                            Distrito = 4,
                            EntidadId = 24,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(821),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.7999999999999998,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 238,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "SAN LUIS POTOSI",
                            CircunscripcionId = 2,
                            Distrito = 5,
                            EntidadId = 24,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(823),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 3.0,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 239,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "SAN LUIS POTOSI",
                            CircunscripcionId = 2,
                            Distrito = 6,
                            EntidadId = 24,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(824),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.6000000000000001,
                            Nombre = "Distrito 6"
                        },
                        new
                        {
                            Id = 240,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "TAMAZUNCHALE",
                            CircunscripcionId = 2,
                            Distrito = 7,
                            EntidadId = 24,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(826),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.7999999999999998,
                            Nombre = "Distrito 7"
                        },
                        new
                        {
                            Id = 241,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "MAZATLAN",
                            CircunscripcionId = 1,
                            Distrito = 1,
                            EntidadId = 25,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(827),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 6.2999999999999998,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 242,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "AHOME",
                            CircunscripcionId = 1,
                            Distrito = 2,
                            EntidadId = 25,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(829),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.7999999999999998,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 243,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "SALVADOR ALVARADO",
                            CircunscripcionId = 1,
                            Distrito = 3,
                            EntidadId = 25,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(831),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.0,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 244,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "GUASAVE",
                            CircunscripcionId = 1,
                            Distrito = 4,
                            EntidadId = 25,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(832),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.6000000000000001,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 245,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "CULIACAN",
                            CircunscripcionId = 1,
                            Distrito = 5,
                            EntidadId = 25,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(834),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.5,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 246,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "MAZATLAN",
                            CircunscripcionId = 1,
                            Distrito = 6,
                            EntidadId = 25,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(835),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.7000000000000002,
                            Nombre = "Distrito 6"
                        },
                        new
                        {
                            Id = 247,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "CULIACAN",
                            CircunscripcionId = 1,
                            Distrito = 7,
                            EntidadId = 25,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(837),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.5999999999999996,
                            Nombre = "Distrito 7"
                        },
                        new
                        {
                            Id = 248,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "SAN LUIS RIO COLORADO",
                            CircunscripcionId = 1,
                            Distrito = 1,
                            EntidadId = 26,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(838),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 5.7000000000000002,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 249,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "NOGALES",
                            CircunscripcionId = 1,
                            Distrito = 2,
                            EntidadId = 26,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(840),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 6.7999999999999998,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 250,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "HERMOSILLO",
                            CircunscripcionId = 1,
                            Distrito = 3,
                            EntidadId = 26,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(841),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 12.4,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 251,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "GUAYMAS",
                            CircunscripcionId = 1,
                            Distrito = 4,
                            EntidadId = 26,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(843),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 7.4000000000000004,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 252,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "HERMOSILLO",
                            CircunscripcionId = 1,
                            Distrito = 5,
                            EntidadId = 26,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(844),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 7.7000000000000002,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 253,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "CAJEME",
                            CircunscripcionId = 1,
                            Distrito = 6,
                            EntidadId = 26,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(846),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 12.5,
                            Nombre = "Distrito 6"
                        },
                        new
                        {
                            Id = 254,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "NAVOJOA",
                            CircunscripcionId = 1,
                            Distrito = 7,
                            EntidadId = 26,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(847),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 5.4000000000000004,
                            Nombre = "Distrito 7"
                        },
                        new
                        {
                            Id = 255,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "MACUSPANA",
                            CircunscripcionId = 3,
                            Distrito = 1,
                            EntidadId = 27,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(849),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.5,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 256,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "CARDENAS",
                            CircunscripcionId = 3,
                            Distrito = 2,
                            EntidadId = 27,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(851),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.3,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 257,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "COMALCALCO",
                            CircunscripcionId = 3,
                            Distrito = 3,
                            EntidadId = 27,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(852),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 3.0,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 258,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "CENTRO",
                            CircunscripcionId = 3,
                            Distrito = 4,
                            EntidadId = 27,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(861),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.2999999999999998,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 259,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "PARAISO",
                            CircunscripcionId = 3,
                            Distrito = 5,
                            EntidadId = 27,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(863),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.0999999999999996,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 260,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "CENTRO",
                            CircunscripcionId = 3,
                            Distrito = 6,
                            EntidadId = 27,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(864),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 8.5999999999999996,
                            Nombre = "Distrito 6"
                        },
                        new
                        {
                            Id = 261,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "NUEVO LAREDO",
                            CircunscripcionId = 2,
                            Distrito = 1,
                            EntidadId = 28,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(866),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.2000000000000002,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 262,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "REYNOSA",
                            CircunscripcionId = 2,
                            Distrito = 2,
                            EntidadId = 28,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(868),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.5,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 263,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "RIO BRAVO",
                            CircunscripcionId = 2,
                            Distrito = 3,
                            EntidadId = 28,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(869),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.2000000000000002,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 264,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "MATAMOROS",
                            CircunscripcionId = 2,
                            Distrito = 4,
                            EntidadId = 28,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(871),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.1000000000000001,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 265,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "VICTORIA",
                            CircunscripcionId = 2,
                            Distrito = 5,
                            EntidadId = 28,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(872),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.5,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 266,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "REYNOSA",
                            CircunscripcionId = 2,
                            Distrito = 6,
                            EntidadId = 28,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(874),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.2000000000000002,
                            Nombre = "Distrito 6"
                        },
                        new
                        {
                            Id = 267,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "EL MANTE",
                            CircunscripcionId = 2,
                            Distrito = 7,
                            EntidadId = 28,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(875),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.7000000000000002,
                            Nombre = "Distrito 7"
                        },
                        new
                        {
                            Id = 268,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TAMPICO",
                            CircunscripcionId = 2,
                            Distrito = 8,
                            EntidadId = 28,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(877),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 3.1000000000000001,
                            Nombre = "Distrito 8"
                        },
                        new
                        {
                            Id = 269,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "APIZACO",
                            CircunscripcionId = 4,
                            Distrito = 1,
                            EntidadId = 29,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(878),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.7999999999999998,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 270,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "TLAXCALA",
                            CircunscripcionId = 4,
                            Distrito = 2,
                            EntidadId = 29,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(880),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.7000000000000002,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 271,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "ZACATELCO",
                            CircunscripcionId = 4,
                            Distrito = 3,
                            EntidadId = 29,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(881),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 5.2999999999999998,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 272,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "PANUCO",
                            CircunscripcionId = 3,
                            Distrito = 1,
                            EntidadId = 30,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(883),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.8999999999999999,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 273,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "ALAMO TEMAPACHE",
                            CircunscripcionId = 3,
                            Distrito = 2,
                            EntidadId = 30,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(884),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.9000000000000004,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 274,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "COSOLEACAQUE",
                            CircunscripcionId = 3,
                            Distrito = 3,
                            EntidadId = 30,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(886),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 5.7000000000000002,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 275,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "BOCA DEL RIO",
                            CircunscripcionId = 3,
                            Distrito = 4,
                            EntidadId = 30,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(887),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.7000000000000002,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 276,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "POZA RICA DE HIDALGO",
                            CircunscripcionId = 3,
                            Distrito = 5,
                            EntidadId = 30,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(889),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.5999999999999996,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 277,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "PAPANTLA",
                            CircunscripcionId = 3,
                            Distrito = 6,
                            EntidadId = 30,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(890),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 13.4,
                            Nombre = "Distrito 6"
                        },
                        new
                        {
                            Id = 278,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "MARTINEZ DE LA TORRE",
                            CircunscripcionId = 3,
                            Distrito = 7,
                            EntidadId = 30,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(892),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 6.5999999999999996,
                            Nombre = "Distrito 7"
                        },
                        new
                        {
                            Id = 279,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "COATEPEC",
                            CircunscripcionId = 3,
                            Distrito = 8,
                            EntidadId = 30,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(893),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 13.300000000000001,
                            Nombre = "Distrito 8"
                        },
                        new
                        {
                            Id = 280,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "COATZACOALCOS",
                            CircunscripcionId = 3,
                            Distrito = 9,
                            EntidadId = 30,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(895),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 8.8000000000000007,
                            Nombre = "Distrito 9"
                        },
                        new
                        {
                            Id = 281,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "EMILIANO ZAPATA",
                            CircunscripcionId = 3,
                            Distrito = 10,
                            EntidadId = 30,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(896),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 7.0999999999999996,
                            Nombre = "Distrito 10"
                        },
                        new
                        {
                            Id = 282,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "XALAPA",
                            CircunscripcionId = 3,
                            Distrito = 11,
                            EntidadId = 30,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(899),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 5.7000000000000002,
                            Nombre = "Distrito 11"
                        },
                        new
                        {
                            Id = 283,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "VERACRUZ",
                            CircunscripcionId = 3,
                            Distrito = 12,
                            EntidadId = 30,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(901),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.3999999999999999,
                            Nombre = "Distrito 12"
                        },
                        new
                        {
                            Id = 284,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "MINATITLAN",
                            CircunscripcionId = 3,
                            Distrito = 13,
                            EntidadId = 30,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(902),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 10.1,
                            Nombre = "Distrito 13"
                        },
                        new
                        {
                            Id = 285,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "COSAMALOAPAN",
                            CircunscripcionId = 3,
                            Distrito = 14,
                            EntidadId = 30,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(904),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.2000000000000002,
                            Nombre = "Distrito 14"
                        },
                        new
                        {
                            Id = 286,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "ZONGOLICA",
                            CircunscripcionId = 3,
                            Distrito = 15,
                            EntidadId = 30,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(905),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 8.4000000000000004,
                            Nombre = "Distrito 15"
                        },
                        new
                        {
                            Id = 287,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "HUATUSCO",
                            CircunscripcionId = 3,
                            Distrito = 16,
                            EntidadId = 30,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(907),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 6.2000000000000002,
                            Nombre = "Distrito 16"
                        },
                        new
                        {
                            Id = 288,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "ORIZABA",
                            CircunscripcionId = 3,
                            Distrito = 17,
                            EntidadId = 30,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(908),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 11.4,
                            Nombre = "Distrito 17"
                        },
                        new
                        {
                            Id = 289,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "CORDOBA",
                            CircunscripcionId = 3,
                            Distrito = 18,
                            EntidadId = 30,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(910),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.7999999999999998,
                            Nombre = "Distrito 18"
                        },
                        new
                        {
                            Id = 290,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "SAN ANDRES TUXTLA",
                            CircunscripcionId = 3,
                            Distrito = 19,
                            EntidadId = 30,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(911),
                            McCompetitividad = "ALTA",
                            McPorcentaje = 13.5,
                            Nombre = "Distrito 19"
                        },
                        new
                        {
                            Id = 291,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "VALLADOLID",
                            CircunscripcionId = 3,
                            Distrito = 1,
                            EntidadId = 31,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(913),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.2,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 292,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "PROGRESO",
                            CircunscripcionId = 3,
                            Distrito = 2,
                            EntidadId = 31,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(914),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.5,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 293,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "MERIDA",
                            CircunscripcionId = 3,
                            Distrito = 3,
                            EntidadId = 31,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(916),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 1.8999999999999999,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 294,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "MERIDA",
                            CircunscripcionId = 3,
                            Distrito = 4,
                            EntidadId = 31,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(917),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.2999999999999998,
                            Nombre = "Distrito 4"
                        },
                        new
                        {
                            Id = 295,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "ALTA",
                            CabeceraDistrital = "UMAN",
                            CircunscripcionId = 3,
                            Distrito = 5,
                            EntidadId = 31,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(919),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.5999999999999996,
                            Nombre = "Distrito 5"
                        },
                        new
                        {
                            Id = 296,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "MERIDA",
                            CircunscripcionId = 3,
                            Distrito = 6,
                            EntidadId = 31,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(928),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 3.0,
                            Nombre = "Distrito 6"
                        },
                        new
                        {
                            Id = 297,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "MEDIA",
                            CabeceraDistrital = "FRESNILLO",
                            CircunscripcionId = 2,
                            Distrito = 1,
                            EntidadId = 32,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(930),
                            McCompetitividad = "BAJA",
                            McPorcentaje = 2.6000000000000001,
                            Nombre = "Distrito 1"
                        },
                        new
                        {
                            Id = 298,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "JEREZ",
                            CircunscripcionId = 2,
                            Distrito = 2,
                            EntidadId = 32,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(931),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 4.5999999999999996,
                            Nombre = "Distrito 2"
                        },
                        new
                        {
                            Id = 299,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "ZACATECAS",
                            CircunscripcionId = 2,
                            Distrito = 3,
                            EntidadId = 32,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(933),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.7999999999999998,
                            Nombre = "Distrito 3"
                        },
                        new
                        {
                            Id = 300,
                            Activo = true,
                            AnioEleccion = 2024,
                            BloqueConcentracionIndigena = "BAJA",
                            CabeceraDistrital = "GUADALUPE",
                            CircunscripcionId = 2,
                            Distrito = 4,
                            EntidadId = 32,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(934),
                            McCompetitividad = "MEDIA",
                            McPorcentaje = 3.7000000000000002,
                            Nombre = "Distrito 4"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.AccionesAfirmativas.EstadoCircunscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("CircunscripcionId")
                        .HasColumnType("integer")
                        .HasColumnName("circunscripcion_id");

                    b.Property<int>("EntidadId")
                        .HasColumnType("integer")
                        .HasColumnName("entidad_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.HasKey("Id")
                        .HasName("pk_estado_circunscripcion");

                    b.HasIndex("CircunscripcionId")
                        .HasDatabaseName("ix_estado_circunscripcion_circunscripcion_id");

                    b.HasIndex("EntidadId")
                        .HasDatabaseName("ix_estado_circunscripcion_entidad_id");

                    b.ToTable("estado_circunscripcion", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            CircunscripcionId = 2,
                            EntidadId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1039)
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            CircunscripcionId = 1,
                            EntidadId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1041)
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            CircunscripcionId = 1,
                            EntidadId = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1042)
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            CircunscripcionId = 3,
                            EntidadId = 4,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1043)
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            CircunscripcionId = 2,
                            EntidadId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1044)
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            CircunscripcionId = 5,
                            EntidadId = 6,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1045)
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            CircunscripcionId = 3,
                            EntidadId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1046)
                        },
                        new
                        {
                            Id = 8,
                            Activo = true,
                            CircunscripcionId = 1,
                            EntidadId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1047)
                        },
                        new
                        {
                            Id = 9,
                            Activo = true,
                            CircunscripcionId = 4,
                            EntidadId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1048)
                        },
                        new
                        {
                            Id = 10,
                            Activo = true,
                            CircunscripcionId = 1,
                            EntidadId = 10,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1049)
                        },
                        new
                        {
                            Id = 11,
                            Activo = true,
                            CircunscripcionId = 2,
                            EntidadId = 11,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1050)
                        },
                        new
                        {
                            Id = 12,
                            Activo = true,
                            CircunscripcionId = 4,
                            EntidadId = 12,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1050)
                        },
                        new
                        {
                            Id = 13,
                            Activo = true,
                            CircunscripcionId = 4,
                            EntidadId = 13,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1051)
                        },
                        new
                        {
                            Id = 14,
                            Activo = true,
                            CircunscripcionId = 1,
                            EntidadId = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1052)
                        },
                        new
                        {
                            Id = 15,
                            Activo = true,
                            CircunscripcionId = 5,
                            EntidadId = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1052)
                        },
                        new
                        {
                            Id = 16,
                            Activo = true,
                            CircunscripcionId = 5,
                            EntidadId = 16,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1053)
                        },
                        new
                        {
                            Id = 17,
                            Activo = true,
                            CircunscripcionId = 4,
                            EntidadId = 17,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1054)
                        },
                        new
                        {
                            Id = 18,
                            Activo = true,
                            CircunscripcionId = 1,
                            EntidadId = 18,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1055)
                        },
                        new
                        {
                            Id = 19,
                            Activo = true,
                            CircunscripcionId = 2,
                            EntidadId = 19,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1056)
                        },
                        new
                        {
                            Id = 20,
                            Activo = true,
                            CircunscripcionId = 3,
                            EntidadId = 20,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1057)
                        },
                        new
                        {
                            Id = 21,
                            Activo = true,
                            CircunscripcionId = 4,
                            EntidadId = 21,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1057)
                        },
                        new
                        {
                            Id = 22,
                            Activo = true,
                            CircunscripcionId = 5,
                            EntidadId = 22,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1058)
                        },
                        new
                        {
                            Id = 23,
                            Activo = true,
                            CircunscripcionId = 3,
                            EntidadId = 23,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1059)
                        },
                        new
                        {
                            Id = 24,
                            Activo = true,
                            CircunscripcionId = 2,
                            EntidadId = 24,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1060)
                        },
                        new
                        {
                            Id = 25,
                            Activo = true,
                            CircunscripcionId = 1,
                            EntidadId = 25,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1060)
                        },
                        new
                        {
                            Id = 26,
                            Activo = true,
                            CircunscripcionId = 1,
                            EntidadId = 26,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1061)
                        },
                        new
                        {
                            Id = 27,
                            Activo = true,
                            CircunscripcionId = 3,
                            EntidadId = 27,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1062)
                        },
                        new
                        {
                            Id = 28,
                            Activo = true,
                            CircunscripcionId = 2,
                            EntidadId = 28,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1062)
                        },
                        new
                        {
                            Id = 29,
                            Activo = true,
                            CircunscripcionId = 4,
                            EntidadId = 29,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1063)
                        },
                        new
                        {
                            Id = 30,
                            Activo = true,
                            CircunscripcionId = 3,
                            EntidadId = 30,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1064)
                        },
                        new
                        {
                            Id = 31,
                            Activo = true,
                            CircunscripcionId = 3,
                            EntidadId = 31,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1065)
                        },
                        new
                        {
                            Id = 32,
                            Activo = true,
                            CircunscripcionId = 2,
                            EntidadId = 32,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1065)
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.AccionesAfirmativas.RequisitoPorCircunscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("AnioEleccion")
                        .HasColumnType("integer")
                        .HasColumnName("anio_eleccion");

                    b.Property<int>("CantidadIdentificacionIndigena")
                        .HasColumnType("integer")
                        .HasColumnName("cantidad_identificacion_indigena");

                    b.Property<int>("CicunscripcionId")
                        .HasColumnType("integer")
                        .HasColumnName("cicunscripcion_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("LugaresDisponibles")
                        .HasColumnType("integer")
                        .HasColumnName("lugares_disponibles");

                    b.Property<int>("RepresentanteId")
                        .HasColumnType("integer")
                        .HasColumnName("representante_id");

                    b.HasKey("Id")
                        .HasName("pk_requisito_por_circunscripcion");

                    b.HasIndex("CicunscripcionId")
                        .HasDatabaseName("ix_requisito_por_circunscripcion_cicunscripcion_id");

                    b.HasIndex("RepresentanteId")
                        .HasDatabaseName("ix_requisito_por_circunscripcion_representante_id");

                    b.ToTable("requisito_por_circunscripcion", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            AnioEleccion = 2024,
                            CantidadIdentificacionIndigena = 1,
                            CicunscripcionId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1335),
                            LugaresDisponibles = 40,
                            RepresentanteId = 1
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            AnioEleccion = 2024,
                            CantidadIdentificacionIndigena = 1,
                            CicunscripcionId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1339),
                            LugaresDisponibles = 40,
                            RepresentanteId = 1
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            AnioEleccion = 2024,
                            CantidadIdentificacionIndigena = 4,
                            CicunscripcionId = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1340),
                            LugaresDisponibles = 40,
                            RepresentanteId = 1
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            AnioEleccion = 2024,
                            CantidadIdentificacionIndigena = 2,
                            CicunscripcionId = 4,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1341),
                            LugaresDisponibles = 40,
                            RepresentanteId = 1
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            AnioEleccion = 2024,
                            CantidadIdentificacionIndigena = 1,
                            CicunscripcionId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1342),
                            LugaresDisponibles = 40,
                            RepresentanteId = 1
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.Archivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Directorio")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("directorio");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<string>("Slug")
                        .HasColumnType("text")
                        .HasColumnName("slug");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tipo");

                    b.Property<bool>("esPublico")
                        .HasColumnType("boolean")
                        .HasColumnName("es_publico");

                    b.HasKey("Id")
                        .HasName("pk_archivo");

                    b.ToTable("archivo", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_area");

                    b.ToTable("area", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8945),
                            Nombre = "Jóvenes"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8950),
                            Nombre = "Mujeres"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.BajasSistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaBaja")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_baja");

                    b.Property<int>("MotivoBajaId")
                        .HasColumnType("integer")
                        .HasColumnName("motivo_baja_id");

                    b.Property<int>("PersonaId")
                        .HasColumnType("integer")
                        .HasColumnName("persona_id")
                        .HasComment("Id de la persona que se dio de baja");

                    b.HasKey("Id")
                        .HasName("pk_bajas_sistema");

                    b.HasIndex("MotivoBajaId")
                        .HasDatabaseName("ix_bajas_sistema_motivo_baja_id");

                    b.HasIndex("PersonaId")
                        .HasDatabaseName("ix_bajas_sistema_persona_id");

                    b.HasIndex("Id", "PersonaId")
                        .IsUnique()
                        .HasDatabaseName("ix_bajas_sistema_id_persona_id");

                    b.ToTable("bajas_sistema", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.AvanceEtapasCandidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("CandidatoCHCId")
                        .HasColumnType("integer")
                        .HasColumnName("candidato_chc_id");

                    b.Property<int>("EtapaId")
                        .HasColumnType("integer")
                        .HasColumnName("etapa_id");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_alta");

                    b.Property<DateTime>("FechaExpiracion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_expiracion");

                    b.Property<DateTime>("FechaUltimoCambio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_ultimo_cambio");

                    b.Property<int>("PorcentajeAvance")
                        .HasColumnType("integer")
                        .HasColumnName("porcentaje_avance");

                    b.Property<bool?>("ValidoComite")
                        .HasColumnType("boolean")
                        .HasColumnName("valido_comite");

                    b.HasKey("Id")
                        .HasName("pk_avance_etapas_candidato");

                    b.HasIndex("CandidatoCHCId")
                        .HasDatabaseName("ix_avance_etapas_candidato_candidato_chc_id");

                    b.HasIndex("EtapaId")
                        .HasDatabaseName("ix_avance_etapas_candidato_etapa_id");

                    b.ToTable("avance_etapas_candidato", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.CandidatoEtapaRegistroCHC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("CandidatoId")
                        .HasColumnType("integer")
                        .HasColumnName("candidato_id");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_alta");

                    b.Property<int>("RegistroId")
                        .HasColumnType("integer")
                        .HasColumnName("registro_id");

                    b.HasKey("Id")
                        .HasName("pk_candidato_etapa_registro_chc");

                    b.HasIndex("CandidatoId")
                        .HasDatabaseName("ix_candidato_etapa_registro_chc_candidato_id");

                    b.HasIndex("RegistroId")
                        .HasDatabaseName("ix_candidato_etapa_registro_chc_registro_id");

                    b.ToTable("candidato_etapa_registro_chc", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.CandidatosCHC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<bool?>("Afromexicanas")
                        .HasColumnType("boolean")
                        .HasColumnName("afromexicanas");

                    b.Property<int?>("CaminoId")
                        .HasColumnType("integer")
                        .HasColumnName("camino_id");

                    b.Property<string>("CargoPostulacion")
                        .HasColumnType("text")
                        .HasColumnName("cargo_postulacion");

                    b.Property<int?>("CargoPostulacionId")
                        .HasColumnType("integer")
                        .HasColumnName("cargo_postulacion_id");

                    b.Property<string>("CargosDesempeniadosDentroMC")
                        .HasColumnType("text")
                        .HasColumnName("cargos_desempeniados_dentro_mc");

                    b.Property<int?>("CircunscripcionId")
                        .HasColumnType("integer")
                        .HasColumnName("circunscripcion_id");

                    b.Property<string>("Comentarios")
                        .HasColumnType("text")
                        .HasColumnName("comentarios");

                    b.Property<bool?>("ConDiscapacidad")
                        .HasColumnType("boolean")
                        .HasColumnName("con_discapacidad");

                    b.Property<bool?>("DatoDePrueba")
                        .HasColumnType("boolean")
                        .HasColumnName("dato_de_prueba");

                    b.Property<int?>("DistritoId")
                        .HasColumnType("integer")
                        .HasColumnName("distrito_id");

                    b.Property<bool?>("DiversidadSexual")
                        .HasColumnType("boolean")
                        .HasColumnName("diversidad_sexual");

                    b.Property<bool?>("EnPobreza")
                        .HasColumnType("boolean")
                        .HasColumnName("en_pobreza");

                    b.Property<bool?>("EsAccionesAfirmativas")
                        .HasColumnType("boolean")
                        .HasColumnName("es_acciones_afirmativas");

                    b.Property<bool?>("EsSuplente")
                        .HasColumnType("boolean")
                        .HasColumnName("es_suplente");

                    b.Property<int?>("EstadoId")
                        .HasColumnType("integer")
                        .HasColumnName("estado_id");

                    b.Property<DateTime?>("FechaActualizacionSegundaRonda")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_actualizacion_segunda_ronda");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_alta");

                    b.Property<DateTime?>("FechaIngresoMC")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_ingreso_mc");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_inicio");

                    b.Property<bool?>("IdentificacionIndigena")
                        .HasColumnType("boolean")
                        .HasColumnName("identificacion_indigena");

                    b.Property<bool?>("MexicanosMigrantes")
                        .HasColumnType("boolean")
                        .HasColumnName("mexicanos_migrantes");

                    b.Property<int?>("PerfilId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_id");

                    b.Property<string>("PuestoEleccionPopularAnteriores")
                        .HasColumnType("text")
                        .HasColumnName("puesto_eleccion_popular_anteriores");

                    b.Property<int?>("RepresentanteId")
                        .HasColumnType("integer")
                        .HasColumnName("representante_id");

                    b.HasKey("Id")
                        .HasName("pk_candidatos_chc");

                    b.HasIndex("CaminoId")
                        .HasDatabaseName("ix_candidatos_chc_camino_id");

                    b.HasIndex("CargoPostulacionId")
                        .HasDatabaseName("ix_candidatos_chc_cargo_postulacion_id");

                    b.HasIndex("CircunscripcionId")
                        .HasDatabaseName("ix_candidatos_chc_circunscripcion_id");

                    b.HasIndex("DistritoId")
                        .HasDatabaseName("ix_candidatos_chc_distrito_id");

                    b.HasIndex("EstadoId")
                        .HasDatabaseName("ix_candidatos_chc_estado_id");

                    b.HasIndex("PerfilId")
                        .HasDatabaseName("ix_candidatos_chc_perfil_id");

                    b.HasIndex("RepresentanteId")
                        .HasDatabaseName("ix_candidatos_chc_representante_id");

                    b.ToTable("candidatos_chc", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.CandidatosExamenes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("CandidatoCHCId")
                        .HasColumnType("integer")
                        .HasColumnName("candidato_chc_id");

                    b.Property<bool>("EsAprobado")
                        .HasColumnType("boolean")
                        .HasColumnName("es_aprobado");

                    b.Property<int>("ExamenCHCId")
                        .HasColumnType("integer")
                        .HasColumnName("examen_chc_id");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_alta");

                    b.Property<DateTime>("FechaUltimoIntento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_ultimo_intento");

                    b.HasKey("Id")
                        .HasName("pk_candidatos_examenes");

                    b.HasIndex("CandidatoCHCId")
                        .HasDatabaseName("ix_candidatos_examenes_candidato_chc_id");

                    b.HasIndex("ExamenCHCId")
                        .HasDatabaseName("ix_candidatos_examenes_examen_chc_id");

                    b.ToTable("candidatos_examenes", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.CatalogoCaminosCHC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreColor")
                        .HasColumnType("text")
                        .HasColumnName("nombre_color");

                    b.Property<string>("ValorColor")
                        .HasColumnType("text")
                        .HasColumnName("valor_color")
                        .HasComment("Valores en HEX");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_caminos_chc");

                    b.ToTable("catalogo_caminos_chc", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9429),
                            Nombre = "General",
                            NombreColor = "Naranja"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9433),
                            Nombre = "Mujeres",
                            NombreColor = "Violeta"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9435),
                            Nombre = "Jóvenes",
                            NombreColor = "Fosfo"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9435),
                            Nombre = "Ciudadano",
                            NombreColor = "Blanco"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9436),
                            Nombre = "Personas con discapacidad",
                            NombreColor = "Eléctrico"
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9437),
                            Nombre = "Pueblos originarios",
                            NombreColor = "Celeste"
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9438),
                            Nombre = "Afrodescendientes",
                            NombreColor = "Limón"
                        },
                        new
                        {
                            Id = 8,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9439),
                            Nombre = "LGBTTTIQ",
                            NombreColor = "Arcoíris"
                        },
                        new
                        {
                            Id = 9,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9440),
                            Nombre = "Combinado",
                            NombreColor = "Tornasol"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.CatalogoCargosPostulacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int?>("EntidadFederativaId")
                        .HasColumnType("integer")
                        .HasColumnName("entidad_federativa_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("NivelCargoId")
                        .HasColumnType("integer")
                        .HasColumnName("nivel_cargo_id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_cargos_postulacion");

                    b.HasIndex("EntidadFederativaId")
                        .HasDatabaseName("ix_catalogo_cargos_postulacion_entidad_federativa_id");

                    b.HasIndex("NivelCargoId")
                        .HasDatabaseName("ix_catalogo_cargos_postulacion_nivel_cargo_id");

                    b.ToTable("catalogo_cargos_postulacion", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.CatalogoDocumentosEligibilidadCHC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion")
                        .HasComment("Es importante tener una descripcion detallada sobre lo que trata y sobre la manera de entregar");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre")
                        .HasComment("Nombre corto");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_documentos_eligibilidad_chc");

                    b.ToTable("catalogo_documentos_eligibilidad_chc", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Descripcion = "Carta Compromiso",
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(134),
                            Nombre = "Carta Compromiso"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Descripcion = "Evidencias",
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(137),
                            Nombre = "Evidencias"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.CatalogoEstatusDocumentosEligibilidadCHC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_estatus_documentos_eligibilidad_chc");

                    b.ToTable("catalogo_estatus_documentos_eligibilidad_chc", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9474),
                            Nombre = "Por validar"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9477),
                            Nombre = "Rechazado"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9478),
                            Nombre = "En revisión"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9479),
                            Nombre = "Aceptado"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.CatalogoEtapaRegistroCHC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_alta");

                    b.Property<int>("IndiceOrden")
                        .HasColumnType("integer")
                        .HasColumnName("indice_orden");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreURLRoute")
                        .HasColumnType("text")
                        .HasColumnName("nombre_url_route");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_etapa_registro_chc");

                    b.ToTable("catalogo_etapa_registro_chc", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(94),
                            IndiceOrden = 1,
                            Nombre = "Requisitos Ciudadanos",
                            NombreURLRoute = "camino.candidato.page"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(97),
                            IndiceOrden = 2,
                            Nombre = "Bienvenida 2",
                            NombreURLRoute = "heroe.ciudadano.page"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(99),
                            IndiceOrden = 3,
                            Nombre = "Carta Compromiso",
                            NombreURLRoute = "carta.compromiso.page"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(100),
                            IndiceOrden = 4,
                            Nombre = "Valores y Principios",
                            NombreURLRoute = "elegibilidad.page"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.CatalogoEtapasCHC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("CaminoId")
                        .HasColumnType("integer")
                        .HasColumnName("camino_id");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaLimite")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_limite")
                        .HasComment("Fecha en la que la etapa va a terminar");

                    b.Property<int?>("IndiceOrden")
                        .HasColumnType("integer")
                        .HasColumnName("indice_orden")
                        .HasComment("Indice Orden atributo sirve para ver el orden qe se mostraran las etapas");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreUrlRoute")
                        .HasColumnType("text")
                        .HasColumnName("nombre_url_route")
                        .HasComment("Url Pagina es la url de la vista");

                    b.Property<int>("TipoEtapaId")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_etapa_id");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_etapas_chc");

                    b.HasIndex("CaminoId")
                        .HasDatabaseName("ix_catalogo_etapas_chc_camino_id");

                    b.HasIndex("TipoEtapaId")
                        .HasDatabaseName("ix_catalogo_etapas_chc_tipo_etapa_id");

                    b.ToTable("catalogo_etapas_chc", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = false,
                            CaminoId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9522),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9522),
                            Nombre = "Nivel 0",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 2,
                            Activo = false,
                            CaminoId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9529),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9529),
                            Nombre = "Requisitos de elegibilidad",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            CaminoId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9531),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9531),
                            IndiceOrden = 1,
                            Nombre = "Mi camino",
                            NombreUrlRoute = "perfil.candidato.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            CaminoId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9533),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9532),
                            IndiceOrden = 2,
                            Nombre = "Capacitación básica",
                            NombreUrlRoute = "capacitacion.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            CaminoId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9534),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9534),
                            IndiceOrden = 4,
                            Nombre = "Crea tu equipo",
                            NombreUrlRoute = "crea.equipo.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            CaminoId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9537),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9536),
                            IndiceOrden = 3,
                            Nombre = "Tu causa",
                            NombreUrlRoute = "causa.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            CaminoId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9538),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9538),
                            IndiceOrden = 6,
                            Nombre = "Agenda ciudadana",
                            NombreUrlRoute = "agenda.ciudadana.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 8,
                            Activo = false,
                            CaminoId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9546),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9546),
                            Nombre = "3 de 3",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 9,
                            Activo = true,
                            CaminoId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9547),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9547),
                            IndiceOrden = 5,
                            Nombre = "Ficha territorial",
                            NombreUrlRoute = "ficha.territorial.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 10,
                            Activo = true,
                            CaminoId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9549),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9549),
                            IndiceOrden = 7,
                            Nombre = "Estrategia política",
                            NombreUrlRoute = "5estrategia.politica.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 11,
                            Activo = false,
                            CaminoId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9551),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9550),
                            Nombre = "Agenda de trabajo",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 12,
                            Activo = false,
                            CaminoId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9552),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9551),
                            Nombre = "Ficha y equipo electoral",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 13,
                            Activo = false,
                            CaminoId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9553),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9553),
                            Nombre = "Perfil del ciudadano",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 14,
                            Activo = false,
                            CaminoId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9554),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9554),
                            Nombre = "Nivel 0",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 15,
                            Activo = false,
                            CaminoId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9556),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9555),
                            Nombre = "Requisitos de elegibilidad",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 16,
                            Activo = true,
                            CaminoId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9557),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9556),
                            IndiceOrden = 1,
                            Nombre = "Mi camino",
                            NombreUrlRoute = "perfil.candidato.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 17,
                            Activo = true,
                            CaminoId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9558),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9558),
                            IndiceOrden = 2,
                            Nombre = "Capacitación básica",
                            NombreUrlRoute = "capacitacion.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 18,
                            Activo = true,
                            CaminoId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9560),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9560),
                            IndiceOrden = 4,
                            Nombre = "Crea tu equipo",
                            NombreUrlRoute = "crea.equipo.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 19,
                            Activo = true,
                            CaminoId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9561),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9561),
                            IndiceOrden = 3,
                            Nombre = "Tu causa",
                            NombreUrlRoute = "causa.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 20,
                            Activo = true,
                            CaminoId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9563),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9562),
                            IndiceOrden = 6,
                            Nombre = "Agenda ciudadana",
                            NombreUrlRoute = "agenda.ciudadana.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 21,
                            Activo = false,
                            CaminoId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9564),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9564),
                            Nombre = "3 de 3",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 22,
                            Activo = true,
                            CaminoId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9565),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9565),
                            IndiceOrden = 5,
                            Nombre = "Ficha territorial",
                            NombreUrlRoute = "ficha.territorial.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 23,
                            Activo = true,
                            CaminoId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9567),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9567),
                            IndiceOrden = 7,
                            Nombre = "Estrategia política",
                            NombreUrlRoute = "5estrategia.politica.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 24,
                            Activo = false,
                            CaminoId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9568),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9568),
                            Nombre = "Agenda de trabajo",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 25,
                            Activo = false,
                            CaminoId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9570),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9569),
                            Nombre = "Ficha y equipo electoral",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 26,
                            Activo = false,
                            CaminoId = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9571),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9571),
                            Nombre = "Perfil del ciudadano",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 27,
                            Activo = false,
                            CaminoId = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9572),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9572),
                            Nombre = "Nivel 0",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 28,
                            Activo = false,
                            CaminoId = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9573),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9573),
                            Nombre = "Requisitos de elegibilidad",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 29,
                            Activo = true,
                            CaminoId = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9574),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9574),
                            IndiceOrden = 1,
                            Nombre = "Mi camino",
                            NombreUrlRoute = "perfil.candidato.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 30,
                            Activo = true,
                            CaminoId = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9576),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9575),
                            IndiceOrden = 2,
                            Nombre = "Capacitación básica",
                            NombreUrlRoute = "capacitacion.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 31,
                            Activo = true,
                            CaminoId = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9577),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9577),
                            IndiceOrden = 4,
                            Nombre = "Crea tu equipo",
                            NombreUrlRoute = "crea.equipo.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 32,
                            Activo = true,
                            CaminoId = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9579),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9578),
                            IndiceOrden = 3,
                            Nombre = "Tu causa",
                            NombreUrlRoute = "causa.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 33,
                            Activo = true,
                            CaminoId = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9580),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9580),
                            IndiceOrden = 6,
                            Nombre = "Agenda ciudadana",
                            NombreUrlRoute = "agenda.ciudadana.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 34,
                            Activo = false,
                            CaminoId = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9582),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9582),
                            Nombre = "3 de 3",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 35,
                            Activo = true,
                            CaminoId = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9583),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9583),
                            IndiceOrden = 5,
                            Nombre = "Ficha territorial",
                            NombreUrlRoute = "ficha.territorial.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 36,
                            Activo = true,
                            CaminoId = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9584),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9584),
                            IndiceOrden = 7,
                            Nombre = "Estrategia política",
                            NombreUrlRoute = "5estrategia.politica.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 37,
                            Activo = false,
                            CaminoId = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9586),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9586),
                            Nombre = "Agenda de trabajo",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 38,
                            Activo = false,
                            CaminoId = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9587),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9587),
                            Nombre = "Ficha y equipo electoral",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 39,
                            Activo = false,
                            CaminoId = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9588),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9588),
                            Nombre = "Perfil del ciudadano",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 40,
                            Activo = false,
                            CaminoId = 4,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9590),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9589),
                            Nombre = "Requisitos de elegibilidad",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 41,
                            Activo = true,
                            CaminoId = 4,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9591),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9590),
                            IndiceOrden = 1,
                            Nombre = "Mi camino",
                            NombreUrlRoute = "perfil.candidato.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 42,
                            Activo = true,
                            CaminoId = 4,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9592),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9592),
                            IndiceOrden = 2,
                            Nombre = "Capacitación básica",
                            NombreUrlRoute = "capacitacion.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 43,
                            Activo = false,
                            CaminoId = 4,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9594),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9593),
                            Nombre = "3 de 3",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 44,
                            Activo = true,
                            CaminoId = 4,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9595),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9594),
                            IndiceOrden = 3,
                            Nombre = "Tu causa",
                            NombreUrlRoute = "causa.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 45,
                            Activo = true,
                            CaminoId = 4,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9596),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9596),
                            IndiceOrden = 4,
                            Nombre = "Crea tu equipo",
                            NombreUrlRoute = "crea.equipo.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 46,
                            Activo = true,
                            CaminoId = 4,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9597),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9597),
                            IndiceOrden = 6,
                            Nombre = "Agenda ciudadana",
                            NombreUrlRoute = "agenda.ciudadana.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 47,
                            Activo = false,
                            CaminoId = 4,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9599),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9599),
                            Nombre = "Firmas",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 48,
                            Activo = true,
                            CaminoId = 4,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9600),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9600),
                            IndiceOrden = 5,
                            Nombre = "Ficha territorial",
                            NombreUrlRoute = "ficha.territorial.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 49,
                            Activo = true,
                            CaminoId = 4,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9601),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9601),
                            IndiceOrden = 7,
                            Nombre = "Estrategia política",
                            NombreUrlRoute = "5estrategia.politica.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 50,
                            Activo = false,
                            CaminoId = 4,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9603),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9602),
                            Nombre = "Agenda de trabajo",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 51,
                            Activo = false,
                            CaminoId = 4,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9604),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9604),
                            Nombre = "Ficha y equipo electoral",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 52,
                            Activo = false,
                            CaminoId = 4,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9605),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9605),
                            Nombre = "Perfil del ciudadano",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 53,
                            Activo = false,
                            CaminoId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9606),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9606),
                            Nombre = "Requisitos de elegibilidad",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 54,
                            Activo = true,
                            CaminoId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9608),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9607),
                            IndiceOrden = 1,
                            Nombre = "Mi camino",
                            NombreUrlRoute = "perfil.candidato.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 55,
                            Activo = true,
                            CaminoId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9609),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9609),
                            IndiceOrden = 2,
                            Nombre = "Capacitación básica",
                            NombreUrlRoute = "capacitacion.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 56,
                            Activo = true,
                            CaminoId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9610),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9610),
                            IndiceOrden = 4,
                            Nombre = "Crea tu equipo",
                            NombreUrlRoute = "crea.equipo.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 57,
                            Activo = true,
                            CaminoId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9612),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9611),
                            IndiceOrden = 3,
                            Nombre = "Tu causa",
                            NombreUrlRoute = "causa.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 58,
                            Activo = true,
                            CaminoId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9613),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9613),
                            IndiceOrden = 6,
                            Nombre = "Agenda ciudadana",
                            NombreUrlRoute = "agenda.ciudadana.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 59,
                            Activo = false,
                            CaminoId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9615),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9614),
                            Nombre = "3 de 3",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 60,
                            Activo = false,
                            CaminoId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9616),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9615),
                            Nombre = "Firmas",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 61,
                            Activo = true,
                            CaminoId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9617),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9617),
                            IndiceOrden = 5,
                            Nombre = "Ficha territorial",
                            NombreUrlRoute = "ficha.territorial.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 62,
                            Activo = true,
                            CaminoId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9618),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9618),
                            IndiceOrden = 7,
                            Nombre = "Estrategia política",
                            NombreUrlRoute = "5estrategia.politica.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 63,
                            Activo = false,
                            CaminoId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9620),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9619),
                            Nombre = "Agenda de trabajo",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 64,
                            Activo = false,
                            CaminoId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9621),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9621),
                            Nombre = "Ficha y equipo electoral",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 65,
                            Activo = false,
                            CaminoId = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9622),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9622),
                            Nombre = "Perfil del ciudadano",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 66,
                            Activo = false,
                            CaminoId = 6,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9624),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9624),
                            Nombre = "Requisitos de elegibilidad",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 67,
                            Activo = true,
                            CaminoId = 6,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9625),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9625),
                            IndiceOrden = 1,
                            Nombre = "Mi camino",
                            NombreUrlRoute = "perfil.candidato.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 68,
                            Activo = true,
                            CaminoId = 6,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9627),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9626),
                            IndiceOrden = 2,
                            Nombre = "Capacitación básica",
                            NombreUrlRoute = "capacitacion.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 69,
                            Activo = true,
                            CaminoId = 6,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9628),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9628),
                            IndiceOrden = 4,
                            Nombre = "Crea tu equipo",
                            NombreUrlRoute = "crea.equipo.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 70,
                            Activo = true,
                            CaminoId = 6,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9629),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9629),
                            IndiceOrden = 3,
                            Nombre = "Tu causa",
                            NombreUrlRoute = "causa.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 71,
                            Activo = true,
                            CaminoId = 6,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9631),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9630),
                            IndiceOrden = 6,
                            Nombre = "Agenda ciudadana",
                            NombreUrlRoute = "agenda.ciudadana.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 72,
                            Activo = false,
                            CaminoId = 6,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9632),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9632),
                            Nombre = "3 de 3",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 73,
                            Activo = false,
                            CaminoId = 6,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9639),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9639),
                            Nombre = "Firmas",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 74,
                            Activo = true,
                            CaminoId = 6,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9640),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9640),
                            IndiceOrden = 5,
                            Nombre = "Ficha territorial",
                            NombreUrlRoute = "ficha.territorial.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 75,
                            Activo = true,
                            CaminoId = 6,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9642),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9641),
                            IndiceOrden = 7,
                            Nombre = "Estrategia política",
                            NombreUrlRoute = "5estrategia.politica.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 76,
                            Activo = false,
                            CaminoId = 6,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9643),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9643),
                            Nombre = "Agenda de trabajo",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 77,
                            Activo = false,
                            CaminoId = 6,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9644),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9644),
                            Nombre = "Ficha y equipo electoral",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 78,
                            Activo = false,
                            CaminoId = 6,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9646),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9645),
                            Nombre = "Perfil del ciudadano",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 79,
                            Activo = false,
                            CaminoId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9647),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9646),
                            Nombre = "Requisitos de elegibilidad",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 80,
                            Activo = true,
                            CaminoId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9648),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9648),
                            IndiceOrden = 1,
                            Nombre = "Mi camino",
                            NombreUrlRoute = "perfil.candidato.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 81,
                            Activo = true,
                            CaminoId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9649),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9649),
                            IndiceOrden = 2,
                            Nombre = "Capacitación básica",
                            NombreUrlRoute = "capacitacion.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 82,
                            Activo = true,
                            CaminoId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9651),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9650),
                            IndiceOrden = 4,
                            Nombre = "Crea tu equipo",
                            NombreUrlRoute = "crea.equipo.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 83,
                            Activo = true,
                            CaminoId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9652),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9652),
                            IndiceOrden = 3,
                            Nombre = "Tu causa",
                            NombreUrlRoute = "causa.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 84,
                            Activo = true,
                            CaminoId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9653),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9653),
                            IndiceOrden = 6,
                            Nombre = "Agenda ciudadana",
                            NombreUrlRoute = "agenda.ciudadana.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 85,
                            Activo = false,
                            CaminoId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9655),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9655),
                            Nombre = "3 de 3",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 86,
                            Activo = false,
                            CaminoId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9656),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9656),
                            Nombre = "Firmas",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 87,
                            Activo = true,
                            CaminoId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9657),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9657),
                            IndiceOrden = 5,
                            Nombre = "Ficha territorial",
                            NombreUrlRoute = "ficha.territorial.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 88,
                            Activo = true,
                            CaminoId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9659),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9658),
                            IndiceOrden = 7,
                            Nombre = "Estrategia política",
                            NombreUrlRoute = "5estrategia.politica.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 89,
                            Activo = false,
                            CaminoId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9660),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9660),
                            Nombre = "Agenda de trabajo",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 90,
                            Activo = false,
                            CaminoId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9661),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9661),
                            Nombre = "Ficha y equipo electoral",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 91,
                            Activo = false,
                            CaminoId = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9662),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9662),
                            Nombre = "Perfil del ciudadano",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 92,
                            Activo = false,
                            CaminoId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9664),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9663),
                            Nombre = "Requisitos de elegibilidad",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 93,
                            Activo = true,
                            CaminoId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9665),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9665),
                            IndiceOrden = 1,
                            Nombre = "Mi camino",
                            NombreUrlRoute = "perfil.candidato.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 94,
                            Activo = true,
                            CaminoId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9666),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9666),
                            IndiceOrden = 2,
                            Nombre = "Capacitación básica",
                            NombreUrlRoute = "capacitacion.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 95,
                            Activo = true,
                            CaminoId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9668),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9667),
                            IndiceOrden = 4,
                            Nombre = "Crea tu equipo",
                            NombreUrlRoute = "crea.equipo.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 96,
                            Activo = true,
                            CaminoId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9669),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9669),
                            IndiceOrden = 3,
                            Nombre = "Tu causa",
                            NombreUrlRoute = "causa.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 97,
                            Activo = true,
                            CaminoId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9670),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9670),
                            IndiceOrden = 6,
                            Nombre = "Agenda ciudadana",
                            NombreUrlRoute = "agenda.ciudadana.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 98,
                            Activo = false,
                            CaminoId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9672),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9671),
                            Nombre = "3 de 3",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 99,
                            Activo = false,
                            CaminoId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9673),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9673),
                            Nombre = "Firmas",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 100,
                            Activo = true,
                            CaminoId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9674),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9674),
                            IndiceOrden = 5,
                            Nombre = "Ficha territorial",
                            NombreUrlRoute = "ficha.territorial.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 101,
                            Activo = true,
                            CaminoId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9676),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9675),
                            IndiceOrden = 7,
                            Nombre = "Estrategia política",
                            NombreUrlRoute = "5estrategia.politica.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 102,
                            Activo = true,
                            CaminoId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9677),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9677),
                            Nombre = "Agenda de trabajo",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 103,
                            Activo = true,
                            CaminoId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9678),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9678),
                            Nombre = "Ficha y equipo electoral",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 104,
                            Activo = true,
                            CaminoId = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9679),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9679),
                            Nombre = "Perfil del ciudadano",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 105,
                            Activo = false,
                            CaminoId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9681),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9680),
                            Nombre = "Requisitos de elegibilidad",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 106,
                            Activo = true,
                            CaminoId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9682),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9682),
                            IndiceOrden = 1,
                            Nombre = "Mi camino",
                            NombreUrlRoute = "perfil.candidato.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 107,
                            Activo = true,
                            CaminoId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9683),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9683),
                            IndiceOrden = 2,
                            Nombre = "Capacitación básica",
                            NombreUrlRoute = "capacitacion.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 108,
                            Activo = true,
                            CaminoId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9685),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9684),
                            IndiceOrden = 4,
                            Nombre = "Crea tu equipo",
                            NombreUrlRoute = "crea.equipo.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 109,
                            Activo = true,
                            CaminoId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9686),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9686),
                            IndiceOrden = 3,
                            Nombre = "Tu causa",
                            NombreUrlRoute = "causa.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 110,
                            Activo = true,
                            CaminoId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9687),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9687),
                            IndiceOrden = 6,
                            Nombre = "Agenda ciudadana",
                            NombreUrlRoute = "agenda.ciudadana.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 111,
                            Activo = false,
                            CaminoId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9689),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9688),
                            Nombre = "3 de 3",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 112,
                            Activo = false,
                            CaminoId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9690),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9690),
                            Nombre = "Firmas",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 113,
                            Activo = true,
                            CaminoId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9691),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9691),
                            IndiceOrden = 5,
                            Nombre = "Ficha territorial",
                            NombreUrlRoute = "ficha.territorial.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 114,
                            Activo = true,
                            CaminoId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9693),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9692),
                            IndiceOrden = 7,
                            Nombre = "Estrategia política",
                            NombreUrlRoute = "5estrategia.politica.page",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 115,
                            Activo = false,
                            CaminoId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9694),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9694),
                            Nombre = "Agenda de trabajo",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 116,
                            Activo = false,
                            CaminoId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9695),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9695),
                            Nombre = "Ficha y equipo electoral",
                            TipoEtapaId = 1
                        },
                        new
                        {
                            Id = 117,
                            Activo = false,
                            CaminoId = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9696),
                            FechaLimite = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9696),
                            Nombre = "Perfil del ciudadano",
                            TipoEtapaId = 1
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.CatalogoNivelesCargos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_niveles_cargos");

                    b.ToTable("catalogo_niveles_cargos", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.CatalogoTiposEtapasCHC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_tipos_etapas_chc");

                    b.ToTable("catalogo_tipos_etapas_chc", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9845),
                            Nombre = "Camino al Heroe Ciudadano"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9848),
                            Nombre = "Camino al Candidat@"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.CatalogoTiposPreguntas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_tipos_preguntas");

                    b.ToTable("catalogo_tipos_preguntas", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9888),
                            Nombre = "Opción múltiple"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9891),
                            Nombre = "Boleano"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9892),
                            Nombre = "Selección única"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.ConfiguracionCHC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Archivo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("archivo");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_alta");

                    b.Property<string>("NombreConfiguracion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre_configuracion");

                    b.Property<string>("TipoConfiguracion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tipo_configuracion");

                    b.HasKey("Id")
                        .HasName("pk_configuracion_chc");

                    b.ToTable("configuracion_chc", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.ContenidoPantallasEtapasCHC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("contenido");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.HasKey("Id")
                        .HasName("pk_contenido_pantallas_etapas_chc");

                    b.ToTable("contenido_pantallas_etapas_chc", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.ContenidoPantallasEtapasCHCCatalogoEtapasCHC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("CatalogoEtapasCHCId")
                        .HasColumnType("integer")
                        .HasColumnName("catalogo_etapas_chc_id");

                    b.Property<int>("ContenidoPantallasEtapasCHCId")
                        .HasColumnType("integer")
                        .HasColumnName("contenido_pantallas_etapas_chc_id");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.HasKey("Id")
                        .HasName("pk_contenido_pantallas_etapas_chc_catalogo_etapas_chc");

                    b.HasIndex("CatalogoEtapasCHCId")
                        .HasDatabaseName("ix_contenido_pantallas_etapas_chc_catalogo_etapas_chc_catalogo");

                    b.HasIndex("ContenidoPantallasEtapasCHCId")
                        .HasDatabaseName("ix_contenido_pantallas_etapas_chc_catalogo_etapas_chc_contenid");

                    b.ToTable("contenido_pantallas_etapas_chc_catalogo_etapas_chc", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.DetalleCandidatosExamenes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("ExamenCandidatoId")
                        .HasColumnType("integer")
                        .HasColumnName("examen_candidato_id");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_alta");

                    b.Property<int>("RespuestaExamenCHCId")
                        .HasColumnType("integer")
                        .HasColumnName("respuesta_examen_chc_id");

                    b.HasKey("Id")
                        .HasName("pk_detalle_candidatos_examenes");

                    b.HasIndex("ExamenCandidatoId")
                        .HasDatabaseName("ix_detalle_candidatos_examenes_examen_candidato_id");

                    b.HasIndex("RespuestaExamenCHCId")
                        .HasDatabaseName("ix_detalle_candidatos_examenes_respuesta_examen_chc_id");

                    b.ToTable("detalle_candidatos_examenes", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.DocumentoCandidatosCHC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("CandidatoCHCId")
                        .HasColumnType("integer")
                        .HasColumnName("candidato_chc_id");

                    b.Property<string>("DescripcionArchivoUsuario")
                        .HasColumnType("text")
                        .HasColumnName("descripcion_archivo_usuario");

                    b.Property<int>("DocumentoEligibilidadCHCId")
                        .HasColumnType("integer")
                        .HasColumnName("documento_eligibilidad_chc_id");

                    b.Property<int>("EstatusDocumentoEligibilidadCHCId")
                        .HasColumnType("integer")
                        .HasColumnName("estatus_documento_eligibilidad_chc_id");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_alta");

                    b.Property<string>("MotivoRechazo")
                        .HasColumnType("text")
                        .HasColumnName("motivo_rechazo");

                    b.Property<string>("NombreArchivo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre_archivo");

                    b.Property<string>("NombreArchivoUsuario")
                        .HasColumnType("text")
                        .HasColumnName("nombre_archivo_usuario");

                    b.HasKey("Id")
                        .HasName("pk_documento_candidatos_chc");

                    b.HasIndex("CandidatoCHCId")
                        .HasDatabaseName("ix_documento_candidatos_chc_candidato_chc_id");

                    b.HasIndex("DocumentoEligibilidadCHCId")
                        .HasDatabaseName("ix_documento_candidatos_chc_documento_eligibilidad_chc_id");

                    b.HasIndex("EstatusDocumentoEligibilidadCHCId")
                        .HasDatabaseName("ix_documento_candidatos_chc_estatus_documento_eligibilidad_chc");

                    b.ToTable("documento_candidatos_chc", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.DomicilioOirRecibirNotificacionesCHC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("CandidatoId")
                        .HasColumnType("integer")
                        .HasColumnName("candidato_id");

                    b.Property<int>("DireccionId")
                        .HasColumnType("integer")
                        .HasColumnName("direccion_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.HasKey("Id")
                        .HasName("pk_domicilio_oir_recibir_notificaciones_chc");

                    b.HasIndex("CandidatoId")
                        .HasDatabaseName("ix_domicilio_oir_recibir_notificaciones_chc_candidato_id");

                    b.HasIndex("DireccionId")
                        .HasDatabaseName("ix_domicilio_oir_recibir_notificaciones_chc_direccion_id");

                    b.ToTable("domicilio_oir_recibir_notificaciones_chc", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.ExamenesCHC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_alta");

                    b.Property<string>("NombreExamen")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre_examen");

                    b.HasKey("Id")
                        .HasName("pk_examenes_chc");

                    b.ToTable("examenes_chc", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9921),
                            NombreExamen = "Evaluación sobre la Carta de Bienvenida"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9924),
                            NombreExamen = "Evaluación carta compromiso"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9926),
                            NombreExamen = "Evaluación valores"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.PerfilPersonaCHC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_alta");

                    b.Property<int>("PerfilId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_id");

                    b.Property<int>("PersonaId")
                        .HasColumnType("integer")
                        .HasColumnName("persona_id");

                    b.HasKey("Id")
                        .HasName("pk_perfil_persona_chc");

                    b.HasIndex("PerfilId")
                        .HasDatabaseName("ix_perfil_persona_chc_perfil_id");

                    b.HasIndex("PersonaId")
                        .HasDatabaseName("ix_perfil_persona_chc_persona_id");

                    b.ToTable("perfil_persona_chc", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.PreguntasExamenCHC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("ExamenCHCId")
                        .HasColumnType("integer")
                        .HasColumnName("examen_chc_id");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_alta");

                    b.Property<string>("Pregunta")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pregunta");

                    b.Property<int>("TipoPreguntaId")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_pregunta_id");

                    b.HasKey("Id")
                        .HasName("pk_preguntas_examen_chc");

                    b.HasIndex("ExamenCHCId")
                        .HasDatabaseName("ix_preguntas_examen_chc_examen_chc_id");

                    b.HasIndex("TipoPreguntaId")
                        .HasDatabaseName("ix_preguntas_examen_chc_tipo_pregunta_id");

                    b.ToTable("preguntas_examen_chc", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            ExamenCHCId = 1,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9971),
                            Pregunta = "¿Cuál es el objetivo del camino del héroe ciudadan@?",
                            TipoPreguntaId = 1
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            ExamenCHCId = 1,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9974),
                            Pregunta = "¿Por qué hay varios caminos al héroe ciudadano?",
                            TipoPreguntaId = 1
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            ExamenCHCId = 1,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9975),
                            Pregunta = "¿Si participas en el Camino del Héroe Ciudadano tienes asegurada una candidatura de Movimiento Ciudadano?",
                            TipoPreguntaId = 1
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            ExamenCHCId = 2,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9977),
                            Pregunta = "¿Si registro mi información en la plataforma del Camino del Héroe Ciudadano ya no tengo que registrar mi información ante el INE?",
                            TipoPreguntaId = 1
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            ExamenCHCId = 2,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9978),
                            Pregunta = "¿Puedo participar en varios caminos para ser considerado en varios procesos de selección de precandidaturas si cumplo con los requisitos de acceso?",
                            TipoPreguntaId = 1
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            ExamenCHCId = 3,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9980),
                            Pregunta = "¿Qué está prohibido por la ley 3 de 3 y hace que una persona no pueda participar en el camino del héroe y la heroína ciudadana?",
                            TipoPreguntaId = 1
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            ExamenCHCId = 3,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9981),
                            Pregunta = "¿En cuáles documentos se encuentran los valores, propuestas y principios de Movimiento Ciudadano que todas las personas participantes del camino del héroe y la heroína ciudadana deben seguir?",
                            TipoPreguntaId = 1
                        },
                        new
                        {
                            Id = 8,
                            Activo = true,
                            ExamenCHCId = 3,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9982),
                            Pregunta = "¿El camino del héroe y la heroína ciudadana se  encuentra  vinculado  con  las  convocatorias  de  la  Comisión  Nacional  de  Convenciones  y  Procesos  Internos  de  Movimiento  Ciudadano?",
                            TipoPreguntaId = 1
                        },
                        new
                        {
                            Id = 9,
                            Activo = true,
                            ExamenCHCId = 3,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9984),
                            Pregunta = "Selecciona la respuesta que incluye algunos de los principios que Movimiento Ciudadano respalda:",
                            TipoPreguntaId = 1
                        },
                        new
                        {
                            Id = 10,
                            Activo = true,
                            ExamenCHCId = 3,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9986),
                            Pregunta = "¿Cuáles son los 5 ejes de la Carta de Identidad donde se encuentran los 22 compromisos solemnes que las personas que colaboran con Movimiento Ciudadano se comprometen a cumplir?",
                            TipoPreguntaId = 1
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.RespuestaExamenCHC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<bool>("EsCorrecta")
                        .HasColumnType("boolean")
                        .HasColumnName("es_correcta");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_alta");

                    b.Property<int>("PreguntaExamenCHCId")
                        .HasColumnType("integer")
                        .HasColumnName("pregunta_examen_chc_id");

                    b.Property<string>("Respuesta")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("respuesta");

                    b.HasKey("Id")
                        .HasName("pk_respuesta_examen_chc");

                    b.HasIndex("PreguntaExamenCHCId")
                        .HasDatabaseName("ix_respuesta_examen_chc_pregunta_examen_chc_id");

                    b.ToTable("respuesta_examen_chc", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            EsCorrecta = true,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(16),
                            PreguntaExamenCHCId = 1,
                            Respuesta = "Encontrar a los mejores perfiles para defender las causas de la ciudadanía y convertirlos en héroes ciudadan@s."
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            EsCorrecta = false,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(19),
                            PreguntaExamenCHCId = 1,
                            Respuesta = "Dar un lugar a las personas para que se conozcan y compitan para divertirse."
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            EsCorrecta = false,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(20),
                            PreguntaExamenCHCId = 1,
                            Respuesta = "No lo sé."
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            EsCorrecta = false,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(22),
                            PreguntaExamenCHCId = 2,
                            Respuesta = "Para permitir que las personas que se registren en un camino avancen más rápido que los que participan en otro."
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            EsCorrecta = true,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(23),
                            PreguntaExamenCHCId = 2,
                            Respuesta = "Para revertir la desigualdad que enfrentan en el ejercicio de sus derechos político-electorales algunos grupos en situación de discriminación o vulnerabilidad."
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            EsCorrecta = false,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(25),
                            PreguntaExamenCHCId = 2,
                            Respuesta = "No lo sé."
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            EsCorrecta = false,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(26),
                            PreguntaExamenCHCId = 3,
                            Respuesta = "Sí, tendré una candidatura asegurada cuando comience el proceso de selección de precandidaturas."
                        },
                        new
                        {
                            Id = 8,
                            Activo = true,
                            EsCorrecta = true,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(27),
                            PreguntaExamenCHCId = 3,
                            Respuesta = "No, pero tendré elementos que me permitan ser considerado en el proceso de selección de precandidaturas."
                        },
                        new
                        {
                            Id = 9,
                            Activo = true,
                            EsCorrecta = false,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(29),
                            PreguntaExamenCHCId = 3,
                            Respuesta = "No sé."
                        },
                        new
                        {
                            Id = 10,
                            Activo = true,
                            EsCorrecta = true,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(30),
                            PreguntaExamenCHCId = 4,
                            Respuesta = "Sí, tengo que cumplir con la entrega de documentos ante el INE como lo estipula la ley."
                        },
                        new
                        {
                            Id = 11,
                            Activo = true,
                            EsCorrecta = false,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(32),
                            PreguntaExamenCHCId = 4,
                            Respuesta = "No, con la información que cargue en la plataforma del Camino del Héroe Ciudadano será suficiente."
                        },
                        new
                        {
                            Id = 12,
                            Activo = true,
                            EsCorrecta = false,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(33),
                            PreguntaExamenCHCId = 4,
                            Respuesta = "No sé."
                        },
                        new
                        {
                            Id = 13,
                            Activo = true,
                            EsCorrecta = false,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(34),
                            PreguntaExamenCHCId = 5,
                            Respuesta = "Sí, puedo participar en diferentes caminos siempre y cuando cumpla con los requisitos de acceso del camino"
                        },
                        new
                        {
                            Id = 14,
                            Activo = true,
                            EsCorrecta = true,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(36),
                            PreguntaExamenCHCId = 5,
                            Respuesta = "No, solamente puedo participar en un camino ya que existe un camino que contempla a las personas que cumplen varios requisitos de acceso."
                        },
                        new
                        {
                            Id = 15,
                            Activo = true,
                            EsCorrecta = false,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(37),
                            PreguntaExamenCHCId = 5,
                            Respuesta = "No sé."
                        },
                        new
                        {
                            Id = 16,
                            Activo = true,
                            EsCorrecta = true,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(38),
                            PreguntaExamenCHCId = 6,
                            Respuesta = "Haber sido condenado o sentenciado por una agresión de género, delitos sexuales, o por ser deudor alimentario."
                        },
                        new
                        {
                            Id = 17,
                            Activo = true,
                            EsCorrecta = false,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(39),
                            PreguntaExamenCHCId = 6,
                            Respuesta = "No presentar tu declaración patrimonial en tiempo y forma."
                        },
                        new
                        {
                            Id = 18,
                            Activo = true,
                            EsCorrecta = false,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(41),
                            PreguntaExamenCHCId = 6,
                            Respuesta = "No lo sé."
                        },
                        new
                        {
                            Id = 19,
                            Activo = true,
                            EsCorrecta = true,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(43),
                            PreguntaExamenCHCId = 7,
                            Respuesta = "Carta Progresista, Carta Compromiso,Carta de Identidad, Declaración de Principios y Programa de Acción de Movimiento Ciudadano."
                        },
                        new
                        {
                            Id = 20,
                            Activo = true,
                            EsCorrecta = false,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(44),
                            PreguntaExamenCHCId = 7,
                            Respuesta = "Plan de Acción, Carta Compromiso, Estatutos, Carta Progresista y Libro de Valores de Movimiento Ciudadano."
                        },
                        new
                        {
                            Id = 21,
                            Activo = true,
                            EsCorrecta = false,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(46),
                            PreguntaExamenCHCId = 7,
                            Respuesta = "No lo sé."
                        },
                        new
                        {
                            Id = 22,
                            Activo = true,
                            EsCorrecta = false,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(47),
                            PreguntaExamenCHCId = 8,
                            Respuesta = "Si."
                        },
                        new
                        {
                            Id = 23,
                            Activo = true,
                            EsCorrecta = true,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(49),
                            PreguntaExamenCHCId = 8,
                            Respuesta = "No."
                        },
                        new
                        {
                            Id = 24,
                            Activo = true,
                            EsCorrecta = false,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(50),
                            PreguntaExamenCHCId = 8,
                            Respuesta = "No lo sé."
                        },
                        new
                        {
                            Id = 25,
                            Activo = true,
                            EsCorrecta = true,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(51),
                            PreguntaExamenCHCId = 9,
                            Respuesta = "Democracia social, igualdad sustantiva entre hombres y mujeres, economía social de mercado, inclusión social y fortalecimiento del poder ciudadano."
                        },
                        new
                        {
                            Id = 26,
                            Activo = true,
                            EsCorrecta = false,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(52),
                            PreguntaExamenCHCId = 9,
                            Respuesta = "Desarrollo económico basado en el uso de combustibles fósiles, asistencialismo social, centralismo político."
                        },
                        new
                        {
                            Id = 27,
                            Activo = true,
                            EsCorrecta = false,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(54),
                            PreguntaExamenCHCId = 9,
                            Respuesta = "No lo sé."
                        },
                        new
                        {
                            Id = 28,
                            Activo = true,
                            EsCorrecta = false,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(55),
                            PreguntaExamenCHCId = 10,
                            Respuesta = "Desarrollo económico, Pluralismo, Salud y bienestar, Educación y Seguridad."
                        },
                        new
                        {
                            Id = 29,
                            Activo = true,
                            EsCorrecta = true,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(56),
                            PreguntaExamenCHCId = 10,
                            Respuesta = "Estado, soberanía popular y democracia; Derechos humanos; Equidad y desarrollo económico; Rendición de cuentas, transparencia y combate a la corrupción; Federalismo y Municipalismo."
                        },
                        new
                        {
                            Id = 30,
                            Activo = true,
                            EsCorrecta = false,
                            FechaAlta = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(57),
                            PreguntaExamenCHCId = 10,
                            Respuesta = "No lo sé."
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.CatalogoCategoriasPreguntasEncuestas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_categorias_preguntas_encuestas");

                    b.ToTable("catalogo_categorias_preguntas_encuestas", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8825),
                            Nombre = "Coordinación"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.CatalogoCausasLanding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_causas_landing");

                    b.ToTable("catalogo_causas_landing", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9196),
                            Nombre = "Mujeres"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9199),
                            Nombre = "Jóvenes"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9200),
                            Nombre = "Medio ambiente"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9201),
                            Nombre = "Personas con discapacidad"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9201),
                            Nombre = "Derechos humanos"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.CatalogoConfiguraciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("valor");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_configuraciones");

                    b.ToTable("catalogo_configuraciones", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9127),
                            Nombre = "client_id",
                            Valor = "10"
                        },
                        new
                        {
                            Id = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9131),
                            Nombre = "client_secret",
                            Valor = "Ji28k8iPYrUqDTGCiIQCjZAZL4NZGAaez8W6C2PL"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.CatalogoEstatusVoluntario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_estatus_voluntario");

                    b.ToTable("catalogo_estatus_voluntario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8905),
                            Nombre = "Por validar"
                        },
                        new
                        {
                            Id = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8909),
                            Nombre = "Inválido"
                        },
                        new
                        {
                            Id = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8910),
                            Nombre = "Válido"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.CatalogoOchoAcciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_ocho_acciones");

                    b.ToTable("catalogo_ocho_acciones", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9017),
                            Nombre = "El movimiento escucha"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9025),
                            Nombre = "La quincena"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9026),
                            Nombre = "Picnic naranja"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9026),
                            Nombre = "Pinta el futuro"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9027),
                            Nombre = "Escuela naranja"
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9028),
                            Nombre = "Barrio naranja"
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9029),
                            Nombre = "Mercadito naranja"
                        },
                        new
                        {
                            Id = 8,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9030),
                            Nombre = "Casas naranjas"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.CatalogoPreguntasEncuestas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("CategoriaPreguntaId")
                        .HasColumnType("integer")
                        .HasColumnName("categoria_pregunta_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_preguntas_encuestas");

                    b.HasIndex("CategoriaPreguntaId")
                        .HasDatabaseName("ix_catalogo_preguntas_encuestas_categoria_pregunta_id");

                    b.ToTable("catalogo_preguntas_encuestas", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaPreguntaId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8861),
                            Nombre = "Platícanos tus necesidades de capacitación o certifícate con CONOCER"
                        },
                        new
                        {
                            Id = 2,
                            CategoriaPreguntaId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8872),
                            Nombre = "Dentro de tus conocimientos profesionales, ¿Te gustaría desarrollar algún curso?"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.CatalogoPreguntasOchoAcciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_preguntas_ocho_acciones");

                    b.ToTable("catalogo_preguntas_ocho_acciones", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9054),
                            Nombre = "¿Cómo quieres participar?"
                        },
                        new
                        {
                            Id = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9061),
                            Nombre = "¿Cómo propones hacerlo?"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.CatalogoPublicaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_publicaciones");

                    b.ToTable("catalogo_publicaciones", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9088),
                            Nombre = "Mi liderazgo"
                        },
                        new
                        {
                            Id = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9093),
                            Nombre = "Mi círculo"
                        },
                        new
                        {
                            Id = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9094),
                            Nombre = "Mi comunidad"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.CatalogoPublicacionesPerfilGrupal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_publicaciones_perfil_grupal");

                    b.ToTable("catalogo_publicaciones_perfil_grupal", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9236),
                            Nombre = "Movimiento social"
                        },
                        new
                        {
                            Id = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9240),
                            Nombre = "Nuestro trabajo"
                        },
                        new
                        {
                            Id = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9241),
                            Nombre = "Lo más reciente"
                        },
                        new
                        {
                            Id = 4,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9241),
                            Nombre = "Próximos eventos"
                        },
                        new
                        {
                            Id = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9242),
                            Nombre = "Próximos cursos"
                        },
                        new
                        {
                            Id = 6,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9243),
                            Nombre = "Newsletter"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.CatalogoRedesSociales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_redes_sociales");

                    b.ToTable("catalogo_redes_sociales", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9156),
                            Nombre = "Facebook"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9161),
                            Nombre = "Instagram"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9162),
                            Nombre = "Twitter"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9163),
                            Nombre = "TikTok"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9163),
                            Nombre = "WhatsApp"
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9164),
                            Nombre = "LinkedIn"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.CatalogoTokens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_tokens");

                    b.ToTable("catalogo_tokens", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9284),
                            Nombre = "Instagram personal 1"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9288),
                            Nombre = "Instagram personal 2"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9289),
                            Nombre = "Instagram grupal"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.Causa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_causa");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_causa_id");

                    b.ToTable("causa", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Nombre = "Diversidad sexual"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Nombre = "Energías limpias"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Nombre = "Infancias"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            Nombre = "Ingreso vital"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            Nombre = "Justicia climática (emergencia climática)"
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            Nombre = "Juventudes"
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            Nombre = "Legalización"
                        },
                        new
                        {
                            Id = 8,
                            Activo = true,
                            Nombre = "Mujeres"
                        },
                        new
                        {
                            Id = 9,
                            Activo = true,
                            Nombre = "Paz"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.CausaGrupoCausa", b =>
                {
                    b.Property<int>("CausaId")
                        .HasColumnType("integer")
                        .HasColumnName("causa_id");

                    b.Property<int>("GrupoCausaId")
                        .HasColumnType("integer")
                        .HasColumnName("grupo_causa_id");

                    b.HasKey("CausaId", "GrupoCausaId")
                        .HasName("pk_causa_grupo_causa");

                    b.ToTable("causa_grupo_causa", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.CodigoInvitacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<Guid>("Codigo")
                        .HasColumnType("uuid")
                        .HasColumnName("codigo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<int>("PersonaId")
                        .HasColumnType("integer")
                        .HasColumnName("sponsor_id");

                    b.HasKey("Id")
                        .HasName("pk_codigo_invitacion");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_codigo_invitacion_id");

                    b.HasIndex("PersonaId")
                        .HasDatabaseName("ix_codigo_invitacion_sponsor_id");

                    b.ToTable("codigo_invitacion", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.DatoContacto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("PersonaId")
                        .HasColumnType("integer")
                        .HasColumnName("persona_id");

                    b.Property<int>("TipoContactoId")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_contacto_id");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("valor");

                    b.Property<bool>("Verificado")
                        .HasColumnType("boolean")
                        .HasColumnName("verificado");

                    b.HasKey("Id")
                        .HasName("pk_dato_contacto");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_dato_contacto_id");

                    b.HasIndex("PersonaId")
                        .HasDatabaseName("ix_dato_contacto_persona_id");

                    b.HasIndex("TipoContactoId")
                        .HasDatabaseName("ix_dato_contacto_tipo_contacto_id");

                    b.ToTable("dato_contacto", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            PersonaId = 1,
                            TipoContactoId = 1,
                            Valor = "alfonso.coeto@guacamayotech.com",
                            Verificado = true
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            PersonaId = 2,
                            TipoContactoId = 1,
                            Valor = "admin@test.com",
                            Verificado = true
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.Direccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Ciudad")
                        .HasColumnType("text")
                        .HasColumnName("ciudad");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("text")
                        .HasColumnName("codigo_postal");

                    b.Property<string>("Colonia")
                        .HasColumnType("text")
                        .HasColumnName("colonia");

                    b.Property<string>("DireccionCompleta")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("direccion_completa");

                    b.Property<int?>("EntidadFederativaId")
                        .HasColumnType("integer")
                        .HasColumnName("entidad_federativa_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("Latitud")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("latitud");

                    b.Property<string>("Longitud")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("longitud");

                    b.Property<string>("NombreCalle")
                        .HasColumnType("text")
                        .HasColumnName("nombre_calle");

                    b.Property<string>("NumeroCalle")
                        .HasColumnType("text")
                        .HasColumnName("numero_calle");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pais");

                    b.Property<int>("PersonaId")
                        .HasColumnType("integer")
                        .HasColumnName("persona_id");

                    b.HasKey("Id")
                        .HasName("pk_direccion");

                    b.HasIndex("EntidadFederativaId")
                        .HasDatabaseName("ix_direccion_entidad_federativa_id");

                    b.HasIndex("PersonaId")
                        .HasDatabaseName("ix_direccion_persona_id");

                    b.HasIndex("Id", "PersonaId")
                        .IsUnique()
                        .HasDatabaseName("ix_direccion_id_persona_id");

                    b.ToTable("direccion", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.Encuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("pk_encuesta");

                    b.ToTable("encuesta", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.EntidadFederativa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("IsoCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("iso_code");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_entidad_federativa");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_entidad_federativa_id");

                    b.ToTable("entidad_federativa", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8301),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8302),
                            IsoCode = "AGS",
                            Nombre = "Aguascalientes"
                        },
                        new
                        {
                            Id = 2,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8306),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8307),
                            IsoCode = "BC",
                            Nombre = "Baja California"
                        },
                        new
                        {
                            Id = 3,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8308),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8308),
                            IsoCode = "BCS",
                            Nombre = "Baja California Sur"
                        },
                        new
                        {
                            Id = 4,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8309),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8309),
                            IsoCode = "CAM",
                            Nombre = "Campeche"
                        },
                        new
                        {
                            Id = 5,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8310),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8310),
                            IsoCode = "COA",
                            Nombre = "Coahuila"
                        },
                        new
                        {
                            Id = 6,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8312),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8312),
                            IsoCode = "COL",
                            Nombre = "Colima"
                        },
                        new
                        {
                            Id = 7,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8313),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8313),
                            IsoCode = "CHIS",
                            Nombre = "Chiapas"
                        },
                        new
                        {
                            Id = 8,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8314),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8314),
                            IsoCode = "CHIH",
                            Nombre = "Chihuahua"
                        },
                        new
                        {
                            Id = 9,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8315),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8315),
                            IsoCode = "CDMX",
                            Nombre = "Ciudad de México"
                        },
                        new
                        {
                            Id = 10,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8316),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8317),
                            IsoCode = "DGO",
                            Nombre = "Durango"
                        },
                        new
                        {
                            Id = 11,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8317),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8330),
                            IsoCode = "GTO",
                            Nombre = "Guanajuato"
                        },
                        new
                        {
                            Id = 12,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8331),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8331),
                            IsoCode = "GRO",
                            Nombre = "Guerrero"
                        },
                        new
                        {
                            Id = 13,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8332),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8332),
                            IsoCode = "HGO",
                            Nombre = "Hidalgo"
                        },
                        new
                        {
                            Id = 14,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8333),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8333),
                            IsoCode = "JAL",
                            Nombre = "Jalisco"
                        },
                        new
                        {
                            Id = 15,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8334),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8334),
                            IsoCode = "MEX",
                            Nombre = "Estado de México"
                        },
                        new
                        {
                            Id = 16,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8340),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8341),
                            IsoCode = "MICH",
                            Nombre = "Michoacán"
                        },
                        new
                        {
                            Id = 17,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8343),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8343),
                            IsoCode = "MOR",
                            Nombre = "Morelos"
                        },
                        new
                        {
                            Id = 18,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8344),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8345),
                            IsoCode = "NAY",
                            Nombre = "Nayarit"
                        },
                        new
                        {
                            Id = 19,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8346),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8346),
                            IsoCode = "NL",
                            Nombre = "Nuevo León"
                        },
                        new
                        {
                            Id = 20,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8347),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8347),
                            IsoCode = "OAX",
                            Nombre = "Oaxaca"
                        },
                        new
                        {
                            Id = 21,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8348),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8348),
                            IsoCode = "PUE",
                            Nombre = "Puebla"
                        },
                        new
                        {
                            Id = 22,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8349),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8349),
                            IsoCode = "QRO",
                            Nombre = "Querétaro"
                        },
                        new
                        {
                            Id = 23,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8350),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8350),
                            IsoCode = "QROO",
                            Nombre = "Quintana Roo"
                        },
                        new
                        {
                            Id = 24,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8351),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8351),
                            IsoCode = "SLP",
                            Nombre = "San Luis Potosí"
                        },
                        new
                        {
                            Id = 25,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8353),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8353),
                            IsoCode = "SIN",
                            Nombre = "Sinaloa"
                        },
                        new
                        {
                            Id = 26,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8354),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8354),
                            IsoCode = "SON",
                            Nombre = "Sonora"
                        },
                        new
                        {
                            Id = 27,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8355),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8355),
                            IsoCode = "TAB",
                            Nombre = "Tabasco"
                        },
                        new
                        {
                            Id = 28,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8356),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8356),
                            IsoCode = "TAMPS",
                            Nombre = "Tamaulipas"
                        },
                        new
                        {
                            Id = 29,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8357),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8357),
                            IsoCode = "TLAX",
                            Nombre = "Tlaxcala"
                        },
                        new
                        {
                            Id = 30,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8358),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8358),
                            IsoCode = "VER",
                            Nombre = "Veracruz"
                        },
                        new
                        {
                            Id = 31,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8359),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8359),
                            IsoCode = "YUC",
                            Nombre = "Yucatán"
                        },
                        new
                        {
                            Id = 32,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8360),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8360),
                            IsoCode = "ZAC",
                            Nombre = "Zacatecas"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.EntidadFederativaGrupoEntidadFederativa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EntidadFederativaId")
                        .HasColumnType("integer")
                        .HasColumnName("entidad_federativa_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<int>("GrupoEntidadFederativaId")
                        .HasColumnType("integer")
                        .HasColumnName("grupo_entidad_federativa_id");

                    b.HasKey("Id")
                        .HasName("pk_entidad_federativa_grupo_entidad_federativa");

                    b.HasIndex("EntidadFederativaId")
                        .HasDatabaseName("ix_entidad_federativa_grupo_entidad_federativa_entidad_federat");

                    b.HasIndex("GrupoEntidadFederativaId")
                        .HasDatabaseName("ix_entidad_federativa_grupo_entidad_federativa_grupo_entidad_f");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_entidad_federativa_grupo_entidad_federativa_id");

                    b.ToTable("entidad_federativa_grupo_entidad_federativa", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.Escolaridad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_escolaridad");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_escolaridad_id");

                    b.ToTable("escolaridad", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Nombre = "Primaria"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Nombre = "Secundaria"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Nombre = "Preparatoria o Bachiller"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            Nombre = "Técnico superior"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            Nombre = "Licenciatura"
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            Nombre = "Posgrado"
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            Nombre = "Otro"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.Escucha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Respuesta")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("respuesta");

                    b.HasKey("Id")
                        .HasName("pk_escucha");

                    b.ToTable("escucha", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.EscuchaFormularioTemasInteres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EscuchaId")
                        .HasColumnType("integer")
                        .HasColumnName("escucha_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("FormularioTemasInteresId")
                        .HasColumnType("integer")
                        .HasColumnName("formulario_temas_interes_id");

                    b.HasKey("Id")
                        .HasName("pk_escucha_formulario_temas_interes");

                    b.HasIndex("EscuchaId")
                        .HasDatabaseName("ix_escucha_formulario_temas_interes_escucha_id");

                    b.HasIndex("FormularioTemasInteresId")
                        .HasDatabaseName("ix_escucha_formulario_temas_interes_formulario_temas_interes_id");

                    b.ToTable("escucha_formulario_temas_interes", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.Evento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<bool>("CheckInRequerido")
                        .HasColumnType("boolean")
                        .HasColumnName("check_in_requerido");

                    b.Property<bool>("CupoLimitado")
                        .HasColumnType("boolean")
                        .HasColumnName("cupo_limitado");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("direccion");

                    b.Property<int>("EventoTipoId")
                        .HasColumnType("integer")
                        .HasColumnName("evento_tipo_id");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateTime>("FechaEvento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_evento");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("imagen");

                    b.Property<string>("Latitud")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("latitud");

                    b.Property<string>("Longitud")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("longitud");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<int>("NumeroAsistentes")
                        .HasColumnType("integer")
                        .HasColumnName("numero_asistentes");

                    b.Property<int>("PersonaId")
                        .HasColumnType("integer")
                        .HasColumnName("responsable_id")
                        .HasComment("Persona que creo el evento o es el responsable del mismo");

                    b.Property<int>("Privacidad")
                        .HasColumnType("integer")
                        .HasColumnName("privacidad")
                        .HasComment("1 = Publico, 2 = Lista de invitados, 3 = Privado");

                    b.HasKey("Id")
                        .HasName("pk_evento");

                    b.HasIndex("EventoTipoId")
                        .HasDatabaseName("ix_evento_evento_tipo_id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_evento_id");

                    b.HasIndex("PersonaId")
                        .HasDatabaseName("ix_evento_responsable_id");

                    b.ToTable("evento", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.EventoTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Imagen")
                        .HasColumnType("text")
                        .HasColumnName("imagen");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<bool>("TipoSesion")
                        .HasColumnType("boolean")
                        .HasColumnName("tipo_sesion")
                        .HasComment("True = Sesion, False = Evento");

                    b.HasKey("Id")
                        .HasName("pk_evento_tipo");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_evento_tipo_id");

                    b.ToTable("evento_tipo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Descripcion = "Este es un evento público.",
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8260),
                            Imagen = "https://i.imgur.com/4ZQZ5Zu.png",
                            Nombre = "Público General",
                            TipoSesion = false
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Descripcion = "Este es un evento para afiliados.",
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8266),
                            Imagen = "https://i.imgur.com/4ZQZ5Zu.png",
                            Nombre = "Afiliados",
                            TipoSesion = false
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Descripcion = "Este es un evento de tipo sesión.",
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8268),
                            Imagen = "https://i.imgur.com/4ZQZ5Zu.png",
                            Nombre = "Sesión",
                            TipoSesion = true
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.FormularioParticipacionEventos.DomicilioGeneral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Ciudad")
                        .HasColumnType("text")
                        .HasColumnName("ciudad");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("text")
                        .HasColumnName("codigo_postal");

                    b.Property<string>("Colonia")
                        .HasColumnType("text")
                        .HasColumnName("colonia");

                    b.Property<string>("DireccionCompleta")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("direccion_completa");

                    b.Property<int?>("EntidadFederativaId")
                        .HasColumnType("integer")
                        .HasColumnName("entidad_federativa_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("Latitud")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("latitud");

                    b.Property<string>("Longitud")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("longitud");

                    b.Property<string>("NombreCalle")
                        .HasColumnType("text")
                        .HasColumnName("nombre_calle");

                    b.Property<string>("NumeroCalle")
                        .HasColumnType("text")
                        .HasColumnName("numero_calle");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pais");

                    b.HasKey("Id")
                        .HasName("pk_domicilio_general");

                    b.HasIndex("EntidadFederativaId")
                        .HasDatabaseName("ix_domicilio_general_entidad_federativa_id");

                    b.ToTable("domicilio_general", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.FormularioParticipacionEventos.RegistroParticipantesEventos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("AfiliarseAMovimientoCiudadano")
                        .HasColumnType("boolean")
                        .HasColumnName("afiliarse_a_movimiento_ciudadano");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("apellidos");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("celular");

                    b.Property<bool>("ColocarPublicidadEnDomicilio")
                        .HasColumnType("boolean")
                        .HasColumnName("colocar_publicidad_en_domicilio");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("correo_electronico");

                    b.Property<int>("DomicilioGeneralId")
                        .HasColumnType("integer")
                        .HasColumnName("domicilio_general_id");

                    b.Property<int>("Edad")
                        .HasColumnType("integer")
                        .HasColumnName("edad");

                    b.Property<bool>("ExperienciaPrevia")
                        .HasColumnType("boolean")
                        .HasColumnName("experiencia_previa");

                    b.Property<int>("GeneroId")
                        .HasColumnType("integer")
                        .HasColumnName("genero_id");

                    b.Property<string>("LugarEvento")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("lugar_evento");

                    b.Property<bool>("MovimientoEnColonia")
                        .HasColumnType("boolean")
                        .HasColumnName("movimiento_en_colonia");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreEvento")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre_evento");

                    b.Property<string>("OrganizadorEvento")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("organizador_evento");

                    b.Property<bool>("ParticiparEnActividades")
                        .HasColumnType("boolean")
                        .HasColumnName("participar_en_actividades");

                    b.Property<bool>("RepresentanteDeCasilla")
                        .HasColumnType("boolean")
                        .HasColumnName("representante_de_casilla");

                    b.HasKey("Id")
                        .HasName("pk_registro_participantes_eventos");

                    b.HasIndex("DomicilioGeneralId")
                        .HasDatabaseName("ix_registro_participantes_eventos_domicilio_general_id");

                    b.HasIndex("GeneroId")
                        .HasDatabaseName("ix_registro_participantes_eventos_genero_id");

                    b.ToTable("registro_participantes_eventos", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.FormularioTemasInteres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .HasColumnType("text")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<int>("EntidadFederativaId")
                        .HasColumnType("integer")
                        .HasColumnName("entidad_federativa_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_formulario_temas_interes");

                    b.HasIndex("EntidadFederativaId")
                        .HasDatabaseName("ix_formulario_temas_interes_entidad_federativa_id");

                    b.ToTable("formulario_temas_interes", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.FormularioTemasInteresCatalogoCausasLanding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CatalogoCausasLandingId")
                        .HasColumnType("integer")
                        .HasColumnName("catalogo_causas_landing_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("FormularioTemasInteresId")
                        .HasColumnType("integer")
                        .HasColumnName("formulario_temas_interes_id");

                    b.HasKey("Id")
                        .HasName("pk_formulario_temas_interes_catalogo_causas_landing");

                    b.HasIndex("CatalogoCausasLandingId")
                        .HasDatabaseName("ix_formulario_temas_interes_catalogo_causas_landing_catalogo_c");

                    b.HasIndex("FormularioTemasInteresId")
                        .HasDatabaseName("ix_formulario_temas_interes_catalogo_causas_landing_formulario");

                    b.ToTable("formulario_temas_interes_catalogo_causas_landing", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_genero");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_genero_id");

                    b.ToTable("genero", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Nombre = "Masculino"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Nombre = "Femenino"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Nombre = "Chico"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            Nombre = "Chica"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            Nombre = "Bigénero"
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            Nombre = "Intersexual"
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            Nombre = "No binario"
                        },
                        new
                        {
                            Id = 8,
                            Activo = true,
                            Nombre = "Sin género"
                        },
                        new
                        {
                            Id = 9,
                            Activo = true,
                            Nombre = "No estoy seguro"
                        },
                        new
                        {
                            Id = 10,
                            Activo = true,
                            Nombre = "Prefiero no decir"
                        },
                        new
                        {
                            Id = 11,
                            Activo = true,
                            Nombre = "Otro"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.GrupoCausa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<string>("UrlImagen")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url_imagen");

                    b.HasKey("Id")
                        .HasName("pk_grupo_causa");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_grupo_causa_id");

                    b.ToTable("grupo_causa", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.GrupoEntidadFederativa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Distrito")
                        .HasColumnType("text")
                        .HasColumnName("distrito");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("Manzana")
                        .HasColumnType("text")
                        .HasColumnName("manzana");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<string>("Seccion")
                        .HasColumnType("text")
                        .HasColumnName("seccion");

                    b.Property<string>("Zona")
                        .HasColumnType("text")
                        .HasColumnName("zona");

                    b.HasKey("Id")
                        .HasName("pk_grupo_entidad_federativa");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_grupo_entidad_federativa_id");

                    b.ToTable("grupo_entidad_federativa", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.GrupoIntereses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<string>("UrlImagen")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url_imagen");

                    b.HasKey("Id")
                        .HasName("pk_grupo_intereses");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_grupo_intereses_id");

                    b.ToTable("grupo_intereses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Nombre = "Economía",
                            UrlImagen = "https://images.unsplash.com/photo-1588591795084-1770cb3be374?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2070&q=80"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Nombre = "Fotografía",
                            UrlImagen = "https://images.unsplash.com/photo-1588591795084-1770cb3be374?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2070&q=80"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Nombre = "Viajes",
                            UrlImagen = "https://images.unsplash.com/photo-1588591795084-1770cb3be374?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2070&q=80"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            Nombre = "Medio Ambiente",
                            UrlImagen = "https://images.unsplash.com/photo-1588591795084-1770cb3be374?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2070&q=80"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            Nombre = "Cocina",
                            UrlImagen = "https://images.unsplash.com/photo-1588591795084-1770cb3be374?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2070&q=80"
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            Nombre = "Tecnología",
                            UrlImagen = "https://images.unsplash.com/photo-1588591795084-1770cb3be374?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2070&q=80"
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            Nombre = "Moda",
                            UrlImagen = "https://images.unsplash.com/photo-1588591795084-1770cb3be374?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2070&q=80"
                        },
                        new
                        {
                            Id = 8,
                            Activo = true,
                            Nombre = "Juegos",
                            UrlImagen = "https://images.unsplash.com/photo-1588591795084-1770cb3be374?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2070&q=80"
                        },
                        new
                        {
                            Id = 9,
                            Activo = true,
                            Nombre = "Otros",
                            UrlImagen = "https://images.unsplash.com/photo-1588591795084-1770cb3be374?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2070&q=80"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.Habilidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_habilidad");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_habilidad_id");

                    b.ToTable("habilidad", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Nombre = "Comunicación efectiva"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Nombre = "Creatividad"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Nombre = "Inteligencia emocional"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            Nombre = "Interpretación de datos"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            Nombre = "Negociación"
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            Nombre = "Organización"
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            Nombre = "Resiliencia"
                        },
                        new
                        {
                            Id = 8,
                            Activo = true,
                            Nombre = "Resolución de problemas"
                        },
                        new
                        {
                            Id = 9,
                            Activo = true,
                            Nombre = "Toma de decisiones"
                        },
                        new
                        {
                            Id = 10,
                            Activo = true,
                            Nombre = "Trabajo en equipo"
                        },
                        new
                        {
                            Id = 11,
                            Activo = true,
                            Nombre = "Otro"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.HabilidadCustom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<int>("PersonaId")
                        .HasColumnType("integer")
                        .HasColumnName("persona_id");

                    b.HasKey("Id")
                        .HasName("pk_habilidad_custom");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_habilidad_custom_id");

                    b.HasIndex("PersonaId")
                        .HasDatabaseName("ix_habilidad_custom_persona_id");

                    b.ToTable("habilidad_custom", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.Interes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_interes");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_interes_id");

                    b.ToTable("interes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Nombre = "Inversiones"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Nombre = "Acciones"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Nombre = "Emancipación"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            Nombre = "Criptomonedas"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            Nombre = "Finanzas"
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            Nombre = "Trading"
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            Nombre = "Fotografía artística"
                        },
                        new
                        {
                            Id = 8,
                            Activo = true,
                            Nombre = "Fotografía conceptual"
                        },
                        new
                        {
                            Id = 9,
                            Activo = true,
                            Nombre = "Fotografía en blanco y negro"
                        },
                        new
                        {
                            Id = 10,
                            Activo = true,
                            Nombre = "Fotografía minimalista"
                        },
                        new
                        {
                            Id = 11,
                            Activo = true,
                            Nombre = "Fotografía abstracta"
                        },
                        new
                        {
                            Id = 12,
                            Activo = true,
                            Nombre = "Fotografía de retrato"
                        },
                        new
                        {
                            Id = 13,
                            Activo = true,
                            Nombre = "Turismo de aventura"
                        },
                        new
                        {
                            Id = 14,
                            Activo = true,
                            Nombre = "Turismo rural"
                        },
                        new
                        {
                            Id = 15,
                            Activo = true,
                            Nombre = "Turismo de naturaleza"
                        },
                        new
                        {
                            Id = 16,
                            Activo = true,
                            Nombre = "Turismo paranormal"
                        },
                        new
                        {
                            Id = 17,
                            Activo = true,
                            Nombre = "Movimientos para cuidado del agua"
                        },
                        new
                        {
                            Id = 18,
                            Activo = true,
                            Nombre = "Concientización de cambio climático"
                        },
                        new
                        {
                            Id = 19,
                            Activo = true,
                            Nombre = "Control de plagas"
                        },
                        new
                        {
                            Id = 20,
                            Activo = true,
                            Nombre = "Solidaridad en desastres naturales"
                        },
                        new
                        {
                            Id = 21,
                            Activo = true,
                            Nombre = "Protección de flora y fauna"
                        },
                        new
                        {
                            Id = 22,
                            Activo = true,
                            Nombre = "Cocina tradicional"
                        },
                        new
                        {
                            Id = 23,
                            Activo = true,
                            Nombre = "Cocina recreativa"
                        },
                        new
                        {
                            Id = 24,
                            Activo = true,
                            Nombre = "Alta cocina"
                        },
                        new
                        {
                            Id = 25,
                            Activo = true,
                            Nombre = "Comida italiana"
                        },
                        new
                        {
                            Id = 26,
                            Activo = true,
                            Nombre = "Comida libanesa"
                        },
                        new
                        {
                            Id = 27,
                            Activo = true,
                            Nombre = "Comida japonesa"
                        },
                        new
                        {
                            Id = 28,
                            Activo = true,
                            Nombre = "Comida peruana"
                        },
                        new
                        {
                            Id = 29,
                            Activo = true,
                            Nombre = "Comida mexicana"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.InteresGrupoIntereses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GrupoInteresesId")
                        .HasColumnType("integer")
                        .HasColumnName("grupo_intereses_id");

                    b.Property<int>("InteresId")
                        .HasColumnType("integer")
                        .HasColumnName("interes_id");

                    b.HasKey("Id")
                        .HasName("pk_interes_grupo_intereses");

                    b.HasIndex("GrupoInteresesId")
                        .HasDatabaseName("ix_interes_grupo_intereses_grupo_intereses_id");

                    b.HasIndex("InteresId")
                        .HasDatabaseName("ix_interes_grupo_intereses_interes_id");

                    b.ToTable("interes_grupo_intereses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GrupoInteresesId = 1,
                            InteresId = 1
                        },
                        new
                        {
                            Id = 2,
                            GrupoInteresesId = 1,
                            InteresId = 2
                        },
                        new
                        {
                            Id = 3,
                            GrupoInteresesId = 1,
                            InteresId = 3
                        },
                        new
                        {
                            Id = 4,
                            GrupoInteresesId = 1,
                            InteresId = 4
                        },
                        new
                        {
                            Id = 5,
                            GrupoInteresesId = 1,
                            InteresId = 5
                        },
                        new
                        {
                            Id = 6,
                            GrupoInteresesId = 1,
                            InteresId = 6
                        },
                        new
                        {
                            Id = 7,
                            GrupoInteresesId = 2,
                            InteresId = 7
                        },
                        new
                        {
                            Id = 8,
                            GrupoInteresesId = 2,
                            InteresId = 8
                        },
                        new
                        {
                            Id = 9,
                            GrupoInteresesId = 2,
                            InteresId = 9
                        },
                        new
                        {
                            Id = 10,
                            GrupoInteresesId = 2,
                            InteresId = 10
                        },
                        new
                        {
                            Id = 11,
                            GrupoInteresesId = 2,
                            InteresId = 11
                        },
                        new
                        {
                            Id = 12,
                            GrupoInteresesId = 2,
                            InteresId = 12
                        },
                        new
                        {
                            Id = 13,
                            GrupoInteresesId = 3,
                            InteresId = 13
                        },
                        new
                        {
                            Id = 14,
                            GrupoInteresesId = 3,
                            InteresId = 14
                        },
                        new
                        {
                            Id = 15,
                            GrupoInteresesId = 3,
                            InteresId = 15
                        },
                        new
                        {
                            Id = 16,
                            GrupoInteresesId = 3,
                            InteresId = 16
                        },
                        new
                        {
                            Id = 17,
                            GrupoInteresesId = 4,
                            InteresId = 17
                        },
                        new
                        {
                            Id = 18,
                            GrupoInteresesId = 4,
                            InteresId = 18
                        },
                        new
                        {
                            Id = 19,
                            GrupoInteresesId = 4,
                            InteresId = 19
                        },
                        new
                        {
                            Id = 20,
                            GrupoInteresesId = 4,
                            InteresId = 20
                        },
                        new
                        {
                            Id = 21,
                            GrupoInteresesId = 4,
                            InteresId = 21
                        },
                        new
                        {
                            Id = 22,
                            GrupoInteresesId = 5,
                            InteresId = 22
                        },
                        new
                        {
                            Id = 23,
                            GrupoInteresesId = 5,
                            InteresId = 23
                        },
                        new
                        {
                            Id = 24,
                            GrupoInteresesId = 5,
                            InteresId = 24
                        },
                        new
                        {
                            Id = 25,
                            GrupoInteresesId = 5,
                            InteresId = 25
                        },
                        new
                        {
                            Id = 26,
                            GrupoInteresesId = 5,
                            InteresId = 26
                        },
                        new
                        {
                            Id = 27,
                            GrupoInteresesId = 5,
                            InteresId = 27
                        },
                        new
                        {
                            Id = 28,
                            GrupoInteresesId = 5,
                            InteresId = 28
                        },
                        new
                        {
                            Id = 29,
                            GrupoInteresesId = 5,
                            InteresId = 29
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.Invitado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("text")
                        .HasColumnName("apellido_materno");

                    b.Property<string>("ApellidoPaterno")
                        .HasColumnType("text")
                        .HasColumnName("apellido_paterno");

                    b.Property<string>("CargoOrganizacion")
                        .HasColumnType("text")
                        .HasColumnName("cargo_organizacion")
                        .HasComment("El cargo u organización a la que pertenece el invitado");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("EntidadFederativa")
                        .HasColumnType("text")
                        .HasColumnName("entidad_federativa");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<string>("ModoParticipacion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("modo_participacion")
                        .HasComment("Puede ser: 'Presencial', 'Virtual' o 'Ambos'");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<string>("Sexo")
                        .HasColumnType("text")
                        .HasColumnName("sexo");

                    b.Property<string>("Telefono")
                        .HasColumnType("text")
                        .HasColumnName("telefono");

                    b.HasKey("Id")
                        .HasName("pk_invitado");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_invitado_id");

                    b.ToTable("invitado", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.Motivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_motivo");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_motivo_id");

                    b.ToTable("motivo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Nombre = "Voluntario"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Nombre = "Servicio Social"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Nombre = "Prácticas Profesionales"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.MotivoBaja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_motivo_baja");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_motivo_baja_id");

                    b.ToTable("motivo_baja", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Alias")
                        .HasColumnType("text")
                        .HasColumnName("alias");

                    b.Property<string>("CustomUrl")
                        .HasColumnType("text")
                        .HasColumnName("custom_url")
                        .HasComment("Esta columna permite al perfil elegir un enlace personalizado");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid")
                        .HasColumnName("guid");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.Property<bool>("esPublico")
                        .HasColumnType("boolean")
                        .HasColumnName("es_publico");

                    b.HasKey("Id")
                        .HasName("pk_perfil");

                    b.HasIndex("CustomUrl")
                        .IsUnique()
                        .HasDatabaseName("ix_perfil_custom_url");

                    b.ToTable("perfil", null, t =>
                        {
                            t.HasComment("Debido a que cada perfil puede tener ser visitable por customurl, se establece constraint unique");
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilCatalogoRedesSociales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("CatalogoRedesSocialesId")
                        .HasColumnType("integer")
                        .HasColumnName("catalogo_redes_sociales_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("PerfilId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_id");

                    b.Property<string>("Url")
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_perfil_catalogo_redes_sociales");

                    b.HasIndex("CatalogoRedesSocialesId")
                        .HasDatabaseName("ix_perfil_catalogo_redes_sociales_catalogo_redes_sociales_id");

                    b.HasIndex("PerfilId")
                        .HasDatabaseName("ix_perfil_catalogo_redes_sociales_perfil_id");

                    b.ToTable("perfil_catalogo_redes_sociales", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilGrupal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Alias")
                        .HasColumnType("text")
                        .HasColumnName("alias");

                    b.Property<string>("CustomUrl")
                        .HasColumnType("text")
                        .HasColumnName("custom_url")
                        .HasComment("Esta columna permite al perfil grupal elegir un enlace personalizado");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Foto")
                        .HasColumnType("text")
                        .HasColumnName("foto");

                    b.Property<string>("FotoPortada")
                        .HasColumnType("text")
                        .HasColumnName("foto_portada");

                    b.Property<string>("Frase")
                        .HasColumnType("text")
                        .HasColumnName("frase");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid")
                        .HasColumnName("guid");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.Property<string>("UrlVideoPrincipal")
                        .HasColumnType("text")
                        .HasColumnName("url_video_principal");

                    b.Property<bool>("esPublico")
                        .HasColumnType("boolean")
                        .HasColumnName("es_publico");

                    b.HasKey("Id")
                        .HasName("pk_perfil_grupal");

                    b.HasIndex("CustomUrl")
                        .IsUnique()
                        .HasDatabaseName("ix_perfil_grupal_custom_url");

                    b.ToTable("perfil_grupal", null, t =>
                        {
                            t.HasComment("Debido a que cada perfil grupal puede tener ser visitable por customurl, se establece constraint unique");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Alias = "Jóvenes en movimiento",
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9370),
                            Foto = "group_profile_pictures/aJHsgP8cftCAYEpWUDToyrgT1ee3xoANpq8XaUU2.jpg",
                            Frase = "La unión hace cambios",
                            Guid = new Guid("5d3e0abe-ef5a-4848-90ba-5adfaba23002"),
                            Url = "jovenes-en-movimiento",
                            UrlVideoPrincipal = "https://www.youtube.com/embed/Cd_S6YQtBqk",
                            esPublico = true
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Alias = "Mujeres en Movimiento",
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9377),
                            Foto = "group_profile_pictures/aJHsgP8cftCAYEpWUDToyrgT1ee3xoANpq8XaUU2.jpg",
                            Frase = "Por una participación afectiva",
                            Guid = new Guid("65fb3612-7866-44d1-9126-efc72ca2dda7"),
                            Url = "mujeres-en-movimiento",
                            UrlVideoPrincipal = "https://www.youtube.com/embed/Cd_S6YQtBqk",
                            esPublico = true
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Alias = "Fundación México con Valores",
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9381),
                            Foto = "group_profile_pictures/aJHsgP8cftCAYEpWUDToyrgT1ee3xoANpq8XaUU2.jpg",
                            Frase = "Ciudadanos comprometidos",
                            Guid = new Guid("4e298068-e6f0-439b-ad45-888342daa9d4"),
                            Url = "fundacion-mexico-valores",
                            UrlVideoPrincipal = "https://www.youtube.com/embed/Cd_S6YQtBqk",
                            esPublico = true
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            Alias = "Mercadito Naranja",
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9395),
                            Foto = "group_profile_pictures/aJHsgP8cftCAYEpWUDToyrgT1ee3xoANpq8XaUU2.jpg",
                            Frase = "Mercadito Naranja",
                            Guid = new Guid("e021dc57-3195-4a74-9f58-6297cb91fa18"),
                            Url = "mercadito-naranja",
                            UrlVideoPrincipal = "https://www.youtube.com/embed/Cd_S6YQtBqk",
                            esPublico = true
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            Alias = "LabMC",
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(9398),
                            Foto = "group_profile_pictures/aJHsgP8cftCAYEpWUDToyrgT1ee3xoANpq8XaUU2.jpg",
                            Frase = "LabMC",
                            Guid = new Guid("05474085-5a72-4d8e-869e-8be96adafaf8"),
                            Url = "lab-mc",
                            UrlVideoPrincipal = "https://www.youtube.com/embed/Cd_S6YQtBqk",
                            esPublico = true
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilGrupalCatalogoRedesSociales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("CatalogoRedesSocialesId")
                        .HasColumnType("integer")
                        .HasColumnName("catalogo_redes_sociales_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("PerfilGrupalId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_grupal_id");

                    b.Property<string>("Url")
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_perfil_grupal_catalogo_redes_sociales");

                    b.HasIndex("CatalogoRedesSocialesId")
                        .HasDatabaseName("ix_perfil_grupal_catalogo_redes_sociales_catalogo_redes_social");

                    b.HasIndex("PerfilGrupalId")
                        .HasDatabaseName("ix_perfil_grupal_catalogo_redes_sociales_perfil_grupal_id");

                    b.ToTable("perfil_grupal_catalogo_redes_sociales", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilGrupalSiguePerfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("PerfilGrupalSeguidorId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_grupal_seguidor_id");

                    b.Property<int>("PerfilSeguidoId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_seguido_id");

                    b.HasKey("Id")
                        .HasName("pk_perfil_grupal_sigue_perfil");

                    b.HasIndex("PerfilGrupalSeguidorId")
                        .HasDatabaseName("ix_perfil_grupal_sigue_perfil_perfil_grupal_seguidor_id");

                    b.HasIndex("PerfilSeguidoId")
                        .HasDatabaseName("ix_perfil_grupal_sigue_perfil_perfil_seguido_id");

                    b.ToTable("perfil_grupal_sigue_perfil", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilGrupalSiguePerfilGrupal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("PerfilGrupalSeguidoId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_grupal_seguido_id");

                    b.Property<int>("PerfilGrupalSeguidorId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_grupal_seguidor_id");

                    b.HasKey("Id")
                        .HasName("pk_perfil_grupal_sigue_perfil_grupal");

                    b.HasIndex("PerfilGrupalSeguidoId")
                        .HasDatabaseName("ix_perfil_grupal_sigue_perfil_grupal_perfil_grupal_seguido_id");

                    b.HasIndex("PerfilGrupalSeguidorId")
                        .HasDatabaseName("ix_perfil_grupal_sigue_perfil_grupal_perfil_grupal_seguidor_id");

                    b.ToTable("perfil_grupal_sigue_perfil_grupal", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilGrupalToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("PerfilGrupalId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_grupal_id");

                    b.Property<string>("Response")
                        .HasColumnType("text")
                        .HasColumnName("response");

                    b.Property<int>("TokenId")
                        .HasColumnType("integer")
                        .HasColumnName("token_id");

                    b.HasKey("Id")
                        .HasName("pk_perfil_grupal_token");

                    b.HasIndex("PerfilGrupalId")
                        .HasDatabaseName("ix_perfil_grupal_token_perfil_grupal_id");

                    b.HasIndex("TokenId")
                        .HasDatabaseName("ix_perfil_grupal_token_token_id");

                    b.ToTable("perfil_grupal_token", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilSiguePerfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<bool?>("EnCirculo")
                        .HasColumnType("boolean")
                        .HasColumnName("en_circulo");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("PerfilSeguidoId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_seguido_id");

                    b.Property<int>("PerfilSeguidorId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_seguidor_id");

                    b.HasKey("Id")
                        .HasName("pk_perfil_sigue_perfil");

                    b.HasIndex("PerfilSeguidoId")
                        .HasDatabaseName("ix_perfil_sigue_perfil_perfil_seguido_id");

                    b.HasIndex("PerfilSeguidorId")
                        .HasDatabaseName("ix_perfil_sigue_perfil_perfil_seguidor_id");

                    b.ToTable("perfil_sigue_perfil", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilSiguePerfilGrupal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("PerfilGrupalSeguidoId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_grupal_seguido_id");

                    b.Property<int>("PerfilSeguidorId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_seguidor_id");

                    b.HasKey("Id")
                        .HasName("pk_perfil_sigue_perfil_grupal");

                    b.HasIndex("PerfilGrupalSeguidoId")
                        .HasDatabaseName("ix_perfil_sigue_perfil_grupal_perfil_grupal_seguido_id");

                    b.HasIndex("PerfilSeguidorId")
                        .HasDatabaseName("ix_perfil_sigue_perfil_grupal_perfil_seguidor_id");

                    b.ToTable("perfil_sigue_perfil_grupal", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("PerfilId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_id");

                    b.Property<string>("Response")
                        .HasColumnType("text")
                        .HasColumnName("response");

                    b.Property<int>("TokenId")
                        .HasColumnType("integer")
                        .HasColumnName("token_id");

                    b.HasKey("Id")
                        .HasName("pk_perfil_token");

                    b.HasIndex("PerfilId")
                        .HasDatabaseName("ix_perfil_token_perfil_id");

                    b.HasIndex("TokenId")
                        .HasDatabaseName("ix_perfil_token_token_id");

                    b.ToTable("perfil_token", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Area")
                        .HasColumnType("text")
                        .HasColumnName("area");

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<DateTime?>("EmailVerifiedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("email_verified_at");

                    b.Property<bool?>("EsCHC")
                        .HasColumnType("boolean")
                        .HasColumnName("es_chc")
                        .HasComment("Esta columna indica si hizo el registro del perfil desde la liga para redireccionar directamente a CHC");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<int>("PerfilId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_id");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("text")
                        .HasColumnName("profile_image");

                    b.Property<string>("Puesto")
                        .HasColumnType("text")
                        .HasColumnName("puesto");

                    b.HasKey("Id")
                        .HasName("pk_perfil_usuario");

                    b.HasIndex("PerfilId")
                        .HasDatabaseName("ix_perfil_usuario_perfil_id");

                    b.ToTable("perfil_usuario", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilUsuarioCodigoInvitacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("CodigoInvitacionId")
                        .HasColumnType("integer")
                        .HasColumnName("codigo_invitacion_id")
                        .HasComment("Esta columna es una llave foranea que viene de la DB de dashboard");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("PerfilUsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_usuario_id");

                    b.HasKey("Id")
                        .HasName("pk_perfil_usuario_codigo_invitacion");

                    b.HasIndex("PerfilUsuarioId")
                        .HasDatabaseName("ix_perfil_usuario_codigo_invitacion_perfil_usuario_id");

                    b.ToTable("perfil_usuario_codigo_invitacion", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilUsuarioPerfilGrupal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("PerfilGrupalId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_grupal_id");

                    b.Property<int>("PerfilUsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_usuario_id");

                    b.HasKey("Id")
                        .HasName("pk_perfil_usuario_perfil_grupal");

                    b.HasIndex("PerfilGrupalId")
                        .HasDatabaseName("ix_perfil_usuario_perfil_grupal_perfil_grupal_id");

                    b.HasIndex("PerfilUsuarioId")
                        .HasDatabaseName("ix_perfil_usuario_perfil_grupal_perfil_usuario_id");

                    b.ToTable("perfil_usuario_perfil_grupal", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("text")
                        .HasColumnName("apellido_materno");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("apellido_paterno");

                    b.Property<string>("ClaveElector")
                        .HasColumnType("text")
                        .HasColumnName("clave_elector");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("text")
                        .HasColumnName("correo_electronico");

                    b.Property<string>("Curp")
                        .HasColumnType("text")
                        .HasColumnName("curp");

                    b.Property<int?>("EntidadFederativaId")
                        .HasColumnType("integer")
                        .HasColumnName("entidad_federativa_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<string>("FirmaElectronica")
                        .HasColumnType("text")
                        .HasColumnName("firma_electronica");

                    b.Property<int>("GeneroId")
                        .HasColumnType("integer")
                        .HasColumnName("genero_id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<string>("Rfc")
                        .HasColumnType("text")
                        .HasColumnName("rfc");

                    b.Property<string>("Seudonimo")
                        .HasColumnType("text")
                        .HasColumnName("seudonimo");

                    b.Property<string>("TelefonoParticular")
                        .HasColumnType("text")
                        .HasColumnName("telefono_particular");

                    b.Property<int>("TiempoResidencia")
                        .HasColumnType("integer")
                        .HasColumnName("tiempo_residencia");

                    b.HasKey("Id")
                        .HasName("pk_persona");

                    b.HasIndex("EntidadFederativaId")
                        .HasDatabaseName("ix_persona_entidad_federativa_id");

                    b.HasIndex("GeneroId")
                        .HasDatabaseName("ix_persona_genero_id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_persona_id");

                    b.ToTable("persona", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            ApellidoMaterno = "Coeto",
                            ApellidoPaterno = "Gomez",
                            CorreoElectronico = "coeto@gmail.com",
                            EntidadFederativaId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8403),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8403),
                            FechaNacimiento = new DateTime(1994, 7, 24, 22, 0, 0, 0, DateTimeKind.Utc),
                            GeneroId = 1,
                            Nombre = "Jose Alfonso",
                            Seudonimo = "Coeto",
                            TelefonoParticular = "+525555555555",
                            TiempoResidencia = 1
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            ApellidoPaterno = "Naranja",
                            CorreoElectronico = "naranja@gmail.com",
                            EntidadFederativaId = 1,
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8683),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(8683),
                            FechaNacimiento = new DateTime(2000, 1, 1, 22, 0, 0, 0, DateTimeKind.Utc),
                            GeneroId = 1,
                            Nombre = "Admin",
                            Seudonimo = "Naranja",
                            TelefonoParticular = "+529999999999",
                            TiempoResidencia = 2
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.PersonaCausa", b =>
                {
                    b.Property<int>("PersonaId")
                        .HasColumnType("integer")
                        .HasColumnName("persona_id");

                    b.Property<int>("CausaId")
                        .HasColumnType("integer")
                        .HasColumnName("causa_id");

                    b.HasKey("PersonaId", "CausaId")
                        .HasName("pk_persona_causa");

                    b.ToTable("persona_causa", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.PersonaCodigoInvitacion", b =>
                {
                    b.Property<int>("CodigoInvitacionId")
                        .HasColumnType("integer")
                        .HasColumnName("codigo_invitacion_id");

                    b.Property<int>("PersonaId")
                        .HasColumnType("integer")
                        .HasColumnName("persona_id");

                    b.Property<DateTime?>("FechaAceptado")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_aceptado");

                    b.HasKey("CodigoInvitacionId", "PersonaId")
                        .HasName("pk_persona_codigo_invitacion");

                    b.ToTable("persona_codigo_invitacion", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.PersonaEscolaridad", b =>
                {
                    b.Property<int>("PersonaId")
                        .HasColumnType("integer")
                        .HasColumnName("persona_id");

                    b.Property<int>("EscolaridadId")
                        .HasColumnType("integer")
                        .HasColumnName("escolaridad_id");

                    b.HasKey("PersonaId", "EscolaridadId")
                        .HasName("pk_persona_escolaridad");

                    b.ToTable("persona_escolaridad", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.PersonaGenero", b =>
                {
                    b.Property<int>("PersonaId")
                        .HasColumnType("integer")
                        .HasColumnName("persona_id");

                    b.Property<int>("GeneroId")
                        .HasColumnType("integer")
                        .HasColumnName("genero_id");

                    b.HasKey("PersonaId", "GeneroId")
                        .HasName("pk_persona_genero");

                    b.ToTable("persona_genero", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.PersonaHabilidad", b =>
                {
                    b.Property<int>("PersonaId")
                        .HasColumnType("integer")
                        .HasColumnName("persona_id");

                    b.Property<int>("HabilidadId")
                        .HasColumnType("integer")
                        .HasColumnName("habilidad_id");

                    b.HasKey("PersonaId", "HabilidadId")
                        .HasName("pk_persona_habilidad");

                    b.ToTable("persona_habilidad", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.PersonaInteres", b =>
                {
                    b.Property<int>("PersonaId")
                        .HasColumnType("integer")
                        .HasColumnName("persona_id");

                    b.Property<int>("InteresId")
                        .HasColumnType("integer")
                        .HasColumnName("interes_id");

                    b.HasKey("PersonaId", "InteresId")
                        .HasName("pk_persona_interes");

                    b.ToTable("persona_interes", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.PersonaMotivo", b =>
                {
                    b.Property<int>("PersonaId")
                        .HasColumnType("integer")
                        .HasColumnName("persona_id");

                    b.Property<int>("MotivoId")
                        .HasColumnType("integer")
                        .HasColumnName("motivo_id");

                    b.HasKey("PersonaId", "MotivoId")
                        .HasName("pk_persona_motivo");

                    b.ToTable("persona_motivo", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.Precandidaturas.ApoyoPrecandidatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<bool?>("EstaInteresadoInformacionAdicional")
                        .HasColumnType("boolean")
                        .HasColumnName("esta_interesado_informacion_adicional")
                        .HasComment("Esta columna indica si el registro esta interesado en recibir mas informacion");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("FormularioRellenadoJSON")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("formulario_rellenado_json")
                        .HasComment("Esta columna guarda el formulario llenado en formato JSON");

                    b.Property<int>("PerfilId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_id");

                    b.Property<int>("TipoPrecandidaturaId")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_precandidatura_id");

                    b.HasKey("Id")
                        .HasName("pk_apoyo_precandidatura");

                    b.HasIndex("PerfilId")
                        .HasDatabaseName("ix_apoyo_precandidatura_perfil_id");

                    b.HasIndex("TipoPrecandidaturaId")
                        .HasDatabaseName("ix_apoyo_precandidatura_tipo_precandidatura_id");

                    b.ToTable("apoyo_precandidatura", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.Precandidaturas.CatalogoTipoPrecandidatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_tipo_precandidatura");

                    b.ToTable("catalogo_tipo_precandidatura", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            FechaActualizacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1302),
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1302),
                            Nombre = "Diputación Federal"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            FechaActualizacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1306),
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1306),
                            Nombre = "Senaduría"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            FechaActualizacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1307),
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1307),
                            Nombre = "Titular de la Presidencia de los Estados Unidos Mexicanos"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.Precandidaturas.PerfilPrecandidatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("PerfilId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_id");

                    b.Property<int>("TipoPrecandidaturaId")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_precandidatura_id");

                    b.HasKey("Id")
                        .HasName("pk_perfil_precandidatura");

                    b.HasIndex("PerfilId")
                        .IsUnique()
                        .HasDatabaseName("ix_perfil_precandidatura_perfil_id");

                    b.HasIndex("TipoPrecandidaturaId")
                        .HasDatabaseName("ix_perfil_precandidatura_tipo_precandidatura_id");

                    b.ToTable("perfil_precandidatura", null, t =>
                        {
                            t.HasComment("Debido a que solo se puede registrar un tipo de precandidatura por perfil, se establece constraint unique");
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.Programa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("CantidadCupo")
                        .HasColumnType("integer")
                        .HasColumnName("cantidad_cupo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_fin");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_inicio");

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("localidad");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_programa");

                    b.ToTable("programa", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.ProgramaArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("integer")
                        .HasColumnName("area_id");

                    b.Property<int>("ProgramaId")
                        .HasColumnType("integer")
                        .HasColumnName("programa_id");

                    b.HasKey("Id")
                        .HasName("pk_programa_area");

                    b.HasIndex("AreaId")
                        .HasDatabaseName("ix_programa_area_area_id");

                    b.HasIndex("ProgramaId")
                        .HasDatabaseName("ix_programa_area_programa_id");

                    b.ToTable("programa_area", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.ProgramaResponsable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProgramaId")
                        .HasColumnType("integer")
                        .HasColumnName("programa_id");

                    b.Property<int>("ResponsableId")
                        .HasColumnType("integer")
                        .HasColumnName("responsable_id");

                    b.HasKey("Id")
                        .HasName("pk_programa_responsable");

                    b.HasIndex("ProgramaId")
                        .HasDatabaseName("ix_programa_responsable_programa_id");

                    b.ToTable("programa_responsable", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.Publicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int?>("CatalogoPublicacionId")
                        .HasColumnType("integer")
                        .HasColumnName("catalogo_publicacion_id");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("contenido");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_fin");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_inicio");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uuid")
                        .HasColumnName("guid");

                    b.Property<string>("ImagenPublicacion")
                        .HasColumnType("text")
                        .HasColumnName("imagen_publicacion");

                    b.Property<int?>("PerfilId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_id")
                        .HasComment("Para el tipo de publicaciones que utilizaran esta nueva columna para identificar al autor");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("titulo");

                    b.Property<string>("Url")
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id")
                        .HasComment("Para el tipo de publicaciones legacy que utilizaron esta columna para identificar al autor");

                    b.HasKey("Id")
                        .HasName("pk_publicacion");

                    b.HasIndex("CatalogoPublicacionId")
                        .HasDatabaseName("ix_publicacion_catalogo_publicacion_id");

                    b.HasIndex("PerfilId")
                        .HasDatabaseName("ix_publicacion_perfil_id");

                    b.ToTable("publicacion", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.PublicacionArchivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ArchivoId")
                        .HasColumnType("integer")
                        .HasColumnName("archivo_id");

                    b.Property<int>("PublicacionId")
                        .HasColumnType("integer")
                        .HasColumnName("publicacion_id");

                    b.HasKey("Id")
                        .HasName("pk_publicacion_archivo");

                    b.HasIndex("ArchivoId")
                        .HasDatabaseName("ix_publicacion_archivo_archivo_id");

                    b.HasIndex("PublicacionId")
                        .HasDatabaseName("ix_publicacion_archivo_publicacion_id");

                    b.ToTable("publicacion_archivo", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.PublicacionPerfilGrupal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int?>("CatalogoPublicacionPerfilGrupalId")
                        .HasColumnType("integer")
                        .HasColumnName("catalogo_publicacion_perfil_grupal_id");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("contenido");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_fin");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_inicio");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uuid")
                        .HasColumnName("guid");

                    b.Property<string>("ImagenPublicacion")
                        .HasColumnType("text")
                        .HasColumnName("imagen_publicacion");

                    b.Property<int>("PerfilGrupalId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_grupal_id");

                    b.Property<int?>("PerfilUsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_usuario_id")
                        .HasComment("Esta columna es opcional y registra al perfil ajeno a dashboard administrador de este perfil grupal que realiza la publicacion");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("titulo");

                    b.Property<string>("Url")
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.Property<string>("UrlMovimientoSocial")
                        .HasColumnType("text")
                        .HasColumnName("url_movimiento_social");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id")
                        .HasComment("Esta columna es opcional y registra al usuario dashboard administrador de este perfil grupal que realiza la publicacion");

                    b.HasKey("Id")
                        .HasName("pk_publicacion_perfil_grupal");

                    b.HasIndex("CatalogoPublicacionPerfilGrupalId")
                        .HasDatabaseName("ix_publicacion_perfil_grupal_catalogo_publicacion_perfil_grupa");

                    b.HasIndex("PerfilGrupalId")
                        .HasDatabaseName("ix_publicacion_perfil_grupal_perfil_grupal_id");

                    b.HasIndex("PerfilUsuarioId")
                        .HasDatabaseName("ix_publicacion_perfil_grupal_perfil_usuario_id");

                    b.ToTable("publicacion_perfil_grupal", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.RegistroCausa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("text")
                        .HasColumnName("apellido_materno");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("apellido_paterno");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("direccion");

                    b.Property<int>("EntidadFederativaId")
                        .HasColumnType("integer")
                        .HasColumnName("entidad_federativa_id");

                    b.Property<int>("EscolaridadId")
                        .HasColumnType("integer")
                        .HasColumnName("escolaridad_id");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<int>("GeneroId")
                        .HasColumnType("integer")
                        .HasColumnName("genero_id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_registro_causa");

                    b.HasIndex("EntidadFederativaId")
                        .HasDatabaseName("ix_registro_causa_entidad_federativa_id");

                    b.HasIndex("EscolaridadId")
                        .HasDatabaseName("ix_registro_causa_escolaridad_id");

                    b.HasIndex("GeneroId")
                        .HasDatabaseName("ix_registro_causa_genero_id");

                    b.ToTable("registro_causa", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.RegistroCausaCausa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CausaId")
                        .HasColumnType("integer")
                        .HasColumnName("causa_id");

                    b.Property<int>("RegistroCausaId")
                        .HasColumnType("integer")
                        .HasColumnName("registro_causa_id");

                    b.HasKey("Id")
                        .HasName("pk_registro_causa_causa");

                    b.HasIndex("CausaId")
                        .HasDatabaseName("ix_registro_causa_causa_causa_id");

                    b.HasIndex("RegistroCausaId")
                        .HasDatabaseName("ix_registro_causa_causa_registro_causa_id");

                    b.ToTable("registro_causa_causa", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.RegistroOchoAcciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("text")
                        .HasColumnName("apellido_materno");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("apellido_paterno");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("direccion");

                    b.Property<int>("EntidadFederativaId")
                        .HasColumnType("integer")
                        .HasColumnName("entidad_federativa_id");

                    b.Property<int?>("EscolaridadId")
                        .HasColumnType("integer")
                        .HasColumnName("escolaridad_id");

                    b.Property<int?>("EstatusRegistroId")
                        .HasColumnType("integer")
                        .HasColumnName("estatus_registro_id");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<int>("GeneroId")
                        .HasColumnType("integer")
                        .HasColumnName("genero_id");

                    b.Property<int?>("MotivoId")
                        .HasColumnType("integer")
                        .HasColumnName("motivo_id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_registro_ocho_acciones");

                    b.HasIndex("EntidadFederativaId")
                        .HasDatabaseName("ix_registro_ocho_acciones_entidad_federativa_id");

                    b.HasIndex("EscolaridadId")
                        .HasDatabaseName("ix_registro_ocho_acciones_escolaridad_id");

                    b.HasIndex("EstatusRegistroId")
                        .HasDatabaseName("ix_registro_ocho_acciones_estatus_registro_id");

                    b.HasIndex("GeneroId")
                        .HasDatabaseName("ix_registro_ocho_acciones_genero_id");

                    b.HasIndex("MotivoId")
                        .HasDatabaseName("ix_registro_ocho_acciones_motivo_id");

                    b.ToTable("registro_ocho_acciones", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.RegistroOchoAccionesCatalogoOchoAcciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CatalogoOchoAccionesId")
                        .HasColumnType("integer")
                        .HasColumnName("catalogo_ocho_acciones_id");

                    b.Property<int>("RegistroOchoAccionesId")
                        .HasColumnType("integer")
                        .HasColumnName("registro_ocho_acciones_id");

                    b.HasKey("Id")
                        .HasName("pk_registro_ocho_acciones_catalogo_ocho_acciones");

                    b.HasIndex("CatalogoOchoAccionesId")
                        .HasDatabaseName("ix_registro_ocho_acciones_catalogo_ocho_acciones_catalogo_ocho");

                    b.HasIndex("RegistroOchoAccionesId")
                        .HasDatabaseName("ix_registro_ocho_acciones_catalogo_ocho_acciones_registro_ocho");

                    b.ToTable("registro_ocho_acciones_catalogo_ocho_acciones", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.RegistroOchoAccionesHabilidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("HabilidadId")
                        .HasColumnType("integer")
                        .HasColumnName("habilidad_id");

                    b.Property<int>("RegistroOchoAccionesId")
                        .HasColumnType("integer")
                        .HasColumnName("registro_ocho_acciones_id");

                    b.HasKey("Id")
                        .HasName("pk_registro_ocho_acciones_habilidad");

                    b.HasIndex("HabilidadId")
                        .HasDatabaseName("ix_registro_ocho_acciones_habilidad_habilidad_id");

                    b.HasIndex("RegistroOchoAccionesId")
                        .HasDatabaseName("ix_registro_ocho_acciones_habilidad_registro_ocho_acciones_id");

                    b.ToTable("registro_ocho_acciones_habilidad", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.RegistroOchoAccionesInteres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("InteresId")
                        .HasColumnType("integer")
                        .HasColumnName("interes_id");

                    b.Property<int>("RegistroOchoAccionesId")
                        .HasColumnType("integer")
                        .HasColumnName("registro_ocho_acciones_id");

                    b.HasKey("Id")
                        .HasName("pk_registro_ocho_acciones_interes");

                    b.HasIndex("InteresId")
                        .HasDatabaseName("ix_registro_ocho_acciones_interes_interes_id");

                    b.HasIndex("RegistroOchoAccionesId")
                        .HasDatabaseName("ix_registro_ocho_acciones_interes_registro_ocho_acciones_id");

                    b.ToTable("registro_ocho_acciones_interes", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.RegistroOchoAccionesUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("pk_registro_ocho_acciones_usuario");

                    b.ToTable("registro_ocho_acciones_usuario", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.RegistroOchoAccionesUsuarioCatalogoOchoAcciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CatalogoOchoAccionesId")
                        .HasColumnType("integer")
                        .HasColumnName("catalogo_ocho_acciones_id");

                    b.Property<int>("RegistroOchoAccionesUsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("registro_ocho_acciones_usuario_id");

                    b.HasKey("Id")
                        .HasName("pk_registro_ocho_acciones_usuario_catalogo_ocho_acciones");

                    b.HasIndex("CatalogoOchoAccionesId")
                        .HasDatabaseName("ix_registro_ocho_acciones_usuario_catalogo_ocho_acciones_catal");

                    b.HasIndex("RegistroOchoAccionesUsuarioId")
                        .HasDatabaseName("ix_registro_ocho_acciones_usuario_catalogo_ocho_acciones_regis");

                    b.ToTable("registro_ocho_acciones_usuario_catalogo_ocho_acciones", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.RespuestasEncuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EncuestaId")
                        .HasColumnType("integer")
                        .HasColumnName("encuesta_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("PreguntaId")
                        .HasColumnType("integer")
                        .HasColumnName("pregunta_id");

                    b.Property<string>("Respuesta")
                        .HasColumnType("text")
                        .HasColumnName("respuesta");

                    b.HasKey("Id")
                        .HasName("pk_respuestas_encuesta");

                    b.HasIndex("EncuestaId")
                        .HasDatabaseName("ix_respuestas_encuesta_encuesta_id");

                    b.HasIndex("PreguntaId")
                        .HasDatabaseName("ix_respuestas_encuesta_pregunta_id");

                    b.ToTable("respuestas_encuesta", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.RespuestasOchoAcciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("PreguntaId")
                        .HasColumnType("integer")
                        .HasColumnName("pregunta_id");

                    b.Property<int>("RegistroOchoAccionesId")
                        .HasColumnType("integer")
                        .HasColumnName("registro_ocho_acciones_id");

                    b.Property<string>("Respuesta")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("respuesta");

                    b.HasKey("Id")
                        .HasName("pk_respuestas_ocho_acciones");

                    b.HasIndex("PreguntaId")
                        .HasDatabaseName("ix_respuestas_ocho_acciones_pregunta_id");

                    b.HasIndex("RegistroOchoAccionesId")
                        .HasDatabaseName("ix_respuestas_ocho_acciones_registro_ocho_acciones_id");

                    b.ToTable("respuestas_ocho_acciones", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.RespuestasOchoAccionesRegistroOchoAccionesUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("PreguntaId")
                        .HasColumnType("integer")
                        .HasColumnName("pregunta_id");

                    b.Property<int>("RegistroOchoAccionesUsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("registro_ocho_acciones_usuario_id");

                    b.Property<string>("Respuesta")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("respuesta");

                    b.HasKey("Id")
                        .HasName("pk_respuestas_ocho_acciones_registro_ocho_acciones_usuario");

                    b.HasIndex("PreguntaId")
                        .HasDatabaseName("ix_respuestas_ocho_acciones_registro_ocho_acciones_usuario_pre");

                    b.HasIndex("RegistroOchoAccionesUsuarioId")
                        .HasDatabaseName("ix_respuestas_ocho_acciones_registro_ocho_acciones_usuario_reg");

                    b.ToTable("respuestas_ocho_acciones_registro_ocho_acciones_usuario", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.SecretariaOrganizacionAccionPolitica.CatalogoEstadoValidacionArchivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_estado_validacion_archivo");

                    b.ToTable("catalogo_estado_validacion_archivo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            FechaActualizacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1109),
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1108),
                            Nombre = "En proceso"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            FechaActualizacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1117),
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1117),
                            Nombre = "Comentado"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            FechaActualizacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1118),
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1118),
                            Nombre = "Aceptado"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.SecretariaOrganizacionAccionPolitica.CatalogoRolComision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_rol_comision");

                    b.ToTable("catalogo_rol_comision", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            FechaActualizacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1157),
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1157),
                            Nombre = "Coordinador"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.SecretariaOrganizacionAccionPolitica.CatalogoTipoArchivoSesion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_tipo_archivo_sesion");

                    b.ToTable("catalogo_tipo_archivo_sesion", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            FechaActualizacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1189),
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1188),
                            Nombre = "Foto/Imagen"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            FechaActualizacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1194),
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1193),
                            Nombre = "Acta"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            FechaActualizacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1195),
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1194),
                            Nombre = "Lista"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.SecretariaOrganizacionAccionPolitica.CatalogoTipoComision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_tipo_comision");

                    b.ToTable("catalogo_tipo_comision", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            FechaActualizacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1232),
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1231),
                            Nombre = "Electa"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            FechaActualizacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1236),
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1236),
                            Nombre = "Provisional"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.SecretariaOrganizacionAccionPolitica.CatalogoTipoSesion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_catalogo_tipo_sesion");

                    b.ToTable("catalogo_tipo_sesion", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            FechaActualizacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1264),
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1264),
                            Nombre = "Consejo estatal"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            FechaActualizacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1268),
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1268),
                            Nombre = "Comisión operativa estatal"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            FechaActualizacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1269),
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1269),
                            Nombre = "Junta de coordinación"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            FechaActualizacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1271),
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 714, DateTimeKind.Utc).AddTicks(1270),
                            Nombre = "Coordinadora"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.SecretariaOrganizacionAccionPolitica.Comision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("EntidadFederativaId")
                        .HasColumnType("integer")
                        .HasColumnName("entidad_federativa_id");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaVigencia")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_vigencia")
                        .HasComment("Fecha de vigencia de comision");

                    b.Property<string>("Periodicidad")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("periodicidad")
                        .HasComment("Esta columna almacena las periodicidades de sesiones, siendo la cantidad de sesiones por cada dia o mes o anio para los diferentes sus diferentes tipos");

                    b.Property<int>("TipoComisionId")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_comision_id");

                    b.HasKey("Id")
                        .HasName("pk_comision");

                    b.HasIndex("EntidadFederativaId")
                        .IsUnique()
                        .HasDatabaseName("ix_comision_entidad_federativa_id");

                    b.HasIndex("TipoComisionId")
                        .HasDatabaseName("ix_comision_tipo_comision_id");

                    b.ToTable("comision", null, t =>
                        {
                            t.HasComment("Debido a que cada estado solo puede tener un tipo de comision, se establece constraint unique");
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.SecretariaOrganizacionAccionPolitica.ComisionUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("ComisionId")
                        .HasColumnType("integer")
                        .HasColumnName("comision_id");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("RolComisionId")
                        .HasColumnType("integer")
                        .HasColumnName("rol_comision_id");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id")
                        .HasComment("Id del usuario dashboard relacionado a la comision");

                    b.HasKey("Id")
                        .HasName("pk_comision_usuario");

                    b.HasIndex("ComisionId")
                        .HasDatabaseName("ix_comision_usuario_comision_id");

                    b.HasIndex("RolComisionId")
                        .HasDatabaseName("ix_comision_usuario_rol_comision_id");

                    b.ToTable("comision_usuario", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.SecretariaOrganizacionAccionPolitica.Sesion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<string>("Comentarios")
                        .HasColumnType("text")
                        .HasColumnName("comentarios");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("direccion");

                    b.Property<int>("EntidadFederativaId")
                        .HasColumnType("integer")
                        .HasColumnName("entidad_federativa_id");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaSesion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_sesion")
                        .HasComment("Fecha en la que se registra la sesion");

                    b.Property<int>("TipoSesionId")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_sesion_id");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id")
                        .HasComment("Id del usuario dashboard que registra la sesion");

                    b.HasKey("Id")
                        .HasName("pk_sesion");

                    b.HasIndex("EntidadFederativaId")
                        .HasDatabaseName("ix_sesion_entidad_federativa_id");

                    b.HasIndex("TipoSesionId")
                        .HasDatabaseName("ix_sesion_tipo_sesion_id");

                    b.ToTable("sesion", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.SecretariaOrganizacionAccionPolitica.SesionArchivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("ArchivoId")
                        .HasColumnType("integer")
                        .HasColumnName("archivo_id");

                    b.Property<int>("EstadoValidacionArchivoId")
                        .HasColumnType("integer")
                        .HasColumnName("estado_validacion_archivo_id");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("SesionId")
                        .HasColumnType("integer")
                        .HasColumnName("sesion_id");

                    b.Property<int>("UsuarioCargaId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_carga_id")
                        .HasComment("Id del usuario dashboard que carga el archivo");

                    b.Property<int>("UsuarioValidacionArchivoId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_validacion_archivo_id")
                        .HasComment("Id del usuario dashboard que cambia el estado de validacion del archivo");

                    b.HasKey("Id")
                        .HasName("pk_sesion_archivo");

                    b.HasIndex("ArchivoId")
                        .HasDatabaseName("ix_sesion_archivo_archivo_id");

                    b.HasIndex("EstadoValidacionArchivoId")
                        .HasDatabaseName("ix_sesion_archivo_estado_validacion_archivo_id");

                    b.HasIndex("SesionId")
                        .HasDatabaseName("ix_sesion_archivo_sesion_id");

                    b.ToTable("sesion_archivo", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.TipoContacto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<bool>("EsEmail")
                        .HasColumnType("boolean")
                        .HasColumnName("es_email");

                    b.Property<bool>("EsOtro")
                        .HasColumnType("boolean")
                        .HasColumnName("es_otro");

                    b.Property<bool>("EsTelefono")
                        .HasColumnType("boolean")
                        .HasColumnName("es_telefono");

                    b.Property<bool>("EsWhatsapp")
                        .HasColumnType("boolean")
                        .HasColumnName("es_whatsapp")
                        .HasComment("Si es un telefono, se define si este tiene whatsapp o no");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_tipo_contacto");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_tipo_contacto_id");

                    b.ToTable("tipo_contacto", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            EsEmail = true,
                            EsOtro = true,
                            EsTelefono = false,
                            EsWhatsapp = false,
                            Nombre = "Correo electrónico"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            EsEmail = false,
                            EsOtro = true,
                            EsTelefono = true,
                            EsWhatsapp = false,
                            Nombre = "Teléfono"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            EsEmail = false,
                            EsOtro = true,
                            EsTelefono = true,
                            EsWhatsapp = true,
                            Nombre = "WhatsApp"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            EsEmail = false,
                            EsOtro = true,
                            EsTelefono = false,
                            EsWhatsapp = false,
                            Nombre = "Otro"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("CatalogoTokenId")
                        .HasColumnType("integer")
                        .HasColumnName("catalogo_token_id");

                    b.Property<bool>("Expirable")
                        .HasColumnType("boolean")
                        .HasColumnName("expirable");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<int?>("SegundosExpira")
                        .HasColumnType("integer")
                        .HasColumnName("segundos_expira");

                    b.Property<string>("StringifiedToken")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("stringified_token");

                    b.HasKey("Id")
                        .HasName("pk_token");

                    b.HasIndex("CatalogoTokenId")
                        .HasDatabaseName("ix_token_catalogo_token_id");

                    b.ToTable("token", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Rol")
                        .HasColumnType("text")
                        .HasColumnName("rol");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("pk_usuario");

                    b.ToTable("usuario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "alfonso.coeto@guacamayotech.com",
                            FechaCreacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(7005),
                            FechaModificacion = new DateTime(2023, 10, 21, 0, 25, 35, 713, DateTimeKind.Utc).AddTicks(7009),
                            Password = "c12fd9d663f595285f8ebffcb3c9b3144cd6d96f2c3acfa8293162fb701c871739378aa6ab073590d99057ec2a34eec3dd2c30899cce81501bea1837a916c997",
                            Rol = "Super Administrador",
                            UserName = "poncho.admin"
                        });
                });

            modelBuilder.Entity("MC_Universo_API.Models.UsuarioPerfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("PerfilId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_id");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("pk_usuario_perfil");

                    b.HasIndex("PerfilId")
                        .HasDatabaseName("ix_usuario_perfil_perfil_id");

                    b.ToTable("usuario_perfil", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.UsuarioPerfilGrupal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("PerfilGrupalId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_grupal_id");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("pk_usuario_perfil_grupal");

                    b.HasIndex("PerfilGrupalId")
                        .HasDatabaseName("ix_usuario_perfil_grupal_perfil_grupal_id");

                    b.ToTable("usuario_perfil_grupal", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.Voluntario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("text")
                        .HasColumnName("apellido_materno");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("apellido_paterno");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("correo_electronico");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("direccion");

                    b.Property<int>("EntidadFederativaId")
                        .HasColumnType("integer")
                        .HasColumnName("entidad_federativa_id");

                    b.Property<int>("EscolaridadId")
                        .HasColumnType("integer")
                        .HasColumnName("escolaridad_id");

                    b.Property<int>("EstatusVoluntarioId")
                        .HasColumnType("integer")
                        .HasColumnName("estatus_voluntario_id");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<int>("GeneroId")
                        .HasColumnType("integer")
                        .HasColumnName("genero_id");

                    b.Property<int>("MotivoId")
                        .HasColumnType("integer")
                        .HasColumnName("motivo_id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("telefono");

                    b.HasKey("Id")
                        .HasName("pk_voluntario");

                    b.HasIndex("EntidadFederativaId")
                        .HasDatabaseName("ix_voluntario_entidad_federativa_id");

                    b.HasIndex("EscolaridadId")
                        .HasDatabaseName("ix_voluntario_escolaridad_id");

                    b.HasIndex("EstatusVoluntarioId")
                        .HasDatabaseName("ix_voluntario_estatus_voluntario_id");

                    b.HasIndex("GeneroId")
                        .HasDatabaseName("ix_voluntario_genero_id");

                    b.HasIndex("MotivoId")
                        .HasDatabaseName("ix_voluntario_motivo_id");

                    b.ToTable("voluntario", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.VoluntarioComentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("comentario");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.Property<int>("VoluntarioId")
                        .HasColumnType("integer")
                        .HasColumnName("voluntario_id");

                    b.HasKey("Id")
                        .HasName("pk_voluntario_comentario");

                    b.HasIndex("VoluntarioId")
                        .HasDatabaseName("ix_voluntario_comentario_voluntario_id");

                    b.ToTable("voluntario_comentario", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.VoluntarioHabilidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("HabilidadId")
                        .HasColumnType("integer")
                        .HasColumnName("habilidad_id");

                    b.Property<int>("VoluntarioId")
                        .HasColumnType("integer")
                        .HasColumnName("voluntario_id");

                    b.HasKey("Id")
                        .HasName("pk_voluntario_habilidad");

                    b.HasIndex("HabilidadId")
                        .HasDatabaseName("ix_voluntario_habilidad_habilidad_id");

                    b.HasIndex("VoluntarioId")
                        .HasDatabaseName("ix_voluntario_habilidad_voluntario_id");

                    b.ToTable("voluntario_habilidad", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.VoluntarioInteres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("InteresId")
                        .HasColumnType("integer")
                        .HasColumnName("interes_id");

                    b.Property<int>("VoluntarioId")
                        .HasColumnType("integer")
                        .HasColumnName("voluntario_id");

                    b.HasKey("Id")
                        .HasName("pk_voluntario_interes");

                    b.HasIndex("InteresId")
                        .HasDatabaseName("ix_voluntario_interes_interes_id");

                    b.HasIndex("VoluntarioId")
                        .HasDatabaseName("ix_voluntario_interes_voluntario_id");

                    b.ToTable("voluntario_interes", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.VoluntarioPrograma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int>("ProgramaId")
                        .HasColumnType("integer")
                        .HasColumnName("programa_id");

                    b.Property<int>("VoluntarioId")
                        .HasColumnType("integer")
                        .HasColumnName("voluntario_id");

                    b.HasKey("Id")
                        .HasName("pk_voluntario_programa");

                    b.HasIndex("ProgramaId")
                        .HasDatabaseName("ix_voluntario_programa_programa_id");

                    b.HasIndex("VoluntarioId")
                        .HasDatabaseName("ix_voluntario_programa_voluntario_id");

                    b.ToTable("voluntario_programa", (string)null);
                });

            modelBuilder.Entity("MC_Universo_API.Models.AccionesAfirmativas.CandidatoPersona", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.CandidatosCHC", "CandidatosChc")
                        .WithMany()
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_candidato_persona_candidatos_chc_candidato_id");

                    b.HasOne("MC_Universo_API.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_candidato_persona_persona_persona_id");

                    b.Navigation("CandidatosChc");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("MC_Universo_API.Models.AccionesAfirmativas.CircunscripcionEstado", b =>
                {
                    b.HasOne("MC_Universo_API.Models.EntidadFederativa", "CircunscripcionId")
                        .WithMany()
                        .HasForeignKey("CircuncripcionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_circunscripcion_estado_entidad_federativa_circuncripcion_id");

                    b.HasOne("MC_Universo_API.Models.EntidadFederativa", "EntidadFederativa")
                        .WithMany()
                        .HasForeignKey("EntidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_circunscripcion_estado_entidad_federativa_entidad_id");

                    b.Navigation("CircunscripcionId");

                    b.Navigation("EntidadFederativa");
                });

            modelBuilder.Entity("MC_Universo_API.Models.AccionesAfirmativas.DatosEsperadosPorTipoCandidatura", b =>
                {
                    b.HasOne("MC_Universo_API.Models.AccionesAfirmativas.CatalogoRepresentante", "CatalogoRepresentante")
                        .WithMany()
                        .HasForeignKey("CatalogoRepresentanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_datos_esperados_por_tipo_candidatura_catalogo_representante");

                    b.Navigation("CatalogoRepresentante");
                });

            modelBuilder.Entity("MC_Universo_API.Models.AccionesAfirmativas.DetalleRequisitoDiputaciones", b =>
                {
                    b.HasOne("MC_Universo_API.Models.AccionesAfirmativas.EstadoCircunscripcion", "EstadoCircunscripcion")
                        .WithMany()
                        .HasForeignKey("EstadoCircunscripcionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_detalle_requisito_diputaciones_estado_circunscripcion_estad");

                    b.Navigation("EstadoCircunscripcion");
                });

            modelBuilder.Entity("MC_Universo_API.Models.AccionesAfirmativas.DistritosFederales", b =>
                {
                    b.HasOne("MC_Universo_API.Models.AccionesAfirmativas.CatalogoCircunscripcion", "CatalogoCircunscripcion")
                        .WithMany()
                        .HasForeignKey("CircunscripcionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_distritos_federales_catalogo_circunscripcion_circunscripcio");

                    b.HasOne("MC_Universo_API.Models.EntidadFederativa", "EntidadFederativa")
                        .WithMany()
                        .HasForeignKey("EntidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_distritos_federales_entidad_federativa_entidad_id");

                    b.Navigation("CatalogoCircunscripcion");

                    b.Navigation("EntidadFederativa");
                });

            modelBuilder.Entity("MC_Universo_API.Models.AccionesAfirmativas.EstadoCircunscripcion", b =>
                {
                    b.HasOne("MC_Universo_API.Models.AccionesAfirmativas.CatalogoCircunscripcion", "CatalogoCircunscripcion")
                        .WithMany()
                        .HasForeignKey("CircunscripcionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_estado_circunscripcion_catalogo_circunscripcion_circunscrip");

                    b.HasOne("MC_Universo_API.Models.EntidadFederativa", "EntidadFederativa")
                        .WithMany()
                        .HasForeignKey("EntidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_estado_circunscripcion_entidad_federativa_entidad_id");

                    b.Navigation("CatalogoCircunscripcion");

                    b.Navigation("EntidadFederativa");
                });

            modelBuilder.Entity("MC_Universo_API.Models.AccionesAfirmativas.RequisitoPorCircunscripcion", b =>
                {
                    b.HasOne("MC_Universo_API.Models.AccionesAfirmativas.CatalogoCircunscripcion", "Cicunscripcion")
                        .WithMany()
                        .HasForeignKey("CicunscripcionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_requisito_por_circunscripcion_catalogo_circunscripcion_cicu");

                    b.HasOne("MC_Universo_API.Models.AccionesAfirmativas.CatalogoRepresentante", "CatalogoRepresentante")
                        .WithMany()
                        .HasForeignKey("RepresentanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_requisito_por_circunscripcion_catalogo_representante_repres");

                    b.Navigation("CatalogoRepresentante");

                    b.Navigation("Cicunscripcion");
                });

            modelBuilder.Entity("MC_Universo_API.Models.BajasSistema", b =>
                {
                    b.HasOne("MC_Universo_API.Models.MotivoBaja", "MotivoBaja")
                        .WithMany()
                        .HasForeignKey("MotivoBajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_bajas_sistema_motivo_baja_motivo_baja_id");

                    b.HasOne("MC_Universo_API.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_bajas_sistema_persona_persona_id");

                    b.Navigation("MotivoBaja");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.AvanceEtapasCandidato", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.CandidatosCHC", "CandidatosCHC")
                        .WithMany()
                        .HasForeignKey("CandidatoCHCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_avance_etapas_candidato_candidatos_chc_candidato_chc_id");

                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.CatalogoEtapasCHC", "CatalogoEtapasCHC")
                        .WithMany()
                        .HasForeignKey("EtapaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_avance_etapas_candidato_catalogo_etapas_chc_etapa_id");

                    b.Navigation("CandidatosCHC");

                    b.Navigation("CatalogoEtapasCHC");
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.CandidatoEtapaRegistroCHC", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.CandidatosCHC", "CandidatosCHC")
                        .WithMany()
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_candidato_etapa_registro_chc_candidatos_chc_candidato_id");

                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.CatalogoEtapaRegistroCHC", "CatalogoEtapaRegistroCHC")
                        .WithMany()
                        .HasForeignKey("RegistroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_candidato_etapa_registro_chc_catalogo_etapa_registro_chc_re");

                    b.Navigation("CandidatosCHC");

                    b.Navigation("CatalogoEtapaRegistroCHC");
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.CandidatosCHC", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.CatalogoCaminosCHC", "CatalogoCaminosCHC")
                        .WithMany()
                        .HasForeignKey("CaminoId")
                        .HasConstraintName("fk_candidatos_chc_catalogo_caminos_chc_camino_id");

                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.CatalogoCargosPostulacion", "CatalogoCargosPostulacion")
                        .WithMany()
                        .HasForeignKey("CargoPostulacionId")
                        .HasConstraintName("fk_candidatos_chc_catalogo_cargos_postulacion_cargo_postulacio");

                    b.HasOne("MC_Universo_API.Models.AccionesAfirmativas.CatalogoCircunscripcion", "CatalogoCircunscripcion")
                        .WithMany()
                        .HasForeignKey("CircunscripcionId")
                        .HasConstraintName("fk_candidatos_chc_catalogo_circunscripcion_circunscripcion_id");

                    b.HasOne("MC_Universo_API.Models.AccionesAfirmativas.DistritosFederales", "DistritosFederales")
                        .WithMany()
                        .HasForeignKey("DistritoId")
                        .HasConstraintName("fk_candidatos_chc_distritos_federales_distrito_id");

                    b.HasOne("MC_Universo_API.Models.EntidadFederativa", "EntidadFederativa")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .HasConstraintName("fk_candidatos_chc_entidad_federativa_estado_id");

                    b.HasOne("MC_Universo_API.Models.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilId")
                        .HasConstraintName("fk_candidatos_chc_perfil_perfil_id");

                    b.HasOne("MC_Universo_API.Models.AccionesAfirmativas.CatalogoRepresentante", "CatalogoRepresentante")
                        .WithMany()
                        .HasForeignKey("RepresentanteId")
                        .HasConstraintName("fk_candidatos_chc_catalogo_representante_representante_id");

                    b.Navigation("CatalogoCaminosCHC");

                    b.Navigation("CatalogoCargosPostulacion");

                    b.Navigation("CatalogoCircunscripcion");

                    b.Navigation("CatalogoRepresentante");

                    b.Navigation("DistritosFederales");

                    b.Navigation("EntidadFederativa");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.CandidatosExamenes", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.CandidatosCHC", "CandidatosCHC")
                        .WithMany()
                        .HasForeignKey("CandidatoCHCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_candidatos_examenes_candidatos_chc_candidato_chc_id");

                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.ExamenesCHC", "ExamenesCHC")
                        .WithMany()
                        .HasForeignKey("ExamenCHCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_candidatos_examenes_examenes_chc_examen_chc_id");

                    b.Navigation("CandidatosCHC");

                    b.Navigation("ExamenesCHC");
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.CatalogoCargosPostulacion", b =>
                {
                    b.HasOne("MC_Universo_API.Models.EntidadFederativa", "EntidadFederativa")
                        .WithMany()
                        .HasForeignKey("EntidadFederativaId")
                        .HasConstraintName("fk_catalogo_cargos_postulacion_entidad_federativa_entidad_fede");

                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.CatalogoNivelesCargos", "CatalogoNivelesCargos")
                        .WithMany()
                        .HasForeignKey("NivelCargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_catalogo_cargos_postulacion_catalogo_niveles_cargos_nivel_c");

                    b.Navigation("CatalogoNivelesCargos");

                    b.Navigation("EntidadFederativa");
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.CatalogoEtapasCHC", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.CatalogoCaminosCHC", "CatalogoCaminosCHC")
                        .WithMany()
                        .HasForeignKey("CaminoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_catalogo_etapas_chc_catalogo_caminos_chc_camino_id");

                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.CatalogoTiposEtapasCHC", "CatalogoTiposEtapasCHC")
                        .WithMany()
                        .HasForeignKey("TipoEtapaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_catalogo_etapas_chc_catalogo_tipos_etapas_chc_tipo_etapa_id");

                    b.Navigation("CatalogoCaminosCHC");

                    b.Navigation("CatalogoTiposEtapasCHC");
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.ContenidoPantallasEtapasCHCCatalogoEtapasCHC", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.CatalogoEtapasCHC", "CatalogoEtapasCHC")
                        .WithMany()
                        .HasForeignKey("CatalogoEtapasCHCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_contenido_pantallas_etapas_chc_catalogo_etapas_chc_catalogo");

                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.ContenidoPantallasEtapasCHC", "ContenidoPantallasEtapasCHC")
                        .WithMany()
                        .HasForeignKey("ContenidoPantallasEtapasCHCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_contenido_pantallas_etapas_chc_catalogo_etapas_chc_contenid");

                    b.Navigation("CatalogoEtapasCHC");

                    b.Navigation("ContenidoPantallasEtapasCHC");
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.DetalleCandidatosExamenes", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.CandidatosExamenes", "CandidatosExamenes")
                        .WithMany()
                        .HasForeignKey("ExamenCandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_detalle_candidatos_examenes_candidatos_examenes_examen_cand");

                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.RespuestaExamenCHC", "RespuestaExamenCHC")
                        .WithMany()
                        .HasForeignKey("RespuestaExamenCHCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_detalle_candidatos_examenes_respuesta_examen_chc_respuesta_");

                    b.Navigation("CandidatosExamenes");

                    b.Navigation("RespuestaExamenCHC");
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.DocumentoCandidatosCHC", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.CandidatosCHC", "CandidatosCHC")
                        .WithMany()
                        .HasForeignKey("CandidatoCHCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_documento_candidatos_chc_candidatos_chc_candidato_chc_id");

                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.CatalogoDocumentosEligibilidadCHC", "CatalogoDocumentosEligibilidadCHC")
                        .WithMany()
                        .HasForeignKey("DocumentoEligibilidadCHCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_documento_candidatos_chc_catalogo_documentos_eligibilidad_c");

                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.CatalogoEstatusDocumentosEligibilidadCHC", "CatalogoEstatusDocumentosEligibilidadCHC")
                        .WithMany()
                        .HasForeignKey("EstatusDocumentoEligibilidadCHCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_documento_candidatos_chc_catalogo_estatus_documentos_eligib");

                    b.Navigation("CandidatosCHC");

                    b.Navigation("CatalogoDocumentosEligibilidadCHC");

                    b.Navigation("CatalogoEstatusDocumentosEligibilidadCHC");
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.DomicilioOirRecibirNotificacionesCHC", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.CandidatosCHC", "CandidatosCHC")
                        .WithMany()
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_domicilio_oir_recibir_notificaciones_chc_candidatos_chc_can");

                    b.HasOne("MC_Universo_API.Models.Direccion", "Direccion")
                        .WithMany()
                        .HasForeignKey("DireccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_domicilio_oir_recibir_notificaciones_chc_direccion_direccio");

                    b.Navigation("CandidatosCHC");

                    b.Navigation("Direccion");
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.PerfilPersonaCHC", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_persona_chc_perfil_perfil_id");

                    b.HasOne("MC_Universo_API.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_persona_chc_persona_persona_id");

                    b.Navigation("Perfil");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.PreguntasExamenCHC", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.ExamenesCHC", "ExamenesCHC")
                        .WithMany()
                        .HasForeignKey("ExamenCHCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_preguntas_examen_chc_examenes_chc_examen_chc_id");

                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.CatalogoTiposPreguntas", "CatalogoTiposPreguntas")
                        .WithMany()
                        .HasForeignKey("TipoPreguntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_preguntas_examen_chc_catalogo_tipos_preguntas_tipo_pregunta");

                    b.Navigation("CatalogoTiposPreguntas");

                    b.Navigation("ExamenesCHC");
                });

            modelBuilder.Entity("MC_Universo_API.Models.CaminoHeroeCiudadano.RespuestaExamenCHC", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CaminoHeroeCiudadano.PreguntasExamenCHC", "PreguntasExamenCHC")
                        .WithMany()
                        .HasForeignKey("PreguntaExamenCHCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_respuesta_examen_chc_preguntas_examen_chc_pregunta_examen_c");

                    b.Navigation("PreguntasExamenCHC");
                });

            modelBuilder.Entity("MC_Universo_API.Models.CatalogoPreguntasEncuestas", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CatalogoCategoriasPreguntasEncuestas", "CatalogoCategoriasPreguntasEncuestas")
                        .WithMany()
                        .HasForeignKey("CategoriaPreguntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_catalogo_preguntas_encuestas_catalogo_categorias_preguntas_");

                    b.Navigation("CatalogoCategoriasPreguntasEncuestas");
                });

            modelBuilder.Entity("MC_Universo_API.Models.CodigoInvitacion", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_codigo_invitacion_persona_sponsor_id");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("MC_Universo_API.Models.DatoContacto", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_dato_contacto_persona_persona_id");

                    b.HasOne("MC_Universo_API.Models.TipoContacto", "TipoContacto")
                        .WithMany()
                        .HasForeignKey("TipoContactoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_dato_contacto_tipo_contacto_tipo_contacto_id");

                    b.Navigation("Persona");

                    b.Navigation("TipoContacto");
                });

            modelBuilder.Entity("MC_Universo_API.Models.Direccion", b =>
                {
                    b.HasOne("MC_Universo_API.Models.EntidadFederativa", "EntidadFederativa")
                        .WithMany()
                        .HasForeignKey("EntidadFederativaId")
                        .HasConstraintName("fk_direccion_entidad_federativa_entidad_federativa_id");

                    b.HasOne("MC_Universo_API.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_direccion_persona_persona_id");

                    b.Navigation("EntidadFederativa");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("MC_Universo_API.Models.EntidadFederativaGrupoEntidadFederativa", b =>
                {
                    b.HasOne("MC_Universo_API.Models.EntidadFederativa", "EntidadFederativa")
                        .WithMany()
                        .HasForeignKey("EntidadFederativaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_entidad_federativa_grupo_entidad_federativa_entidad_federat");

                    b.HasOne("MC_Universo_API.Models.GrupoEntidadFederativa", "GrupoEntidadFederativa")
                        .WithMany()
                        .HasForeignKey("GrupoEntidadFederativaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_entidad_federativa_grupo_entidad_federativa_grupo_entidad_f");

                    b.Navigation("EntidadFederativa");

                    b.Navigation("GrupoEntidadFederativa");
                });

            modelBuilder.Entity("MC_Universo_API.Models.EscuchaFormularioTemasInteres", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Escucha", "Escucha")
                        .WithMany()
                        .HasForeignKey("EscuchaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_escucha_formulario_temas_interes_escucha_escucha_id");

                    b.HasOne("MC_Universo_API.Models.FormularioTemasInteres", "FormularioTemasInteres")
                        .WithMany()
                        .HasForeignKey("FormularioTemasInteresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_escucha_formulario_temas_interes_formulario_temas_interes_f");

                    b.Navigation("Escucha");

                    b.Navigation("FormularioTemasInteres");
                });

            modelBuilder.Entity("MC_Universo_API.Models.Evento", b =>
                {
                    b.HasOne("MC_Universo_API.Models.EventoTipo", "EventoTipo")
                        .WithMany()
                        .HasForeignKey("EventoTipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_evento_evento_tipo_evento_tipo_id");

                    b.HasOne("MC_Universo_API.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_evento_persona_responsable_id");

                    b.Navigation("EventoTipo");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("MC_Universo_API.Models.FormularioParticipacionEventos.DomicilioGeneral", b =>
                {
                    b.HasOne("MC_Universo_API.Models.EntidadFederativa", "EntidadFederativa")
                        .WithMany()
                        .HasForeignKey("EntidadFederativaId")
                        .HasConstraintName("fk_domicilio_general_entidad_federativa_entidad_federativa_id");

                    b.Navigation("EntidadFederativa");
                });

            modelBuilder.Entity("MC_Universo_API.Models.FormularioParticipacionEventos.RegistroParticipantesEventos", b =>
                {
                    b.HasOne("MC_Universo_API.Models.FormularioParticipacionEventos.DomicilioGeneral", "DomicilioGeneral")
                        .WithMany()
                        .HasForeignKey("DomicilioGeneralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_registro_participantes_eventos_domicilio_general_domicilio_");

                    b.HasOne("MC_Universo_API.Models.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_registro_participantes_eventos_genero_genero_id");

                    b.Navigation("DomicilioGeneral");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("MC_Universo_API.Models.FormularioTemasInteres", b =>
                {
                    b.HasOne("MC_Universo_API.Models.EntidadFederativa", "EntidadFederativa")
                        .WithMany()
                        .HasForeignKey("EntidadFederativaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_formulario_temas_interes_entidad_federativa_entidad_federat");

                    b.Navigation("EntidadFederativa");
                });

            modelBuilder.Entity("MC_Universo_API.Models.FormularioTemasInteresCatalogoCausasLanding", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CatalogoCausasLanding", "CatalogoCausasLanding")
                        .WithMany()
                        .HasForeignKey("CatalogoCausasLandingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_formulario_temas_interes_catalogo_causas_landing_catalogo_c");

                    b.HasOne("MC_Universo_API.Models.FormularioTemasInteres", "FormularioTemasInteres")
                        .WithMany()
                        .HasForeignKey("FormularioTemasInteresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_formulario_temas_interes_catalogo_causas_landing_formulario");

                    b.Navigation("CatalogoCausasLanding");

                    b.Navigation("FormularioTemasInteres");
                });

            modelBuilder.Entity("MC_Universo_API.Models.HabilidadCustom", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_habilidad_custom_persona_persona_id");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("MC_Universo_API.Models.InteresGrupoIntereses", b =>
                {
                    b.HasOne("MC_Universo_API.Models.GrupoIntereses", "GrupoIntereses")
                        .WithMany()
                        .HasForeignKey("GrupoInteresesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_interes_grupo_intereses_grupo_intereses_grupo_intereses_id");

                    b.HasOne("MC_Universo_API.Models.Interes", "Interes")
                        .WithMany()
                        .HasForeignKey("InteresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_interes_grupo_intereses_interes_interes_id");

                    b.Navigation("GrupoIntereses");

                    b.Navigation("Interes");
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilCatalogoRedesSociales", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CatalogoRedesSociales", "CatalogoRedesSociales")
                        .WithMany()
                        .HasForeignKey("CatalogoRedesSocialesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_catalogo_redes_sociales_catalogo_redes_sociales_cata");

                    b.HasOne("MC_Universo_API.Models.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_catalogo_redes_sociales_perfil_perfil_id");

                    b.Navigation("CatalogoRedesSociales");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilGrupalCatalogoRedesSociales", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CatalogoRedesSociales", "CatalogoRedesSociales")
                        .WithMany()
                        .HasForeignKey("CatalogoRedesSocialesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_grupal_catalogo_redes_sociales_catalogo_redes_social");

                    b.HasOne("MC_Universo_API.Models.PerfilGrupal", "PerfilGrupal")
                        .WithMany()
                        .HasForeignKey("PerfilGrupalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_grupal_catalogo_redes_sociales_perfil_grupal_perfil_");

                    b.Navigation("CatalogoRedesSociales");

                    b.Navigation("PerfilGrupal");
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilGrupalSiguePerfil", b =>
                {
                    b.HasOne("MC_Universo_API.Models.PerfilGrupal", "PerfilGrupalSeguidor")
                        .WithMany()
                        .HasForeignKey("PerfilGrupalSeguidorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_grupal_sigue_perfil_perfil_grupal_perfil_grupal_segu");

                    b.HasOne("MC_Universo_API.Models.Perfil", "PerfilSeguido")
                        .WithMany()
                        .HasForeignKey("PerfilSeguidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_grupal_sigue_perfil_perfil_perfil_seguido_id");

                    b.Navigation("PerfilGrupalSeguidor");

                    b.Navigation("PerfilSeguido");
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilGrupalSiguePerfilGrupal", b =>
                {
                    b.HasOne("MC_Universo_API.Models.PerfilGrupal", "PerfilGrupalSeguido")
                        .WithMany()
                        .HasForeignKey("PerfilGrupalSeguidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_grupal_sigue_perfil_grupal_perfil_grupal_perfil_grup");

                    b.HasOne("MC_Universo_API.Models.PerfilGrupal", "PerfilGrupalSeguidor")
                        .WithMany()
                        .HasForeignKey("PerfilGrupalSeguidorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_grupal_sigue_perfil_grupal_perfil_grupal_perfil_grup1");

                    b.Navigation("PerfilGrupalSeguido");

                    b.Navigation("PerfilGrupalSeguidor");
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilGrupalToken", b =>
                {
                    b.HasOne("MC_Universo_API.Models.PerfilGrupal", "PerfilGrupal")
                        .WithMany()
                        .HasForeignKey("PerfilGrupalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_grupal_token_perfil_grupal_perfil_grupal_id");

                    b.HasOne("MC_Universo_API.Models.Token", "Token")
                        .WithMany()
                        .HasForeignKey("TokenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_grupal_token_token_token_id");

                    b.Navigation("PerfilGrupal");

                    b.Navigation("Token");
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilSiguePerfil", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Perfil", "PerfilSeguido")
                        .WithMany()
                        .HasForeignKey("PerfilSeguidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_sigue_perfil_perfil_perfil_seguido_id");

                    b.HasOne("MC_Universo_API.Models.Perfil", "PerfilSeguidor")
                        .WithMany()
                        .HasForeignKey("PerfilSeguidorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_sigue_perfil_perfil_perfil_seguidor_id");

                    b.Navigation("PerfilSeguido");

                    b.Navigation("PerfilSeguidor");
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilSiguePerfilGrupal", b =>
                {
                    b.HasOne("MC_Universo_API.Models.PerfilGrupal", "PerfilGrupalSeguido")
                        .WithMany()
                        .HasForeignKey("PerfilGrupalSeguidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_sigue_perfil_grupal_perfil_grupal_perfil_grupal_segu");

                    b.HasOne("MC_Universo_API.Models.Perfil", "PerfilSeguidor")
                        .WithMany()
                        .HasForeignKey("PerfilSeguidorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_sigue_perfil_grupal_perfil_perfil_seguidor_id");

                    b.Navigation("PerfilGrupalSeguido");

                    b.Navigation("PerfilSeguidor");
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilToken", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_token_perfil_perfil_id");

                    b.HasOne("MC_Universo_API.Models.Token", "Token")
                        .WithMany()
                        .HasForeignKey("TokenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_token_token_token_id");

                    b.Navigation("Perfil");

                    b.Navigation("Token");
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilUsuario", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_usuario_perfil_perfil_id");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilUsuarioCodigoInvitacion", b =>
                {
                    b.HasOne("MC_Universo_API.Models.PerfilUsuario", "PerfilUsuario")
                        .WithMany()
                        .HasForeignKey("PerfilUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_usuario_codigo_invitacion_perfil_usuario_perfil_usua");

                    b.Navigation("PerfilUsuario");
                });

            modelBuilder.Entity("MC_Universo_API.Models.PerfilUsuarioPerfilGrupal", b =>
                {
                    b.HasOne("MC_Universo_API.Models.PerfilGrupal", "PerfilGrupal")
                        .WithMany()
                        .HasForeignKey("PerfilGrupalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_usuario_perfil_grupal_perfil_grupal_perfil_grupal_id");

                    b.HasOne("MC_Universo_API.Models.PerfilUsuario", "PerfilUsuario")
                        .WithMany()
                        .HasForeignKey("PerfilUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_usuario_perfil_grupal_perfil_usuario_perfil_usuario_");

                    b.Navigation("PerfilGrupal");

                    b.Navigation("PerfilUsuario");
                });

            modelBuilder.Entity("MC_Universo_API.Models.Persona", b =>
                {
                    b.HasOne("MC_Universo_API.Models.EntidadFederativa", "EntidadFederativa")
                        .WithMany()
                        .HasForeignKey("EntidadFederativaId")
                        .HasConstraintName("fk_persona_entidad_federativa_entidad_federativa_id");

                    b.HasOne("MC_Universo_API.Models.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_persona_genero_genero_id");

                    b.Navigation("EntidadFederativa");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("MC_Universo_API.Models.Precandidaturas.ApoyoPrecandidatura", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_apoyo_precandidatura_perfil_perfil_id");

                    b.HasOne("MC_Universo_API.Models.Precandidaturas.CatalogoTipoPrecandidatura", "CatalogoTipoPrecandidatura")
                        .WithMany()
                        .HasForeignKey("TipoPrecandidaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_apoyo_precandidatura_catalogo_tipo_precandidatura_tipo_prec");

                    b.Navigation("CatalogoTipoPrecandidatura");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("MC_Universo_API.Models.Precandidaturas.PerfilPrecandidatura", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_precandidatura_perfil_perfil_id");

                    b.HasOne("MC_Universo_API.Models.Precandidaturas.CatalogoTipoPrecandidatura", "CatalogoTipoPrecandidatura")
                        .WithMany()
                        .HasForeignKey("TipoPrecandidaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_perfil_precandidatura_catalogo_tipo_precandidatura_tipo_pre");

                    b.Navigation("CatalogoTipoPrecandidatura");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("MC_Universo_API.Models.ProgramaArea", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_programa_area_area_area_id");

                    b.HasOne("MC_Universo_API.Models.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_programa_area_programa_programa_id");

                    b.Navigation("Area");

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("MC_Universo_API.Models.ProgramaResponsable", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_programa_responsable_programa_programa_id");

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("MC_Universo_API.Models.Publicacion", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CatalogoPublicaciones", "CatalogoPublicaciones")
                        .WithMany()
                        .HasForeignKey("CatalogoPublicacionId")
                        .HasConstraintName("fk_publicacion_catalogo_publicaciones_catalogo_publicacion_id");

                    b.HasOne("MC_Universo_API.Models.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilId")
                        .HasConstraintName("fk_publicacion_perfil_perfil_id");

                    b.Navigation("CatalogoPublicaciones");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("MC_Universo_API.Models.PublicacionArchivo", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Archivo", "Archivo")
                        .WithMany()
                        .HasForeignKey("ArchivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_publicacion_archivo_archivo_archivo_id");

                    b.HasOne("MC_Universo_API.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("PublicacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_publicacion_archivo_publicacion_publicacion_id");

                    b.Navigation("Archivo");

                    b.Navigation("Publicacion");
                });

            modelBuilder.Entity("MC_Universo_API.Models.PublicacionPerfilGrupal", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CatalogoPublicacionesPerfilGrupal", "CatalogoPublicacionesPerfilGrupal")
                        .WithMany()
                        .HasForeignKey("CatalogoPublicacionPerfilGrupalId")
                        .HasConstraintName("fk_publicacion_perfil_grupal_catalogo_publicaciones_perfil_gru");

                    b.HasOne("MC_Universo_API.Models.PerfilGrupal", "PerfilGrupal")
                        .WithMany()
                        .HasForeignKey("PerfilGrupalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_publicacion_perfil_grupal_perfil_grupal_perfil_grupal_id");

                    b.HasOne("MC_Universo_API.Models.PerfilUsuario", "PerfilUsuario")
                        .WithMany()
                        .HasForeignKey("PerfilUsuarioId")
                        .HasConstraintName("fk_publicacion_perfil_grupal_perfil_usuario_perfil_usuario_id");

                    b.Navigation("CatalogoPublicacionesPerfilGrupal");

                    b.Navigation("PerfilGrupal");

                    b.Navigation("PerfilUsuario");
                });

            modelBuilder.Entity("MC_Universo_API.Models.RegistroCausa", b =>
                {
                    b.HasOne("MC_Universo_API.Models.EntidadFederativa", "EntidadFederativa")
                        .WithMany()
                        .HasForeignKey("EntidadFederativaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_registro_causa_entidad_federativa_entidad_federativa_id");

                    b.HasOne("MC_Universo_API.Models.Escolaridad", "Escolaridad")
                        .WithMany()
                        .HasForeignKey("EscolaridadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_registro_causa_escolaridad_escolaridad_id");

                    b.HasOne("MC_Universo_API.Models.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_registro_causa_genero_genero_id");

                    b.Navigation("EntidadFederativa");

                    b.Navigation("Escolaridad");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("MC_Universo_API.Models.RegistroCausaCausa", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Causa", "Causa")
                        .WithMany()
                        .HasForeignKey("CausaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_registro_causa_causa_causa_causa_id");

                    b.HasOne("MC_Universo_API.Models.RegistroCausa", "RegistroCausa")
                        .WithMany()
                        .HasForeignKey("RegistroCausaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_registro_causa_causa_registro_causa_registro_causa_id");

                    b.Navigation("Causa");

                    b.Navigation("RegistroCausa");
                });

            modelBuilder.Entity("MC_Universo_API.Models.RegistroOchoAcciones", b =>
                {
                    b.HasOne("MC_Universo_API.Models.EntidadFederativa", "EntidadFederativa")
                        .WithMany()
                        .HasForeignKey("EntidadFederativaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_registro_ocho_acciones_entidad_federativa_entidad_federativ");

                    b.HasOne("MC_Universo_API.Models.Escolaridad", "Escolaridad")
                        .WithMany()
                        .HasForeignKey("EscolaridadId")
                        .HasConstraintName("fk_registro_ocho_acciones_escolaridad_escolaridad_id");

                    b.HasOne("MC_Universo_API.Models.CatalogoEstatusVoluntario", "CatalogoEstatusVoluntario")
                        .WithMany()
                        .HasForeignKey("EstatusRegistroId")
                        .HasConstraintName("fk_registro_ocho_acciones_catalogo_estatus_voluntario_estatus_");

                    b.HasOne("MC_Universo_API.Models.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_registro_ocho_acciones_genero_genero_id");

                    b.HasOne("MC_Universo_API.Models.Motivo", "Motivo")
                        .WithMany()
                        .HasForeignKey("MotivoId")
                        .HasConstraintName("fk_registro_ocho_acciones_motivo_motivo_id");

                    b.Navigation("CatalogoEstatusVoluntario");

                    b.Navigation("EntidadFederativa");

                    b.Navigation("Escolaridad");

                    b.Navigation("Genero");

                    b.Navigation("Motivo");
                });

            modelBuilder.Entity("MC_Universo_API.Models.RegistroOchoAccionesCatalogoOchoAcciones", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CatalogoOchoAcciones", "CatalogoOchoAcciones")
                        .WithMany()
                        .HasForeignKey("CatalogoOchoAccionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_registro_ocho_acciones_catalogo_ocho_acciones_catalogo_ocho");

                    b.HasOne("MC_Universo_API.Models.RegistroOchoAcciones", "RegistroOchoAcciones")
                        .WithMany()
                        .HasForeignKey("RegistroOchoAccionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_registro_ocho_acciones_catalogo_ocho_acciones_registro_ocho");

                    b.Navigation("CatalogoOchoAcciones");

                    b.Navigation("RegistroOchoAcciones");
                });

            modelBuilder.Entity("MC_Universo_API.Models.RegistroOchoAccionesHabilidad", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Habilidad", "Habilidad")
                        .WithMany()
                        .HasForeignKey("HabilidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_registro_ocho_acciones_habilidad_habilidad_habilidad_id");

                    b.HasOne("MC_Universo_API.Models.RegistroOchoAcciones", "RegistroOchoAcciones")
                        .WithMany()
                        .HasForeignKey("RegistroOchoAccionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_registro_ocho_acciones_habilidad_registro_ocho_acciones_reg");

                    b.Navigation("Habilidad");

                    b.Navigation("RegistroOchoAcciones");
                });

            modelBuilder.Entity("MC_Universo_API.Models.RegistroOchoAccionesInteres", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Interes", "Interes")
                        .WithMany()
                        .HasForeignKey("InteresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_registro_ocho_acciones_interes_interes_interes_id");

                    b.HasOne("MC_Universo_API.Models.RegistroOchoAcciones", "RegistroOchoAcciones")
                        .WithMany()
                        .HasForeignKey("RegistroOchoAccionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_registro_ocho_acciones_interes_registro_ocho_acciones_regis");

                    b.Navigation("Interes");

                    b.Navigation("RegistroOchoAcciones");
                });

            modelBuilder.Entity("MC_Universo_API.Models.RegistroOchoAccionesUsuarioCatalogoOchoAcciones", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CatalogoOchoAcciones", "CatalogoOchoAcciones")
                        .WithMany()
                        .HasForeignKey("CatalogoOchoAccionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_registro_ocho_acciones_usuario_catalogo_ocho_acciones_catal");

                    b.HasOne("MC_Universo_API.Models.RegistroOchoAccionesUsuario", "RegistroOchoAccionesUsuario")
                        .WithMany()
                        .HasForeignKey("RegistroOchoAccionesUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_registro_ocho_acciones_usuario_catalogo_ocho_acciones_regis");

                    b.Navigation("CatalogoOchoAcciones");

                    b.Navigation("RegistroOchoAccionesUsuario");
                });

            modelBuilder.Entity("MC_Universo_API.Models.RespuestasEncuesta", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Encuesta", "Encuesta")
                        .WithMany()
                        .HasForeignKey("EncuestaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_respuestas_encuesta_encuesta_encuesta_id");

                    b.HasOne("MC_Universo_API.Models.CatalogoPreguntasEncuestas", "CatalogoPreguntasEncuestas")
                        .WithMany()
                        .HasForeignKey("PreguntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_respuestas_encuesta_catalogo_preguntas_encuestas_pregunta_id");

                    b.Navigation("CatalogoPreguntasEncuestas");

                    b.Navigation("Encuesta");
                });

            modelBuilder.Entity("MC_Universo_API.Models.RespuestasOchoAcciones", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CatalogoPreguntasOchoAcciones", "CatalogoPreguntasOchoAcciones")
                        .WithMany()
                        .HasForeignKey("PreguntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_respuestas_ocho_acciones_catalogo_preguntas_ocho_acciones_p");

                    b.HasOne("MC_Universo_API.Models.RegistroOchoAcciones", "RegistroOchoAcciones")
                        .WithMany()
                        .HasForeignKey("RegistroOchoAccionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_respuestas_ocho_acciones_registro_ocho_acciones_registro_oc");

                    b.Navigation("CatalogoPreguntasOchoAcciones");

                    b.Navigation("RegistroOchoAcciones");
                });

            modelBuilder.Entity("MC_Universo_API.Models.RespuestasOchoAccionesRegistroOchoAccionesUsuario", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CatalogoPreguntasOchoAcciones", "CatalogoPreguntasOchoAcciones")
                        .WithMany()
                        .HasForeignKey("PreguntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_respuestas_ocho_acciones_registro_ocho_acciones_usuario_cat");

                    b.HasOne("MC_Universo_API.Models.RegistroOchoAccionesUsuario", "RegistroOchoAccionesUsuario")
                        .WithMany()
                        .HasForeignKey("RegistroOchoAccionesUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_respuestas_ocho_acciones_registro_ocho_acciones_usuario_reg");

                    b.Navigation("CatalogoPreguntasOchoAcciones");

                    b.Navigation("RegistroOchoAccionesUsuario");
                });

            modelBuilder.Entity("MC_Universo_API.Models.SecretariaOrganizacionAccionPolitica.Comision", b =>
                {
                    b.HasOne("MC_Universo_API.Models.EntidadFederativa", "EntidadFederativa")
                        .WithMany()
                        .HasForeignKey("EntidadFederativaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_comision_entidad_federativa_entidad_federativa_id");

                    b.HasOne("MC_Universo_API.Models.SecretariaOrganizacionAccionPolitica.CatalogoTipoComision", "CatalogoTipoComision")
                        .WithMany()
                        .HasForeignKey("TipoComisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_comision_catalogo_tipo_comision_tipo_comision_id");

                    b.Navigation("CatalogoTipoComision");

                    b.Navigation("EntidadFederativa");
                });

            modelBuilder.Entity("MC_Universo_API.Models.SecretariaOrganizacionAccionPolitica.ComisionUsuario", b =>
                {
                    b.HasOne("MC_Universo_API.Models.SecretariaOrganizacionAccionPolitica.Comision", "Comision")
                        .WithMany()
                        .HasForeignKey("ComisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_comision_usuario_comision_comision_id");

                    b.HasOne("MC_Universo_API.Models.SecretariaOrganizacionAccionPolitica.CatalogoRolComision", "CatalogoRolComision")
                        .WithMany()
                        .HasForeignKey("RolComisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_comision_usuario_catalogo_rol_comision_rol_comision_id");

                    b.Navigation("CatalogoRolComision");

                    b.Navigation("Comision");
                });

            modelBuilder.Entity("MC_Universo_API.Models.SecretariaOrganizacionAccionPolitica.Sesion", b =>
                {
                    b.HasOne("MC_Universo_API.Models.EntidadFederativa", "EntidadFederativa")
                        .WithMany()
                        .HasForeignKey("EntidadFederativaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sesion_entidad_federativa_entidad_federativa_id");

                    b.HasOne("MC_Universo_API.Models.SecretariaOrganizacionAccionPolitica.CatalogoTipoSesion", "CatalogoTipoSesion")
                        .WithMany()
                        .HasForeignKey("TipoSesionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sesion_catalogo_tipo_sesion_tipo_sesion_id");

                    b.Navigation("CatalogoTipoSesion");

                    b.Navigation("EntidadFederativa");
                });

            modelBuilder.Entity("MC_Universo_API.Models.SecretariaOrganizacionAccionPolitica.SesionArchivo", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Archivo", "Archivo")
                        .WithMany()
                        .HasForeignKey("ArchivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sesion_archivo_archivo_archivo_id");

                    b.HasOne("MC_Universo_API.Models.SecretariaOrganizacionAccionPolitica.CatalogoEstadoValidacionArchivo", "CatalogoEstadoValidacionArchivo")
                        .WithMany()
                        .HasForeignKey("EstadoValidacionArchivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sesion_archivo_catalogo_estado_validacion_archivo_estado_va");

                    b.HasOne("MC_Universo_API.Models.SecretariaOrganizacionAccionPolitica.Sesion", "Sesion")
                        .WithMany()
                        .HasForeignKey("SesionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sesion_archivo_sesion_sesion_id");

                    b.Navigation("Archivo");

                    b.Navigation("CatalogoEstadoValidacionArchivo");

                    b.Navigation("Sesion");
                });

            modelBuilder.Entity("MC_Universo_API.Models.Token", b =>
                {
                    b.HasOne("MC_Universo_API.Models.CatalogoTokens", "CatalogoTokens")
                        .WithMany()
                        .HasForeignKey("CatalogoTokenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_token_catalogo_tokens_catalogo_token_id");

                    b.Navigation("CatalogoTokens");
                });

            modelBuilder.Entity("MC_Universo_API.Models.UsuarioPerfil", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_usuario_perfil_perfil_perfil_id");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("MC_Universo_API.Models.UsuarioPerfilGrupal", b =>
                {
                    b.HasOne("MC_Universo_API.Models.PerfilGrupal", "PerfilGrupal")
                        .WithMany()
                        .HasForeignKey("PerfilGrupalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_usuario_perfil_grupal_perfil_grupal_perfil_grupal_id");

                    b.Navigation("PerfilGrupal");
                });

            modelBuilder.Entity("MC_Universo_API.Models.Voluntario", b =>
                {
                    b.HasOne("MC_Universo_API.Models.EntidadFederativa", "EntidadFederativa")
                        .WithMany()
                        .HasForeignKey("EntidadFederativaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_voluntario_entidad_federativa_entidad_federativa_id");

                    b.HasOne("MC_Universo_API.Models.Escolaridad", "Escolaridad")
                        .WithMany()
                        .HasForeignKey("EscolaridadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_voluntario_escolaridad_escolaridad_id");

                    b.HasOne("MC_Universo_API.Models.CatalogoEstatusVoluntario", "CatalogoEstatusVoluntario")
                        .WithMany()
                        .HasForeignKey("EstatusVoluntarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_voluntario_catalogo_estatus_voluntario_estatus_voluntario_id");

                    b.HasOne("MC_Universo_API.Models.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_voluntario_genero_genero_id");

                    b.HasOne("MC_Universo_API.Models.Motivo", "Motivo")
                        .WithMany()
                        .HasForeignKey("MotivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_voluntario_motivo_motivo_id");

                    b.Navigation("CatalogoEstatusVoluntario");

                    b.Navigation("EntidadFederativa");

                    b.Navigation("Escolaridad");

                    b.Navigation("Genero");

                    b.Navigation("Motivo");
                });

            modelBuilder.Entity("MC_Universo_API.Models.VoluntarioComentario", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Voluntario", "Voluntario")
                        .WithMany()
                        .HasForeignKey("VoluntarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_voluntario_comentario_voluntario_voluntario_id");

                    b.Navigation("Voluntario");
                });

            modelBuilder.Entity("MC_Universo_API.Models.VoluntarioHabilidad", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Habilidad", "Habilidad")
                        .WithMany()
                        .HasForeignKey("HabilidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_voluntario_habilidad_habilidad_habilidad_id");

                    b.HasOne("MC_Universo_API.Models.Voluntario", "Voluntario")
                        .WithMany()
                        .HasForeignKey("VoluntarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_voluntario_habilidad_voluntario_voluntario_id");

                    b.Navigation("Habilidad");

                    b.Navigation("Voluntario");
                });

            modelBuilder.Entity("MC_Universo_API.Models.VoluntarioInteres", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Interes", "Interes")
                        .WithMany()
                        .HasForeignKey("InteresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_voluntario_interes_interes_interes_id");

                    b.HasOne("MC_Universo_API.Models.Voluntario", "Voluntario")
                        .WithMany()
                        .HasForeignKey("VoluntarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_voluntario_interes_voluntario_voluntario_id");

                    b.Navigation("Interes");

                    b.Navigation("Voluntario");
                });

            modelBuilder.Entity("MC_Universo_API.Models.VoluntarioPrograma", b =>
                {
                    b.HasOne("MC_Universo_API.Models.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_voluntario_programa_programa_programa_id");

                    b.HasOne("MC_Universo_API.Models.Voluntario", "Voluntario")
                        .WithMany()
                        .HasForeignKey("VoluntarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_voluntario_programa_voluntario_voluntario_id");

                    b.Navigation("Programa");

                    b.Navigation("Voluntario");
                });
#pragma warning restore 612, 618
        }
    }
}
